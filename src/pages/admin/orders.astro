---
// src/pages/admin/orders.astro
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getSession } from '../../lib/auth';
import { createClient } from '@supabase/supabase-js';

// Auth kontrol√º
const session = await getSession();
if (!session) {
  return Astro.redirect('/admin/login');
}

// Supabase client
const supabase = createClient(
  import.meta.env.PUBLIC_SUPABASE_URL,
  import.meta.env.SUPABASE_SERVICE_ROLE_KEY
);

// Sipari≈üleri √ßek
const { data: orders, error } = await supabase
  .from('orders')
  .select('*')
  .order('created_at', { ascending: false });

if (error) {
  console.error('‚ùå Orders fetch error:', error);
}
---

<BaseLayout title="Sipari≈üler - Admin">
  <div class="admin-layout">
    <aside class="admin-sidebar">
      <div class="sidebar-header">
        <h2>Pastƒ±rma Adasƒ±</h2>
        <p>Admin Panel</p>
      </div>

      <nav class="sidebar-nav">
        <a href="/admin/dashboard" class="nav-item">
          <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
          </svg>
          Dashboard
        </a>
        <a href="/admin/products" class="nav-item">
          <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4" />
          </svg>
          √úr√ºnler
        </a>
        <a href="/admin/orders" class="nav-item active">
          <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
          </svg>
          Sipari≈üler
        </a>
      </nav>

      <div class="sidebar-footer">
        <button id="logout-btn" class="btn btn-outline btn-full">√áƒ±kƒ±≈ü Yap</button>
      </div>
    </aside>

    <main class="admin-main">
      <header class="admin-header">
        <h1>üì¶ Sipari≈üler</h1>
        <p>T√ºm sipari≈ülerinizi buradan y√∂netebilirsiniz</p>
      </header>

      <div class="orders-list">
        {orders && orders.length > 0 ? (
          orders.map((order) => (
            <div class="order-card" data-order-id={order.id}>
              <div class="order-header">
                <div>
                  <h3>Sipari≈ü #{order.payment_id || order.id}</h3>
                  <p class="order-date">{new Date(order.created_at).toLocaleString('tr-TR')}</p>
                </div>
                <div class="order-status">
                  <span class={`status-badge status-${order.status}`}>
                    {order.status === 'pending' ? '‚è≥ Bekliyor' :
                     order.status === 'shipped' ? 'üì¶ Kargoda' :
                     order.status === 'delivered' ? '‚úÖ Teslim Edildi' : '‚ùå ƒ∞ptal'}
                  </span>
                </div>
              </div>

              <div class="order-details">
                <div class="detail-row">
                  <strong>M√º≈üteri:</strong>
                  <span>{order.customer_name}</span>
                </div>
                <div class="detail-row">
                  <strong>Email:</strong>
                  <span>{order.customer_email}</span>
                </div>
                {order.customer_phone && (
                  <div class="detail-row">
                    <strong>Telefon:</strong>
                    <span>{order.customer_phone}</span>
                  </div>
                )}
                <div class="detail-row">
                  <strong>Adres:</strong>
                  <span>{order.customer_address || order.shipping_address}</span>
                </div>
                <div class="detail-row">
                  <strong>Toplam:</strong>
                  <span class="price">{order.total}‚Ç∫</span>
                </div>
                {order.tracking_number && (
                  <div class="detail-row">
                    <strong>Kargo Takip:</strong>
                    <span>{order.tracking_number}</span>
                  </div>
                )}
              </div>

              <div class="order-actions">
                <button
                  class="btn btn-sm btn-primary send-tracking-btn"
                  data-order-id={order.id}
                  data-payment-id={order.payment_id || order.id}
                  data-email={order.customer_email}
                  data-name={order.customer_name}>
                  üìß Kargo Takip G√∂nder
                </button>
                <button
                  class="btn btn-sm btn-secondary view-details-btn"
                  data-items={JSON.stringify(order.items || [])}>
                  üëÅÔ∏è √úr√ºnleri G√∂r
                </button>
              </div>
            </div>
          ))
        ) : (
          <div class="empty-state">
            <svg width="64" height="64" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4" />
            </svg>
            <h3>Hen√ºz sipari≈ü yok</h3>
            <p>ƒ∞lk sipari≈üinizi bekliyoruz!</p>
          </div>
        )}
      </div>
    </main>
  </div>

  <!-- Modal -->
  <div id="items-modal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h2>üì¶ Sipari≈ü √úr√ºnleri</h2>
        <button class="modal-close">&times;</button>
      </div>
      <div id="modal-items" class="modal-body"></div>
    </div>
  </div>

  <style>
    .admin-layout {
      display: flex;
      min-height: 100vh;
      background: #f8f9fa;
    }

    .admin-sidebar {
      width: 260px;
      background: white;
      border-right: 1px solid #e9ecef;
      display: flex;
      flex-direction: column;
      position: fixed;
      height: 100vh;
      left: 0;
      top: 0;
    }

    .sidebar-header {
      padding: 2rem 1.5rem;
      border-bottom: 1px solid #e9ecef;
    }

    .sidebar-header h2 {
      font-size: 1.25rem;
      margin: 0;
      color: #c92a2a;
    }

    .sidebar-header p {
      font-size: 0.875rem;
      color: #868e96;
      margin: 0.25rem 0 0;
    }

    .sidebar-nav {
      flex: 1;
      padding: 1rem 0;
    }

    .nav-item {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      padding: 0.75rem 1.5rem;
      color: #495057;
      text-decoration: none;
      transition: all 0.2s;
    }

    .nav-item:hover {
      background: #f8f9fa;
      color: #c92a2a;
    }

    .nav-item.active {
      background: #fff5f5;
      color: #c92a2a;
      border-right: 3px solid #c92a2a;
    }

    .sidebar-footer {
      padding: 1.5rem;
      border-top: 1px solid #e9ecef;
    }

    .admin-main {
      margin-left: 260px;
      flex: 1;
      padding: 2rem;
    }

    .admin-header {
      margin-bottom: 2rem;
    }

    .admin-header h1 {
      font-size: 2rem;
      margin: 0 0 0.5rem;
      color: #212529;
    }

    .admin-header p {
      color: #868e96;
      margin: 0;
    }

    .orders-list {
      display: flex;
      flex-direction: column;
      gap: 1.5rem;
    }

    .order-card {
      background: white;
      border-radius: 12px;
      padding: 1.5rem;
      box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    }

    .order-header {
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
      margin-bottom: 1.5rem;
      padding-bottom: 1rem;
      border-bottom: 1px solid #e9ecef;
    }

    .order-header h3 {
      margin: 0 0 0.25rem;
      font-size: 1.25rem;
      color: #212529;
    }

    .order-date {
      color: #868e96;
      font-size: 0.875rem;
      margin: 0;
    }

    .status-badge {
      display: inline-block;
      padding: 0.375rem 0.75rem;
      border-radius: 6px;
      font-size: 0.875rem;
      font-weight: 500;
    }

    .status-pending {
      background: #fff3cd;
      color: #856404;
    }

    .status-shipped {
      background: #cfe2ff;
      color: #084298;
    }

    .status-delivered {
      background: #d1e7dd;
      color: #0f5132;
    }

    .status-cancelled {
      background: #f8d7da;
      color: #842029;
    }

    .order-details {
      display: flex;
      flex-direction: column;
      gap: 0.75rem;
      margin-bottom: 1.5rem;
    }

    .detail-row {
      display: flex;
      justify-content: space-between;
      align-items: center;
      gap: 1rem;
    }

    .detail-row strong {
      color: #495057;
      font-size: 0.875rem;
      min-width: 100px;
    }

    .detail-row span {
      color: #212529;
      flex: 1;
      text-align: right;
    }

    .price {
      font-weight: 600;
      color: #c92a2a;
      font-size: 1.125rem;
    }

    .order-actions {
      display: flex;
      gap: 0.75rem;
      flex-wrap: wrap;
    }

    .btn {
      padding: 0.5rem 1rem;
      border: none;
      border-radius: 6px;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.2s;
      text-decoration: none;
      display: inline-block;
      text-align: center;
    }

    .btn-sm {
      padding: 0.375rem 0.75rem;
      font-size: 0.875rem;
    }

    .btn-primary {
      background: #c92a2a;
      color: white;
    }

    .btn-primary:hover {
      background: #a61e1e;
    }

    .btn-secondary {
      background: #495057;
      color: white;
    }

    .btn-secondary:hover {
      background: #343a40;
    }

    .btn-outline {
      background: transparent;
      border: 1px solid #dee2e6;
      color: #495057;
    }

    .btn-outline:hover {
      background: #f8f9fa;
    }

    .btn-full {
      width: 100%;
    }

    .empty-state {
      text-align: center;
      padding: 4rem 2rem;
      background: white;
      border-radius: 12px;
    }

    .empty-state svg {
      color: #adb5bd;
      margin-bottom: 1rem;
    }

    .empty-state h3 {
      margin: 0 0 0.5rem;
      color: #495057;
    }

    .empty-state p {
      color: #868e96;
      margin: 0;
    }

    /* Modal Styles */
    .modal {
      display: none;
      position: fixed;
      z-index: 1000;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      align-items: center;
      justify-content: center;
    }

    .modal.show {
      display: flex;
    }

    .modal-content {
      background: white;
      border-radius: 12px;
      width: 90%;
      max-width: 600px;
      max-height: 80vh;
      overflow: hidden;
      display: flex;
      flex-direction: column;
    }

    .modal-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 1.5rem;
      border-bottom: 1px solid #e9ecef;
    }

    .modal-header h2 {
      margin: 0;
      font-size: 1.5rem;
    }

    .modal-close {
      background: none;
      border: none;
      font-size: 2rem;
      cursor: pointer;
      color: #868e96;
      line-height: 1;
      padding: 0;
      width: 32px;
      height: 32px;
    }

    .modal-close:hover {
      color: #212529;
    }

    .modal-body {
      padding: 1.5rem;
      overflow-y: auto;
    }

    .modal-item {
      padding: 1rem;
      background: #f8f9fa;
      border-radius: 8px;
      margin-bottom: 1rem;
    }

    .modal-item:last-child {
      margin-bottom: 0;
    }

    .modal-item-name {
      font-weight: 600;
      font-size: 1.1rem;
      margin-bottom: 0.5rem;
    }

    .modal-item-price {
      color: #c92a2a;
      font-weight: 600;
      font-size: 1.2rem;
    }

    @media (max-width: 768px) {
      .admin-sidebar {
        transform: translateX(-100%);
      }

      .admin-main {
        margin-left: 0;
      }

      .order-actions {
        flex-direction: column;
      }

      .btn-sm {
        width: 100%;
      }

      .detail-row {
        flex-direction: column;
        align-items: flex-start;
      }

      .detail-row span {
        text-align: left;
      }
    }
  </style>

  <script>
    // Logout i≈ülemi
    document.getElementById('logout-btn')?.addEventListener('click', async () => {
      const response = await fetch('/api/auth/logout', { method: 'POST' });
      if (response.ok) {
        window.location.href = '/admin/login';
      }
    });

    // Kargo takip g√∂nderme
    document.querySelectorAll('.send-tracking-btn').forEach(btn => {
      btn.addEventListener('click', async (e) => {
        const target = e.currentTarget as HTMLButtonElement;
        const orderId = target.dataset.orderId;
        const paymentId = target.dataset.paymentId;
        const email = target.dataset.email;
        const name = target.dataset.name;

        if (!orderId || !email) return;

        const trackingNumber = prompt('Kargo takip numarasƒ±nƒ± girin:');
        if (!trackingNumber) return;

        const trackingUrl = prompt('Kargo takip URL (opsiyonel):') || '';

        try {
          target.disabled = true;
          target.textContent = '‚è≥ G√∂nderiliyor...';

          // Email g√∂nder
          const emailResponse = await fetch('/api/send-order-email', {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              customerEmail: email,
              customerName: name,
              orderNumber: paymentId || orderId,
              trackingNumber,
              trackingUrl
            })
          });

          if (!emailResponse.ok) {
            throw new Error('Email g√∂nderilemedi');
          }

          // Veritabanƒ±nƒ± g√ºncelle
          const updateResponse = await fetch('/api/orders/update-tracking', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              orderId,
              trackingNumber,
              trackingUrl,
              status: 'shipped'
            })
          });

          if (updateResponse.ok) {
            alert('‚úÖ Kargo takip bilgisi ba≈üarƒ±yla g√∂nderildi!');
            location.reload();
          } else {
            alert('‚ö†Ô∏è Email g√∂nderildi ama veritabanƒ± g√ºncellenemedi');
          }
        } catch (error) {
          console.error('Error:', error);
          alert('‚ùå Bir hata olu≈ütu: ' + error.message);
          target.disabled = false;
          target.textContent = 'üìß Kargo Takip G√∂nder';
        }
      });
    });

    // √úr√ºnleri g√∂ster
    const modal = document.getElementById('items-modal');
    const modalClose = document.querySelector('.modal-close');
    const modalItems = document.getElementById('modal-items');

    document.querySelectorAll('.view-details-btn').forEach(btn => {
      btn.addEventListener('click', (e) => {
        const target = e.currentTarget as HTMLButtonElement;
        const itemsJson = target.dataset.items;

        try {
          const items = JSON.parse(itemsJson || '[]');

          if (!items || items.length === 0) {
            modalItems!.innerHTML = '<p>√úr√ºn bilgisi bulunamadƒ±</p>';
          } else {
            modalItems!.innerHTML = items.map((item: any) => `
              <div class="modal-item">
                <div class="modal-item-name">${item.name}</div>
                <div class="modal-item-price">${parseFloat(item.price).toFixed(2)}‚Ç∫</div>
              </div>
            `).join('');
          }

          modal?.classList.add('show');
        } catch (err) {
          console.error('Items parse error:', err);
          modalItems!.innerHTML = '<p>√úr√ºn bilgisi y√ºklenemedi</p>';
          modal?.classList.add('show');
        }
      });
    });

    modalClose?.addEventListener('click', () => {
      modal?.classList.remove('show');
    });

    modal?.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.classList.remove('show');
      }
    });
  </script>
</BaseLayout>