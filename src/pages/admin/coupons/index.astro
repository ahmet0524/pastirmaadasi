---
// src/pages/admin/coupons/index.astro
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { getSession } from '../../../lib/auth';
import { getAllCoupons } from '../../../lib/coupons';

const session = await getSession();
if (!session) {
  return Astro.redirect('/admin/login');
}

const coupons = await getAllCoupons();
---

<BaseLayout title="Kupon Yönetimi">
  <div class="admin-layout">
    <aside class="admin-sidebar">
      <!-- Sidebar -->
    </aside>

    <main class="admin-main">
      <header class="admin-header">
        <div class="header-content">
          <div>
            <h1>Kuponlar</h1>
            <p>{coupons.length} kupon bulundu</p>
          </div>
          <a href="/admin/coupons/new" class="btn btn-primary">
            <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
            </svg>
            Yeni Kupon Oluştur
          </a>
        </div>
      </header>

      <div class="coupons-grid">
        {coupons.map(coupon => {
          const now = new Date();
          const validUntil = coupon.valid_until ? new Date(coupon.valid_until) : null;
          const isExpired = validUntil && now > validUntil;
          const isLimitReached = coupon.usage_limit && coupon.used_count >= coupon.usage_limit;

          return (
            <div class={`coupon-card ${!coupon.is_active || isExpired || isLimitReached ? 'inactive' : ''}`}>
              <div class="coupon-header">
                <div class="coupon-code">{coupon.code}</div>
                <div class="coupon-discount">%{coupon.discount_percent}</div>
              </div>

              <div class="coupon-details">
                <div class="detail-row">
                  <span>Min. Sipariş:</span>
                  <strong>{coupon.min_order_amount || 0}₺</strong>
                </div>
                <div class="detail-row">
                  <span>Max. İndirim:</span>
                  <strong>{coupon.max_discount_amount || '∞'}₺</strong>
                </div>
                <div class="detail-row">
                  <span>Kullanım:</span>
                  <strong>{coupon.used_count} / {coupon.usage_limit || '∞'}</strong>
                </div>
                {validUntil && (
                  <div class="detail-row">
                    <span>Geçerlilik:</span>
                    <strong>{validUntil.toLocaleDateString('tr-TR')}</strong>
                  </div>
                )}
              </div>

              <div class="coupon-status">
                {isExpired && <span class="badge-error">Süresi Doldu</span>}
                {isLimitReached && <span class="badge-error">Limit Doldu</span>}
                {!coupon.is_active && <span class="badge-error">Pasif</span>}
                {coupon.is_active && !isExpired && !isLimitReached && (
                  <span class="badge-success">Aktif</span>
                )}
              </div>

              <div class="coupon-actions">
                <button class="btn-icon toggle-btn" data-id={coupon.id} data-active={coupon.is_active} title={coupon.is_active ? 'Pasif Yap' : 'Aktif Yap'}>
                  {coupon.is_active ? (
                    <svg width="18" height="18" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636" />
                    </svg>
                  ) : (
                    <svg width="18" height="18" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                  )}
                </button>
                <button class="btn-icon delete-btn" data-id={coupon.id} title="Sil">
                  <svg width="18" height="18" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                  </svg>
                </button>
              </div>
            </div>
          );
        })}
      </div>
    </main>
  </div>
</BaseLayout>

<style>
  .coupons-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: 1.5rem;
  }

  .coupon-card {
    background: white;
    border-radius: var(--radius-lg);
    padding: 1.5rem;
    box-shadow: 0 2px 10px var(--shadow);
    border: 2px solid var(--secondary);
    position: relative;
    transition: var(--transition);
  }

  .coupon-card.inactive {
    border-color: var(--border-color);
    opacity: 0.6;
  }

  .coupon-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    padding-bottom: 1rem;
    border-bottom: 2px dashed var(--border-color);
  }

  .coupon-code {
    font-size: 1.5rem;
    font-weight: bold;
    color: var(--primary);
    font-family: 'Courier New', monospace;
    letter-spacing: 2px;
  }

  .coupon-discount {
    background: var(--secondary);
    color: var(--text-dark);
    font-size: 1.75rem;
    font-weight: bold;
    padding: 0.5rem 1rem;
    border-radius: var(--radius-md);
  }

  .coupon-details {
    margin-bottom: 1rem;
  }

  .detail-row {
    display: flex;
    justify-content: space-between;
    padding: 0.5rem 0;
    font-size: 0.875rem;
  }

  .detail-row span {
    color: var(--text-gray);
  }

  .coupon-status {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }

  .badge-success {
    background: #d1fae5;
    color: #065f46;
    padding: 4px 12px;
    border-radius: 20px;
    font-size: 0.875rem;
    font-weight: 600;
  }

  .badge-error {
    background: #fee2e2;
    color: #991b1b;
    padding: 4px 12px;
    border-radius: 20px;
    font-size: 0.875rem;
    font-weight: 600;
  }

  .coupon-actions {
    display: flex;
    gap: 0.5rem;
    justify-content: flex-end;
    padding-top: 1rem;
    border-top: 1px solid var(--border-color);
  }
</style>

<script>
  import { supabaseAdmin } from '../../../lib/supabase';

  document.querySelectorAll('.toggle-btn').forEach(btn => {
    btn.addEventListener('click', async (e) => {
      const button = e.currentTarget as HTMLElement;
      const id = button.dataset.id;
      const isActive = button.dataset.active === 'true';

      try {
        const { error } = await supabaseAdmin
          .from('coupons')
          .update({ is_active: !isActive })
          .eq('id', id);

        if (error) throw error;
        window.location.reload();
      } catch (error) {
        alert('Kupon durumu değiştirilirken bir hata oluştu.');
        console.error(error);
      }
    });
  });

  document.querySelectorAll('.delete-btn').forEach(btn => {
    btn.addEventListener('click', async (e) => {
      const id = (e.currentTarget as HTMLElement).dataset.id;

      if (!confirm('Bu kuponu silmek istediğinizden emin misiniz?')) {
        return;
      }

      try {
        const { error } = await supabaseAdmin
          .from('coupons')
          .delete()
          .eq('id', id);

        if (error) throw error;
        window.location.reload();
      } catch (error) {
        alert('Kupon silinirken bir hata oluştu.');
        console.error(error);
      }
    });
  });
</script>

---
// src/pages/admin/coupons/new.astro
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { getSession } from '../../../lib/auth';

const session = await getSession();
if (!session) {
  return Astro.redirect('/admin/login');
}
---

<BaseLayout title="Yeni Kupon Oluştur">
  <div class="admin-layout">
    <aside class="admin-sidebar">
      <!-- Sidebar -->
    </aside>

    <main class="admin-main">
      <header class="admin-header">
        <h1>Yeni Kupon Oluştur</h1>
        <p>İndirim kuponu tanımlayın</p>
      </header>

      <div class="form-container">
        <form id="coupon-form" class="product-form">
          <div class="form-grid">
            <div class="form-group">
              <label for="code">Kupon Kodu *</label>
              <input
                type="text"
                id="code"
                name="code"
                required
                placeholder="HOSGELDIN10"
                style="text-transform: uppercase;"
              />
              <small>Büyük harfler ve sayılardan oluşmalı</small>
            </div>

            <div class="form-group">
              <label for="discount_percent">İndirim Oranı (%) *</label>
              <input
                type="number"
                id="discount_percent"
                name="discount_percent"
                min="1"
                max="100"
                required
              />
            </div>

            <div class="form-group">
              <label for="min_order_amount">Minimum Sipariş Tutarı (₺)</label>
              <input
                type="number"
                id="min_order_amount"
                name="min_order_amount"
                step="0.01"
                value="0"
              />
            </div>

            <div class="form-group">
              <label for="max_discount_amount">Maksimum İndirim Tutarı (₺)</label>
              <input
                type="number"
                id="max_discount_amount"
                name="max_discount_amount"
                step="0.01"
              />
              <small>Boş bırakılırsa limit olmaz</small>
            </div>

            <div class="form-group">
              <label for="usage_limit">Kullanım Limiti</label>
              <input
                type="number"
                id="usage_limit"
                name="usage_limit"
                min="1"
              />
              <small>Boş bırakılırsa sınırsız kullanım</small>
            </div>

            <div class="form-group">
              <label for="valid_until">Geçerlilik Tarihi</label>
              <input
                type="date"
                id="valid_until"
                name="valid_until"
              />
              <small>Boş bırakılırsa süresiz</small>
            </div>
          </div>

          <div class="form-group">
            <label>
              <input type="checkbox" id="is_active" name="is_active" checked />
              Kuponu aktif olarak yayınla
            </label>
          </div>

          <div class="form-actions">
            <a href="/admin/coupons" class="btn btn-outline">İptal</a>
            <button type="submit" class="btn btn-primary">Kuponu Kaydet</button>
          </div>
        </form>
      </div>
    </main>
  </div>
</BaseLayout>

<script>
  import { supabaseAdmin } from '../../../lib/supabase';

  // Auto uppercase code
  document.getElementById('code')?.addEventListener('input', (e) => {
    const input = e.target as HTMLInputElement;
    input.value = input.value.toUpperCase().replace(/[^A-Z0-9]/g, '');
  });

  document.getElementById('coupon-form')?.addEventListener('submit', async (e) => {
    e.preventDefault();

    const form = e.target as HTMLFormElement;
    const formData = new FormData(form);

    const couponData = {
      code: formData.get('code')?.toString().toUpperCase(),
      discount_percent: parseInt(formData.get('discount_percent')?.toString() || '0'),
      min_order_amount: parseFloat(formData.get('min_order_amount')?.toString() || '0'),
      max_discount_amount: formData.get('max_discount_amount')
        ? parseFloat(formData.get('max_discount_amount')?.toString() || '0')
        : null,
      usage_limit: formData.get('usage_limit')
        ? parseInt(formData.get('usage_limit')?.toString() || '0')
        : null,
      valid_until: formData.get('valid_until') || null,
      is_active: formData.get('is_active') === 'on'
    };

    try {
      const { error } = await supabaseAdmin
        .from('coupons')
        .insert([couponData]);

      if (error) throw error;

      alert('Kupon başarıyla oluşturuldu!');
      window.location.href = '/admin/coupons';
    } catch (error: any) {
      alert('Hata: ' + error.message);
      console.error(error);
    }
  });
</script>