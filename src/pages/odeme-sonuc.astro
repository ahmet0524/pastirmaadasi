---
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

const token = Astro.url.searchParams.get('token');
const error = Astro.url.searchParams.get('error');

let paymentResult = null;
let errorMessage = '';

if (error) {
  errorMessage = error === 'no-token' ? 'Token bulunamadı' : 'Ödeme işlemi başarısız';
} else if (token) {
  try {
    const Iyzipay = (await import("iyzipay")).default;

    const iyzipay = new Iyzipay({
      apiKey: import.meta.env.IYZICO_API_KEY || "sandbox-iMWOs8liBFXBEw49vXevtfru7ZnPkIDs",
      secretKey: import.meta.env.IYZICO_SECRET_KEY || "sandbox-cUbewaUJPvAzNUUMsXaGzbUzK2gsYudG",
      uri: "https://sandbox-api.iyzipay.com",
    });

    paymentResult = await new Promise((resolve, reject) => {
      iyzipay.checkoutForm.retrieve({
        locale: Iyzipay.LOCALE.TR,
        conversationId: Date.now().toString(),
        token: token
      }, (err, result) => {
        if (err) {
          console.error("❌ İyzico retrieve hatası:", err);
          reject(err);
        } else {
          console.log("✅ İyzico sonucu:", result);
          resolve(result);
        }
      });
    });
  } catch (err) {
    console.error("💥 Ödeme sonucu alınamadı:", err);
    errorMessage = err.message || 'Ödeme sonucu alınamadı';
  }
}

const isSuccess = paymentResult?.status === "success" && paymentResult?.paymentStatus === "SUCCESS";
const orderId = paymentResult?.basketId || 'N/A';
const paidPrice = paymentResult?.paidPrice || '0';
---

<BaseLayout title={isSuccess ? "Ödeme Başarılı" : "Ödeme Hatası"} description="Ödeme sonucu">
  <Header slot="header" />

  <section class="result-page">
    <div class="container">
      <div class="result-card">
        {isSuccess ? (
          <>
            <div class="success-icon">
              <svg width="80" height="80" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>

            <h1>🎉 Siparişiniz Alındı!</h1>
            <p class="success-message">Ödemeniz başarıyla tamamlandı. Siparişiniz en kısa sürede hazırlanacaktır.</p>

            <div class="order-info">
              <div class="info-item">
                <span class="label">Sipariş No:</span>
                <span class="value">{orderId}</span>
              </div>
              <div class="info-item">
                <span class="label">Ödenen Tutar:</span>
                <span class="value">{paidPrice} ₺</span>
              </div>
              <div class="info-item">
                <span class="label">Durum:</span>
                <span class="value status-success">✅ Ödeme Alındı</span>
              </div>
            </div>

            <div class="success-actions">
              <a href="/" class="btn btn-primary">Ana Sayfaya Dön</a>
              <a href="/online-alisveris" class="btn btn-secondary">Alışverişe Devam Et</a>
            </div>

            <div class="next-steps">
              <h3>📦 Sonraki Adımlar</h3>
              <ul>
                <li>Sipariş onay e-postası gönderilecektir</li>
                <li>Siparişiniz hazırlandığında bilgilendirileceksiniz</li>
                <li>Kargo takip numaranız tarafınıza iletilecektir</li>
              </ul>
            </div>
          </>
        ) : (
          <>
            <div class="error-icon">
              <svg width="80" height="80" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>

            <h1>❌ Ödeme Başarısız</h1>
            <p class="error-message">
              {errorMessage || paymentResult?.errorMessage || 'Ödeme işlemi tamamlanamadı. Lütfen tekrar deneyin.'}
            </p>

            <div class="error-actions">
              <a href="/sepet" class="btn btn-primary">Sepete Dön</a>
              <a href="/iletisim" class="btn btn-secondary">Yardım Al</a>
            </div>
          </>
        )}
      </div>
    </div>
  </section>

  <Footer slot="footer" />
</BaseLayout>

<style>
.result-page {
  padding: 4rem 0;
  min-height: 70vh;
  display: flex;
  align-items: center;
}

.result-card {
  background: white;
  border-radius: 20px;
  padding: 3rem;
  max-width: 600px;
  margin: 0 auto;
  text-align: center;
  box-shadow: 0 20px 60px rgba(0,0,0,0.1);
}

.success-icon, .error-icon {
  width: 80px;
  height: 80px;
  margin: 0 auto 2rem;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  animation: scaleIn 0.5s ease-out;
}

.success-icon {
  background: #10b981;
}

.error-icon {
  background: #ef4444;
}

.success-icon svg, .error-icon svg {
  color: white;
}

@keyframes scaleIn {
  from {
    transform: scale(0);
  }
  to {
    transform: scale(1);
  }
}

.result-card h1 {
  color: #1f2937;
  margin-bottom: 1rem;
  font-size: 2rem;
}

.success-message, .error-message {
  color: #6b7280;
  font-size: 1.1rem;
  margin-bottom: 2rem;
}

.order-info {
  background: #f9fafb;
  border-radius: 12px;
  padding: 1.5rem;
  margin-bottom: 2rem;
}

.info-item {
  display: flex;
  justify-content: space-between;
  padding: 0.75rem 0;
  border-bottom: 1px solid #e5e7eb;
}

.info-item:last-child {
  border-bottom: none;
}

.label {
  font-weight: 600;
  color: #4b5563;
}

.value {
  color: #1f2937;
  font-weight: 500;
}

.status-success {
  color: #10b981;
}

.success-actions, .error-actions {
  display: flex;
  gap: 1rem;
  justify-content: center;
  margin-bottom: 2rem;
}

.btn {
  padding: 0.75rem 2rem;
  border-radius: 8px;
  text-decoration: none;
  font-weight: 600;
  transition: all 0.3s;
}

.btn-primary {
  background: #667eea;
  color: white;
}

.btn-primary:hover {
  background: #5568d3;
  transform: translateY(-2px);
}

.btn-secondary {
  background: white;
  color: #667eea;
  border: 2px solid #667eea;
}

.btn-secondary:hover {
  background: #667eea;
  color: white;
  transform: translateY(-2px);
}

.next-steps {
  text-align: left;
  background: #fffbeb;
  border-radius: 12px;
  padding: 1.5rem;
  border: 2px solid #fbbf24;
}

.next-steps h3 {
  margin-top: 0;
  color: #92400e;
  font-size: 1.1rem;
}

.next-steps ul {
  margin: 0;
  padding-left: 1.5rem;
  color: #78350f;
}

.next-steps li {
  margin: 0.5rem 0;
}

@media (max-width: 768px) {
  .result-card {
    padding: 2rem;
  }

  .success-actions, .error-actions {
    flex-direction: column;
  }

  .btn {
    width: 100%;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', async () => {
  const urlParams = new URLSearchParams(window.location.search);
  const token = urlParams.get('token');
  const hasError = urlParams.has('error');

  if (token && !hasError) {
    const successIcon = document.querySelector('.success-icon');

    if (successIcon) {
      try {
        console.log('📧 Email gönderimi için verify-payment API çağrılıyor...');

        // Müşteri bilgileri
        const customerData = {
          email: localStorage.getItem('lastOrderEmail'),
          name: localStorage.getItem('lastOrderName'),
          surname: localStorage.getItem('lastOrderSurname'),
          phone: localStorage.getItem('lastOrderPhone'),
          identity: localStorage.getItem('lastOrderIdentity'),
          address: localStorage.getItem('lastOrderAddress'),
          city: localStorage.getItem('lastOrderCity'),
          zipcode: localStorage.getItem('lastOrderZipcode')
        };

        // 🛒 SEPET BİLGİLERİ
        const cartData = localStorage.getItem('lastOrderCart');
        let cartItems = [];

        if (cartData) {
          try {
            cartItems = JSON.parse(cartData);
            console.log('🛒 Sepet localStorage\'dan alındı:', cartItems);
          } catch (e) {
            console.error('❌ Sepet parse hatası:', e);
          }
        } else {
          console.warn('⚠️ lastOrderCart bulunamadı!');
        }

        console.log('📦 API\'ye gönderilecek müşteri bilgileri:', customerData);
        console.log('🛍️ API\'ye gönderilecek sepet:', cartItems);

        const response = await fetch('/api/verify-payment', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            token,
            customerEmail: customerData.email,
            customerName: customerData.name,
            customerSurname: customerData.surname,
            customerPhone: customerData.phone,
            customerIdentity: customerData.identity,
            customerAddress: customerData.address,
            customerCity: customerData.city,
            customerZipcode: customerData.zipcode,
            cartItems: cartItems // 🛒 ÖNEMLİ!
          })
        });

        const data = await response.json();

        if (data.status === 'success') {
          console.log('✅ Email başarılı:', data);

          // Temizlik
          localStorage.removeItem('cart');
          localStorage.removeItem('lastOrderCart');
          localStorage.removeItem('lastOrderEmail');
          localStorage.removeItem('lastOrderName');
          localStorage.removeItem('lastOrderSurname');
          localStorage.removeItem('lastOrderPhone');
          localStorage.removeItem('lastOrderIdentity');
          localStorage.removeItem('lastOrderAddress');
          localStorage.removeItem('lastOrderCity');
          localStorage.removeItem('lastOrderZipcode');

          window.dispatchEvent(new Event('cartUpdated'));
          console.log('🗑️ Temizlendi');
        } else {
          console.warn('⚠️ Email hatası:', data.errorMessage);
        }
      } catch (error) {
        console.error('❌ Hata:', error);
      }
    }
  }
});
</script>
