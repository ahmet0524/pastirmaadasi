---
// src/pages/odeme-sonuc.astro
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

export const prerender = false;
---

<BaseLayout title="Ödeme Sonucu" description="Ödeme işleminizin sonucu">
  <Header slot="header" />

  <section class="payment-result-page">
    <div class="container">
      <div id="result-content" class="result-box loading">
        <div class="spinner"></div>
        <p>Ödeme durumu kontrol ediliyor...</p>
      </div>
    </div>
  </section>

  <Footer slot="footer" />
</BaseLayout>

<style>
  .payment-result-page {
    min-height: 100vh;
    padding: 4rem 1rem;
    background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .container {
    max-width: 700px;
    margin: 0 auto;
    width: 100%;
  }

  .result-box {
    background: white;
    border-radius: 20px;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
    padding: 3rem;
    text-align: center;
  }

  .result-box.loading {
    padding: 4rem 2rem;
  }

  .spinner {
    width: 50px;
    height: 50px;
    margin: 0 auto 1.5rem;
    border: 4px solid #f3f4f6;
    border-top-color: #dc2626;
    border-radius: 50%;
    animation: spin 0.8s linear infinite;
  }

  @keyframes spin {
    to { transform: rotate(360deg); }
  }

  .result-box h2 {
    font-size: 2rem;
    margin-bottom: 1rem;
    color: #1f2937;
  }

  .result-box p {
    color: #6b7280;
    font-size: 1.125rem;
    margin-bottom: 0.5rem;
  }

  .result-box.success {
    border-top: 5px solid #10b981;
  }

  .result-box.error {
    border-top: 5px solid #ef4444;
  }

  .success-icon, .error-icon {
    width: 80px;
    height: 80px;
    margin: 0 auto 1.5rem;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .success-icon {
    background: #d1fae5;
    color: #10b981;
  }

  .error-icon {
    background: #fee2e2;
    color: #ef4444;
  }

  .order-details {
    background: #f9fafb;
    border-radius: 12px;
    padding: 1.5rem;
    margin: 2rem 0;
    text-align: left;
  }

  .order-details h3 {
    font-size: 1.25rem;
    margin-bottom: 1rem;
    color: #1f2937;
  }

  .detail-row {
    display: flex;
    justify-content: space-between;
    padding: 0.75rem 0;
    border-bottom: 1px solid #e5e7eb;
    font-size: 1rem;
  }

  .detail-row:last-child {
    border-bottom: none;
  }

  .detail-row span:first-child {
    color: #6b7280;
    font-weight: 500;
  }

  .detail-row span:last-child {
    color: #1f2937;
    font-weight: 600;
  }

  .action-buttons {
    display: flex;
    gap: 1rem;
    margin-top: 2rem;
    flex-wrap: wrap;
    justify-content: center;
  }

  .btn {
    padding: 1rem 2rem;
    border-radius: 10px;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.2s;
    display: inline-block;
    font-size: 1rem;
  }

  .btn-primary {
    background: linear-gradient(135deg, #dc2626 0%, #b91c1c 100%);
    color: white;
    box-shadow: 0 4px 15px rgba(220, 38, 38, 0.3);
  }

  .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(220, 38, 38, 0.4);
  }

  .btn-secondary {
    background: #6b7280;
    color: white;
  }

  .btn-secondary:hover {
    background: #4b5563;
    transform: translateY(-2px);
  }

  @media (max-width: 640px) {
    .result-box {
      padding: 2rem 1.5rem;
    }

    .result-box h2 {
      font-size: 1.5rem;
    }

    .action-buttons {
      flex-direction: column;
    }

    .btn {
      width: 100%;
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const urlParams = new URLSearchParams(window.location.search);
    const token = urlParams.get("token");
    const resultContent = document.getElementById("result-content");

    if (!resultContent) return;

    if (token) {
      console.log('🔍 Token bulundu:', token);
      
      const storedEmail = localStorage.getItem('lastOrderEmail');
      const storedName = localStorage.getItem('lastOrderName');
      const storedSurname = localStorage.getItem('lastOrderSurname');
      
      console.log('💾 localStorage verileri:', {
        email: storedEmail,
        name: storedName,
        surname: storedSurname
      });

      const requestBody = {
        token: token,
        customerEmail: storedEmail || '',
        customerName: storedName || '',
        customerSurname: storedSurname || ''
      };

      console.log('📤 API\'ye gönderilen veri:', requestBody);

      fetch("/api/verify-payment", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
        body: JSON.stringify(requestBody),
      })
        .then((res) => {
          console.log('📡 Response status:', res.status);
          if (!res.ok) throw new Error("HTTP Error " + res.status);
          return res.json();
        })
        .then((data) => {
          console.log('📦 API Response:', data);

          if (data.status === "success") {
            let emailStatusHTML = '';
            if (data.emailSent === true) {
              emailStatusHTML = '<p style="color:#10b981; font-size:14px; margin-top:10px;">✅ E-posta gönderildi</p>';
            } else if (data.emailError) {
              emailStatusHTML = `<p style="color:#f59e0b; font-size:14px; margin-top:10px;">⚠️ E-posta gönderim hatası: ${data.emailError}</p>`;
            } else if (data.emailSent === false) {
              emailStatusHTML = '<p style="color:#f59e0b; font-size:14px; margin-top:10px;">⚠️ E-posta gönderilemedi</p>';
            }

            resultContent.className = "result-box success";
            resultContent.innerHTML = `
              <div class="success-icon">
                <svg width="48" height="48" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                </svg>
              </div>
              <h2>✅ Ödeme Başarılı!</h2>
              <p>Siparişiniz başarıyla alındı.</p>
              <p>Kısa süre içinde e-posta ile sipariş detaylarınız gönderilecektir.</p>
              ${emailStatusHTML}
              <div class="order-details">
                <h3>Sipariş Detayları</h3>
                <div class="detail-row"><span>Ödeme ID:</span><span>${data.paymentId || "N/A"}</span></div>
                <div class="detail-row"><span>Tutar:</span><span>${data.paidPrice || data.price} ₺</span></div>
                <div class="detail-row"><span>Durum:</span><span style="color:#10b981;">Başarılı</span></div>
              </div>
              <div class="action-buttons">
                <a href="/" class="btn btn-primary">Ana Sayfaya Dön</a>
                <a href="/online-alisveris" class="btn btn-secondary">Alışverişe Devam Et</a>
              </div>
            `;

            localStorage.removeItem('lastOrderEmail');
            localStorage.removeItem('lastOrderName');
            localStorage.removeItem('lastOrderSurname');
            localStorage.removeItem('cart');
            console.log('🗑️ localStorage temizlendi');

          } else {
            resultContent.className = "result-box error";
            resultContent.innerHTML = `
              <div class="error-icon">
                <svg width="48" height="48" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
              </div>
              <h2>❌ Ödeme Başarısız</h2>
              <p>${data.errorMessage || "Ödeme işlemi tamamlanamadı."}</p>
              <p>Lütfen tekrar deneyin veya farklı bir ödeme yöntemi kullanın.</p>
              <div class="action-buttons">
                <a href="/sepet" class="btn btn-primary">Sepete Dön</a>
                <a href="/" class="btn btn-secondary">Ana Sayfaya Dön</a>
              </div>
            `;
          }
        })
        .catch((error) => {
          console.error('❌ Fetch error:', error);
          resultContent.className = "result-box error";
          resultContent.innerHTML = `
            <div class="error-icon">
              <svg width="48" height="48" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
              </svg>
            </div>
            <h2>⚠️ Bir Hata Oluştu</h2>
            <p>Ödeme doğrulama sırasında bir hata meydana geldi.</p>
            <p>Lütfen daha sonra tekrar deneyin veya destek ekibiyle iletişime geçin.</p>
            <div class="action-buttons">
              <a href="/sepet" class="btn btn-primary">Sepete Dön</a>
              <a href="/" class="btn btn-secondary">Ana Sayfaya Dön</a>
            </div>
          `;
        });
    } else {
      console.warn('⚠️ Token bulunamadı!');
      resultContent.className = "result-box error";
      resultContent.innerHTML = `
        <div class="error-icon">
          <svg width="48" height="48" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
          </svg>
        </div>
        <h2>⚠️ Geçersiz İstek</h2>
        <p>Ödeme doğrulama bilgisi bulunamadı.</p>
        <p>Lütfen sipariş sürecinizi yeniden başlatın.</p>
        <div class="action-buttons">
          <a href="/sepet" class="btn btn-primary">Sepete Dön</a>
          <a href="/" class="btn btn-secondary">Ana Sayfaya Dön</a>
        </div>
      `;
    }
  });
</script>