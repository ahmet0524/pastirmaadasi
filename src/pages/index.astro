---
// src/pages/index.astro
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import ProductCard from '../components/ProductCard.astro';
import { supabase } from '../lib/supabase';

// Öne çıkan ürünleri çek
const { data: featuredProducts } = await supabase
  .from('products')
  .select('*')
  .eq('is_active', true)
  .limit(4);
---

<BaseLayout title="Pastırma Adası" description="Kayseri'nin eşsiz lezzetleri">
  <Header slot="header" />

  <!-- Hero Section -->
  <section class="hero-section">
    <div class="hero-content">
      <div class="hero-header">
        <h1 class="hero-title">Pastırma Adası</h1>
        <p class="hero-subtitle">Kayseri'nin en kaliteli geleneksel lezzetleri</p>
      </div>

      <div class="hero-cards">
        <div class="hero-card" data-link="/online-alisveris">
          <div class="hero-card-image">
            <img src="/assets/image/online-shopping.webp" alt="Online Alışveriş" loading="eager" />
          </div>
          <div class="hero-card-content">
            <div class="card-icon">
              <svg width="48" height="48" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
              </svg>
            </div>
            <h2>Online Alışveriş</h2>
            <p>Ürünlerimizi keşfedin ve sipariş verin</p>
            <span class="hero-card-arrow">
              Hemen Alışverişe Başla
              <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
              </svg>
            </span>
          </div>
        </div>

        <div class="hero-card" data-link="/kayseri-sofrasi">
          <div class="hero-card-image">
            <img src="/assets/image/kayseri-sofrasi.webp" alt="Kayseri Sofrası" loading="eager" />
          </div>
          <div class="hero-card-content">
            <div class="card-icon">
              <svg width="48" height="48" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 21h18M3 10h18M3 7l9-4 9 4M4 10h16v11H4V10z" />
              </svg>
            </div>
            <h2>Kayseri Sofrası</h2>
            <p>Restoranımızda yöresel lezzetler</p>
            <span class="hero-card-arrow">
              Menümüzü İnceleyin
              <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
              </svg>
            </span>
          </div>
        </div>
      </div>
    </div>

    <div class="scroll-indicator" style="display: none;">
      <span>Aşağı Kaydırın</span>
      <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3" />
      </svg>
    </div>
  </section>

  <!-- Perde Animasyonu -->
  <div id="curtain-overlay" class="curtain-overlay">
    <div class="curtain curtain-left"></div>
    <div class="curtain curtain-right"></div>
    <div class="curtain-logo">
      <h2>Pastırma Adası</h2>
    </div>
  </div>

  <!-- Features Section -->
  <section class="features-section">
    <div class="container">
      <h2 class="section-title">Neden Pastırma Adası?</h2>

      <div class="features-grid">
        <div class="feature-card">
          <div class="feature-icon">
            <svg width="40" height="40" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </div>
          <h3>Kaliteli Ürünler</h3>
          <p>Özenle seçilmiş, geleneksel yöntemlerle üretilmiş ürünler</p>
        </div>

        <div class="feature-card">
          <div class="feature-icon">
            <svg width="40" height="40" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </div>
          <h3>Hızlı Teslimat</h3>
          <p>1000₺ üzeri siparişlerde ücretsiz kargo</p>
        </div>

        <div class="feature-card">
          <div class="feature-icon">
            <svg width="40" height="40" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2z" />
            </svg>
          </div>
          <h3>İki Farklı Deneyim</h3>
          <p>Online alışveriş ve restoranımızda yöresel lezzetler</p>
        </div>
      </div>
    </div>
  </section>

  <!-- Featured Products Section -->
  {featuredProducts && featuredProducts.length > 0 && (
    <section class="featured-products-section">
      <div class="container">
        <div class="section-header-featured">
          <h2 class="section-title">Öne Çıkan Ürünler</h2>
          <p class="section-subtitle">En çok tercih edilen geleneksel lezzetlerimiz</p>
        </div>

        <div class="products-grid-featured">
          {featuredProducts.map((product, index) => (
            <ProductCard
              id={product.id}
              slug={product.slug}
              name={product.name}
              price={product.price}
              images={product.images}
              unit={product.unit}
              description={product.description}
              variants={product.variants}
              index={index}
            />
          ))}
        </div>

        <div class="view-all-container">
          <a href="/online-alisveris" class="btn-view-all">
            Tüm Ürünleri Görüntüle
            <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
          </a>
        </div>
      </div>
    </section>
  )}

  <!-- Info Section -->
  <section class="info-section">
    <div class="container">
      <div class="info-content">
        <div class="info-text">
          <h2>Kayseri'nin Eşsiz Lezzetleri</h2>
          <p>Geleneksel tatları modern dokunuşlarla sunuyoruz. Pastırma Adası olarak, Kayseri'nin en kaliteli pastırma, sucuk ve mantılarını hem online hem de restoranımızda sizlere sunuyoruz.</p>
          <p>Yılların deneyimi ve titiz üretim süreçleriyle hazırlanan ürünlerimiz, sofranıza değer katıyor.</p>
        </div>
        <div class="info-image">
          <img src="/assets/image/kayseri-mantisi.webp" alt="Hakkımızda" loading="lazy" />
        </div>
      </div>
    </div>
  </section>

  <!-- CTA Section -->
  <section class="cta-section">
    <div class="container">
      <h2>Hemen Keşfetmeye Başlayın</h2>
      <p>Online alışveriş yapın veya restoranımızda yöresel lezzetleri tadın</p>
      <div class="cta-buttons">
        <a href="/online-alisveris" class="btn btn-light btn-large">Online Alışveriş</a>
        <a href="/kayseri-sofrasi" class="btn btn-outline-light btn-large">Kayseri Sofrası</a>
      </div>
    </div>
  </section>

  <Footer slot="footer" />

  <!-- Add to Cart Modal -->
  <div id="cart-modal" class="cart-modal">
    <div class="modal-content">
      <button class="modal-close" aria-label="Kapat">
        <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>

      <div class="modal-body">
        <img id="modal-product-image" src="" alt="" class="modal-product-image" />
        <h3 id="modal-product-name"></h3>

        <div class="variant-selector">
          <label>Gramaj Seçin:</label>
          <div id="variant-options" class="variant-options"></div>
        </div>

        <div class="quantity-selector">
          <label>Adet:</label>
          <div class="quantity-controls">
            <button class="qty-btn qty-minus">-</button>
            <input type="number" class="qty-input" value="1" min="1" />
            <button class="qty-btn qty-plus">+</button>
          </div>
        </div>

        <div class="modal-price">
          <span class="price-label">Toplam:</span>
          <span id="modal-total-price" class="total-price">0₺</span>
        </div>

        <button id="confirm-add-cart" class="btn btn-primary btn-large">Sepete Ekle</button>
      </div>
    </div>
  </div>

  <!-- Cart Success Modal -->
  <div id="success-modal" class="cart-modal">
    <div class="modal-content success-content">
      <div class="success-icon">
        <svg width="60" height="60" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
        </svg>
      </div>
      <h3>Ürün sepete eklendi!</h3>
      <div class="success-buttons">
        <button id="go-to-cart" class="btn btn-primary">Sepete Git</button>
        <button id="continue-shopping" class="btn btn-outline">Alışverişe Devam</button>
      </div>
    </div>
  </div>

  <!-- Scroll to Top Button -->
  <button id="scroll-to-top" class="scroll-to-top" aria-label="Yukarı Çık">
    <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18" />
    </svg>
  </button>
</BaseLayout>

<style>
  /* Hero Section */
  .hero-section {
    position: relative;
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, #F0FDFA 0%, #CCFBF1 50%, #F0FDFA 100%);
    padding: 2rem 1rem;
  }

  .hero-content {
    max-width: 1200px;
    width: 100%;
  }

  .hero-header {
    text-align: center;
    margin-bottom: 4rem;
  }

  .hero-title {
    font-size: 4rem;
    color: #0e7490;
    margin-bottom: 1rem;
    font-weight: 800;
    letter-spacing: -0.02em;
    animation: fadeInUp 0.8s ease;
    text-shadow: none;
  }

  .hero-subtitle {
    font-size: 1.5rem;
    color: #0891B2;
    animation: fadeInUp 0.8s ease 0.2s both;
    font-weight: 600;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .hero-cards {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 3rem;
    max-width: 1000px;
    margin: 0 auto;
  }

  .hero-card {
    background: white;
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 10px 40px rgba(8, 145, 178, 0.15);
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    cursor: pointer;
    animation: fadeInUp 0.8s ease 0.4s both;
  }

  .hero-card:nth-child(2) {
    animation-delay: 0.6s;
  }

  .hero-card:hover {
    transform: translateY(-20px) scale(1.03);
    box-shadow: 0 25px 60px rgba(8, 145, 178, 0.25);
  }

  .hero-card-image {
    position: relative;
    padding-top: 60%;
    overflow: hidden;
    background: #f5f5f5;
  }

  .hero-card-image img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.7s ease;
  }

  .hero-card:hover .hero-card-image img {
    transform: scale(1.1);
  }

  .hero-card-content {
    padding: 2.5rem;
    text-align: center;
  }

  .card-icon {
    width: 80px;
    height: 80px;
    background: #F0FDFA;
    border-radius: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 1.5rem;
    color: #0891B2;
    transition: all 0.3s ease;
  }

  .hero-card:hover .card-icon {
    background: linear-gradient(135deg, #0891B2 0%, #06B6D4 100%);
    color: white;
    transform: rotate(5deg) scale(1.1);
  }

  .hero-card-content h2 {
    font-size: 1.875rem;
    color: #1F2937;
    margin-bottom: 0.75rem;
    font-weight: 700;
  }

  .hero-card-content p {
    font-size: 1.125rem;
    color: #4B5563;
    margin-bottom: 1.5rem;
    line-height: 1.6;
    font-weight: 500;
  }

  .hero-card-arrow {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: #0891B2;
    font-weight: 700;
    font-size: 1.125rem;
    transition: all 0.3s ease;
  }

  .hero-card:hover .hero-card-arrow {
    gap: 1rem;
  }

  .hero-card-arrow svg {
    transition: transform 0.3s ease;
  }

  .hero-card:hover .hero-card-arrow svg {
    transform: translateX(5px);
  }

  .curtain-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 9999;
    opacity: 0;
    visibility: hidden;
  }

  .curtain-overlay.active {
    opacity: 1;
    visibility: visible;
    pointer-events: all;
  }

  .curtain {
    position: absolute;
    top: 0;
    width: 50%;
    height: 100%;
    background: linear-gradient(135deg, #0891B2 0%, #0e7490 100%);
    transition: transform 0.8s cubic-bezier(0.77, 0, 0.175, 1);
  }

  .curtain-left {
    left: 0;
    transform: translateX(0);
  }

  .curtain-right {
    right: 0;
    transform: translateX(0);
  }

  .curtain-overlay.active .curtain-left {
    transform: translateX(-100%);
  }

  .curtain-overlay.active .curtain-right {
    transform: translateX(100%);
  }

  .curtain-logo {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 3rem;
    font-weight: 800;
    opacity: 1;
    transition: opacity 0.3s ease;
  }

  .curtain-overlay.active .curtain-logo {
    opacity: 0;
    transition-delay: 0s;
  }

  .scroll-indicator {
    position: absolute;
    bottom: 2rem;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    animation: bounce 2s infinite;
    color: #0891B2;
  }

  .scroll-indicator span {
    font-size: 0.875rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  @keyframes bounce {
    0%, 100% { transform: translateX(-50%) translateY(0); }
    50% { transform: translateX(-50%) translateY(10px); }
  }

  .features-section {
    padding: 6rem 1rem;
    background: white;
  }

  .section-title {
    font-size: 2.75rem;
    text-align: center;
    color: #1F2937;
    margin-bottom: 4rem;
    font-weight: 700;
  }

  .features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 3rem;
    max-width: 1200px;
    margin: 0 auto;
  }

  .feature-card {
    text-align: center;
    padding: 2.5rem;
    border-radius: 16px;
    background: #F0FDFA;
    transition: all 0.3s ease;
  }

  .feature-card:hover {
    box-shadow: 0 10px 30px rgba(8, 145, 178, 0.15);
    transform: translateY(-8px);
  }

  .feature-icon {
    width: 90px;
    height: 90px;
    background: white;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 1.5rem;
    color: #0891B2;
    box-shadow: 0 4px 12px rgba(8, 145, 178, 0.1);
  }

  .feature-card h3 {
    font-size: 1.375rem;
    margin-bottom: 1rem;
    color: #1F2937;
    font-weight: 700;
  }

  .feature-card p {
    color: #4B5563;
    line-height: 1.7;
    font-size: 1.0625rem;
    font-weight: 500;
  }

  /* Featured Products Section */
  .featured-products-section {
    padding: 6rem 1rem;
    background: #f0fdfa;
  }

  .section-header-featured {
    text-align: center;
    margin-bottom: 4rem;
  }

  .section-subtitle {
    font-size: 1.125rem;
    color: #0f766e;
    margin-top: 1rem;
    font-weight: 600;
  }

  .products-grid-featured {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 2rem;
    max-width: 1200px;
    margin: 0 auto 3rem;
  }

  .view-all-container {
    text-align: center;
  }

  .btn-view-all {
    display: inline-flex;
    align-items: center;
    gap: 0.75rem;
    padding: 1rem 2rem;
    background: linear-gradient(135deg, #0891b2 0%, #06b6d4 100%);
    color: white;
    text-decoration: none;
    border-radius: 12px;
    font-weight: 700;
    font-size: 1.125rem;
    transition: all 0.3s ease;
    box-shadow: 0 4px 12px rgba(8, 145, 178, 0.3);
  }

  .btn-view-all:hover {
    background: linear-gradient(135deg, #0e7490 0%, #0891b2 100%);
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(8, 145, 178, 0.4);
  }

  .info-section {
    padding: 6rem 1rem;
    background: white;
  }

  .info-content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
    align-items: center;
    max-width: 1200px;
    margin: 0 auto;
  }

  .info-text h2 {
    font-size: 2.5rem;
    color: #1F2937;
    margin-bottom: 1.5rem;
    font-weight: 700;
  }

  .info-text p {
    color: #4B5563;
    line-height: 1.8;
    font-size: 1.125rem;
    margin-bottom: 1rem;
    font-weight: 500;
  }

  .info-image {
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 20px 50px rgba(8, 145, 178, 0.15);
  }

  .info-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    opacity: 1 !important;
  }

  .cta-section {
    padding: 6rem 1rem;
    background: linear-gradient(135deg, #0891B2 0%, #0e7490 100%);
    color: white;
    text-align: center;
  }

  .cta-section h2 {
    font-size: 2.75rem;
    color: white;
    margin-bottom: 1rem;
    font-weight: 700;
  }

  .cta-section p {
    font-size: 1.25rem;
    color: rgba(255, 255, 255, 0.95);
    margin-bottom: 2.5rem;
    max-width: 700px;
    margin-left: auto;
    margin-right: auto;
  }

  .cta-buttons {
    display: flex;
    justify-content: center;
    gap: 1.5rem;
    flex-wrap: wrap;
  }

  .btn-light {
    background: white;
    color: #0891B2;
    padding: 1rem 2rem;
    border-radius: 12px;
    font-weight: 700;
    font-size: 1.125rem;
    text-decoration: none;
    transition: all 0.3s ease;
    display: inline-block;
  }

  .btn-light:hover {
    background: #F0FDFA;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(255, 255, 255, 0.3);
  }

  .btn-outline-light {
    background: transparent;
    color: white;
    border: 2px solid white;
    padding: 1rem 2rem;
    border-radius: 12px;
    font-weight: 700;
    font-size: 1.125rem;
    text-decoration: none;
    transition: all 0.3s ease;
    display: inline-block;
  }

  .btn-outline-light:hover {
    background: white;
    color: #0891B2;
    transform: translateY(-2px);
  }

  .btn-large {
    min-width: 200px;
  }

  /* Scroll to Top Button */
  .scroll-to-top {
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    width: 50px;
    height: 50px;
    background: linear-gradient(135deg, #0891B2 0%, #06B6D4 100%);
    color: white;
    border: none;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 4px 12px rgba(8, 145, 178, 0.4);
    transition: all 0.3s ease;
    opacity: 0;
    visibility: hidden;
    z-index: 999;
  }

  .scroll-to-top.visible {
    opacity: 1;
    visibility: visible;
  }

  .scroll-to-top:hover {
    background: linear-gradient(135deg, #0e7490 0%, #0891B2 100%);
    transform: translateY(-5px);
    box-shadow: 0 8px 20px rgba(8, 145, 178, 0.5);
  }

  .scroll-to-top:active {
    transform: translateY(-2px);
  }

  /* Modal Styles */
  .cart-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0,0,0,0.6);
    z-index: 1000;
    align-items: center;
    justify-content: center;
  }

  .cart-modal.active {
    display: flex;
  }

  .modal-content {
    background: white;
    border-radius: 12px;
    max-width: 500px;
    width: 90%;
    max-height: 90vh;
    overflow-y: auto;
    position: relative;
    box-shadow: 0 4px 20px rgba(0,0,0,0.3);
  }

  .modal-close {
    position: absolute;
    top: 15px;
    right: 15px;
    background: none;
    border: none;
    cursor: pointer;
    color: #666;
    z-index: 10;
    transition: color 0.3s;
  }

  .modal-close:hover {
    color: #333;
  }

  .modal-body {
    padding: 30px;
  }

  .modal-product-image {
    width: 100%;
    height: 250px;
    object-fit: cover;
    border-radius: 8px;
    margin-bottom: 20px;
  }

  .modal-body h3 {
    font-size: 1.5rem;
    margin-bottom: 20px;
    color: #333;
  }

  .variant-selector,
  .quantity-selector {
    margin-bottom: 25px;
  }

  .variant-selector label,
  .quantity-selector label {
    display: block;
    font-weight: 600;
    margin-bottom: 10px;
    color: #333;
  }

  .variant-options {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
  }

  .variant-btn {
    padding: 10px 20px;
    border: 2px solid #E5E7EB;
    background: white;
    border-radius: 6px;
    cursor: pointer;
    transition: all 0.3s;
    font-weight: 500;
  }

  .variant-btn:hover {
    border-color: #0891B2;
    color: #0891B2;
  }

  .variant-btn.active {
    background: linear-gradient(135deg, #0891B2 0%, #06B6D4 100%);
    color: white;
    border-color: #0891B2;
    box-shadow: 0 2px 8px rgba(8, 145, 178, 0.3);
  }

  .quantity-controls {
    display: flex;
    align-items: center;
    gap: 15px;
  }

  .qty-btn {
    width: 40px;
    height: 40px;
    border: 2px solid #0891B2;
    background: white;
    border-radius: 6px;
    cursor: pointer;
    font-size: 1.2rem;
    font-weight: 600;
    transition: all 0.3s;
    color: #0891B2;
  }

  .qty-btn:hover {
    background: #0891B2;
    color: white;
  }

  .qty-input {
    width: 80px;
    height: 40px;
    text-align: center;
    border: 2px solid #0891B2;
    border-radius: 6px;
    font-size: 1.1rem;
    font-weight: 600;
    color: #0891B2;
    background: #F0FDFA;
  }

  .modal-price {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px;
    background: linear-gradient(135deg, #fff7ed 0%, #ffedd5 100%);
    border-radius: 8px;
    margin-bottom: 20px;
    border: 2px solid #FED7AA;
  }

  .price-label {
    font-size: 1.1rem;
    font-weight: 600;
    color: #333;
  }

  .total-price {
    font-size: 1.5rem;
    font-weight: 700;
    color: #DC2626;
  }

  .btn {
    padding: 14px 28px;
    border: none;
    border-radius: 6px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s;
    text-decoration: none;
    display: inline-block;
    text-align: center;
  }

  .btn-primary {
    background: linear-gradient(135deg, #DC2626 0%, #B91C1C 100%);
    color: white;
    box-shadow: 0 2px 8px rgba(220, 38, 38, 0.3);
  }

  .btn-primary:hover {
    background: linear-gradient(135deg, #B91C1C 0%, #991B1B 100%);
    box-shadow: 0 4px 12px rgba(220, 38, 38, 0.4);
    transform: translateY(-2px);
  }

  .btn-outline {
    background: white;
    color: #DC2626;
    border: 2px solid #DC2626;
  }

  .btn-outline:hover {
    background: #DC2626;
    color: white;
  }

  .success-content {
    padding: 40px;
    text-align: center;
  }

  .success-icon {
    width: 80px;
    height: 80px;
    margin: 0 auto 20px;
    background: linear-gradient(135deg, #059669 0%, #10B981 100%);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .success-icon svg {
    stroke: white;
  }

  .success-content h3 {
    font-size: 1.5rem;
    margin-bottom: 30px;
    color: #333;
  }

  .success-buttons {
    display: flex;
    gap: 15px;
    flex-wrap: wrap;
  }

  .success-buttons .btn {
    flex: 1;
    min-width: 150px;
  }

  @media (max-width: 1024px) {
    .hero-cards {
      gap: 2rem;
    }

    .info-content {
      grid-template-columns: 1fr;
      gap: 3rem;
    }

    .products-grid-featured {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (max-width: 768px) {
    .hero-title {
      font-size: 2.5rem;
    }

    .hero-subtitle {
      font-size: 1.125rem;
    }

    .hero-cards {
      grid-template-columns: 1fr;
      gap: 2rem;
    }

    .section-title {
      font-size: 2rem;
    }

    .features-grid {
      gap: 2rem;
    }

    .products-grid-featured {
      grid-template-columns: 1fr;
    }

    .info-text h2 {
      font-size: 2rem;
    }

    .cta-section h2 {
      font-size: 2rem;
    }

    .cta-buttons {
      flex-direction: column;
      align-items: center;
    }

    .cta-buttons .btn {
      width: 100%;
      max-width: 300px;
    }

    .success-buttons {
      flex-direction: column;
    }

    .success-buttons .btn {
      width: 100%;
    }
  }

  @media (max-width: 768px) {
    .scroll-to-top {
      bottom: 1.5rem;
      right: 1.5rem;
      width: 45px;
      height: 45px;
    }

    .modal-content {
      width: 95%;
    }

    .success-buttons .btn {
      width: 100%;
    }
  }
</style>

<script>
  // Perde animasyonu ile sayfa geçişi
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.hero-card').forEach(card => {
      card.addEventListener('click', (e) => {
        e.preventDefault();
        const link = card.getAttribute('data-link');
        const curtain = document.getElementById('curtain-overlay');

        if (curtain && link) {
          curtain.classList.add('active');

          // Perde açılmaya başladığında (300ms sonra) sayfa değişsin
          setTimeout(() => {
            window.location.href = link;
          }, 300);
        }
      });
    });

    // Hover'da sayfayı prefetch et
    document.querySelectorAll('.hero-card').forEach(card => {
      card.addEventListener('mouseenter', () => {
        const link = card.getAttribute('data-link');
        if (link) {
          const linkEl = document.createElement('link');
          linkEl.rel = 'prefetch';
          linkEl.href = link;
          document.head.appendChild(linkEl);
        }
      });
    });
  });

  // Scroll to Top Button
  const scrollToTopBtn = document.getElementById('scroll-to-top');

  // Show/hide button based on scroll position
  window.addEventListener('scroll', () => {
    if (window.pageYOffset > 300) {
      scrollToTopBtn?.classList.add('visible');
    } else {
      scrollToTopBtn?.classList.remove('visible');
    }
  });

  // Scroll to top when clicked
  scrollToTopBtn?.addEventListener('click', () => {
    window.scrollTo({
      top: 0,
      behavior: 'smooth'
    });
  });

  // Sepete Ekleme İşlemleri
  const cartModal = document.getElementById('cart-modal');
  const successModal = document.getElementById('success-modal');
  let selectedProduct = null;
  let selectedVariant = null;

  // DOMContentLoaded ile tüm butonların yüklenmesini bekle
  function initCartButtons() {
    document.querySelectorAll('.btn-add-cart').forEach(btn => {
      // Önceki event listener'ları temizle
      const newBtn = btn.cloneNode(true);
      btn.parentNode?.replaceChild(newBtn, btn);

      newBtn.addEventListener('click', (e) => {
        e.preventDefault();
        e.stopPropagation();
        const productData = newBtn.getAttribute('data-product');
        if (productData) {
          try {
            selectedProduct = JSON.parse(productData);
            openCartModal(selectedProduct);
          } catch (error) {
            console.error('Ürün verisi parse edilemedi:', error);
          }
        }
      });
    });
  }

  // Sayfa yüklendiğinde ve her güncelleme sonrası çalıştır
  document.addEventListener('DOMContentLoaded', initCartButtons);
  // Eğer DOMContentLoaded zaten geçtiyse
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initCartButtons);
  } else {
    initCartButtons();
  }

  function openCartModal(product) {
    cartModal?.classList.add('active');
    document.body.style.overflow = 'hidden';

    const modalImage = document.getElementById('modal-product-image');
    const modalName = document.getElementById('modal-product-name');
    const variantOptions = document.getElementById('variant-options');

    if (modalImage) modalImage.src = product.image;
    if (modalName) modalName.textContent = product.name;

    if (variantOptions && product.variants) {
      variantOptions.innerHTML = '';
      product.variants.forEach((variant, index) => {
        const btn = document.createElement('button');
        btn.className = `variant-btn ${index === 0 ? 'active' : ''}`;
        btn.textContent = `${variant.label} - ${variant.price}₺`;
        btn.addEventListener('click', () => {
          document.querySelectorAll('.variant-btn').forEach(b => b.classList.remove('active'));
          btn.classList.add('active');
          selectedVariant = variant;
          updateTotalPrice();
        });
        variantOptions.appendChild(btn);
      });

      selectedVariant = product.variants[0];
      updateTotalPrice();
    }

    const qtyInput = document.querySelector('.qty-input');
    if (qtyInput) qtyInput.value = '1';
  }

  function updateTotalPrice() {
    const qtyInput = document.querySelector('.qty-input');
    const totalPriceEl = document.getElementById('modal-total-price');

    if (qtyInput && totalPriceEl && selectedVariant) {
      const quantity = parseInt(qtyInput.value) || 1;
      const total = selectedVariant.price * quantity;
      totalPriceEl.textContent = `${total}₺`;
    }
  }

  document.querySelector('.qty-minus')?.addEventListener('click', () => {
    const input = document.querySelector('.qty-input');
    if (input) {
      const currentValue = parseInt(input.value) || 1;
      if (currentValue > 1) {
        input.value = (currentValue - 1).toString();
        updateTotalPrice();
      }
    }
  });

  document.querySelector('.qty-plus')?.addEventListener('click', () => {
    const input = document.querySelector('.qty-input');
    if (input) {
      const currentValue = parseInt(input.value) || 1;
      input.value = (currentValue + 1).toString();
      updateTotalPrice();
    }
  });

  document.querySelector('.qty-input')?.addEventListener('input', updateTotalPrice);

  document.querySelector('.modal-close')?.addEventListener('click', () => {
    cartModal?.classList.remove('active');
    document.body.style.overflow = '';
  });

  cartModal?.addEventListener('click', (e) => {
    if (e.target === cartModal) {
      cartModal.classList.remove('active');
      document.body.style.overflow = '';
    }
  });

  document.getElementById('confirm-add-cart')?.addEventListener('click', () => {
    const qtyInput = document.querySelector('.qty-input');
    const quantity = parseInt(qtyInput?.value) || 1;

    if (selectedProduct && selectedVariant) {
      const cartItem = {
        id: selectedProduct.id,
        name: `${selectedProduct.name} - ${selectedVariant.label}`,
        price: selectedVariant.price,
        image: selectedProduct.image,
        unit: selectedVariant.label,
        quantity: quantity
      };

      let cart = [];
      try {
        const cartData = localStorage.getItem('cart');
        cart = cartData ? JSON.parse(cartData) : [];
      } catch (e) {
        cart = [];
      }

      const existingItemIndex = cart.findIndex(
        (item) => item.id === cartItem.id && item.unit === cartItem.unit
      );

      if (existingItemIndex > -1) {
        cart[existingItemIndex].quantity += quantity;
      } else {
        cart.push(cartItem);
      }

      localStorage.setItem('cart', JSON.stringify(cart));
      window.dispatchEvent(new Event('cartUpdated'));

      cartModal?.classList.remove('active');
      successModal?.classList.add('active');
    }
  });

  document.getElementById('go-to-cart')?.addEventListener('click', () => {
    window.location.href = '/sepet';
  });

  document.getElementById('continue-shopping')?.addEventListener('click', () => {
    successModal?.classList.remove('active');
    document.body.style.overflow = '';
  });

  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
      if (cartModal?.classList.contains('active')) {
        cartModal.classList.remove('active');
        document.body.style.overflow = '';
      }
      if (successModal?.classList.contains('active')) {
        successModal.classList.remove('active');
        document.body.style.overflow = '';
      }
    }
  });
</script>