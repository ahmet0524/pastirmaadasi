---
// src/pages/kavurma.astro
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { supabase } from '../lib/supabase';

// üéØ Supabase'den kavurma √ºr√ºnlerini √ßek
const { data: products, error } = await supabase
  .from('products')
  .select('*')
  .eq('category', 'Kavurma')
  .eq('is_active', true);

if (error) {
  console.error('Supabase hatasƒ±:', error);
}

// ƒ∞lk √ºr√ºn√º al (tek √ºr√ºn var)
const product = products?.[0];

// Eƒüer √ºr√ºn yoksa 404 g√∂ster
if (!product) {
  return Astro.redirect('/404');
}
---

<BaseLayout title={`${product.name} - Pastƒ±rma Adasƒ±`} description={product.description}>
  <Header slot="header" />

  <!-- Hero Section -->
  <section class="hero-section">
    <div class="hero-overlay"></div>
    <div class="hero-content">
      <h1 class="hero-title">{product.name}</h1>
      <p class="hero-subtitle">Dondurulmu≈ü, pratik ve lezzetli</p>
      <div class="hero-features">
        <div class="hero-feature">
          <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <span>{product.unit}</span>
        </div>
        <div class="hero-feature">
          <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <span>Dondurulmu≈ü</span>
        </div>
        <div class="hero-feature">
          <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <span>100% Dana Eti</span>
        </div>
      </div>
    </div>
  </section>

  <!-- Product Detail Section -->
  <section class="product-detail-section">
    <div class="container">
      <div class="product-detail-grid">
        <div class="product-image-container">
          <div class="product-main-image">
            <!-- Image Slider -->
            <div class="image-slider" id="image-slider">
              <div class="slider-track" id="slider-track">
                {product.images?.map((image: string, index: number) => (
                  <div class="slider-item">
                    <img src={image} alt={`${product.name} - ${index + 1}`} />
                  </div>
                ))}
              </div>

              <!-- Navigation Arrows -->
              {product.images && product.images.length > 1 && (
                <>
                  <button class="slider-arrow slider-arrow-prev" id="slider-prev">
                    <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                    </svg>
                  </button>
                  <button class="slider-arrow slider-arrow-next" id="slider-next">
                    <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                    </svg>
                  </button>
                </>
              )}
            </div>

            <!-- Dots Indicator -->
            {product.images && product.images.length > 1 && (
              <div class="slider-dots" id="slider-dots">
                {product.images.map((_: any, index: number) => (
                  <button
                    class={`slider-dot ${index === 0 ? 'active' : ''}`}
                    data-index={index}
                  ></button>
                ))}
              </div>
            )}

            <div class="product-badge">Dondurulmu≈ü √úr√ºn</div>

            {product.stock <= 10 && product.stock > 0 && (
              <div class="stock-warning">Son {product.stock} adet!</div>
            )}
            {product.stock === 0 && (
              <div class="out-of-stock">Stokta Yok</div>
            )}
          </div>
        </div>

        <div class="product-info">
          <h2 class="product-name">{product.name}</h2>
          <p class="product-weight">{product.unit}</p>
          <p class="product-description">{product.description}</p>

          <div class="product-features">
            <h3>√úr√ºn √ñzellikleri</h3>
            <ul>
              {product.features?.map((feature: string) => (
                <li>
                  <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                  </svg>
                  <span>{feature}</span>
                </li>
              ))}
            </ul>
          </div>

          <div class="product-purchase">
            <div class="product-price-box">
              <span class="price-label">Birim Fiyat</span>
              <div class="price-wrapper">
                <span class="product-price" id="unit-price">{product.price.toLocaleString('tr-TR')}‚Ç∫</span>
                <span class="price-unit">/ {product.unit}</span>
              </div>
            </div>

            {product.stock > 0 ? (
              <>
                <div class="quantity-selector">
                  <button class="quantity-btn" id="decrease-qty" type="button">
                    <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4" />
                    </svg>
                  </button>
                  <input
                    type="text"
                    id="quantity"
                    value="1"
                    inputmode="numeric"
                    pattern="[0-9]*"
                  />
                  <button class="quantity-btn" id="increase-qty" type="button">
                    <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                    </svg>
                  </button>
                </div>

                <div class="total-price-box">
                  <span class="total-label">Toplam Fiyat</span>
                  <span class="total-price" id="total-price">{product.price.toLocaleString('tr-TR')}‚Ç∫</span>
                </div>

                <button class="btn btn-primary btn-large add-to-cart" id="add-to-cart-btn">
                  <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                  </svg>
                  Sepete Ekle
                </button>

                <!-- Sepete Eklendi Butonlarƒ± (ba≈ülangƒ±√ßta gizli) -->
                <div class="cart-success-buttons" id="cart-success-buttons" style="display: none;">
                  <a href="/sepet" class="btn btn-primary btn-large">
                    <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                    </svg>
                    Sepete Git
                  </a>
                  <a href="/online-alisveris" class="btn btn-outline-primary btn-large">
                    <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                    </svg>
                    Alƒ±≈üveri≈üe Devam Et
                  </a>
                </div>
              </>
            ) : (
              <div class="out-of-stock-message">
                <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                Bu √ºr√ºn ≈üu anda stokta yok
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Info Section -->
  <section class="info-section">
    <div class="container">
      <div class="info-grid">
        <div class="info-text">
          <h2>Geleneksel Kavurma √úretimi</h2>
          <p>Blok dana kavurmamƒ±z, √∂zenle se√ßilmi≈ü taze dana etlerinin geleneksel y√∂ntemlerle uzun s√ºre pi≈üirilmesiyle elde edilir. Hi√ßbir katkƒ± maddesi kullanmadan, sadece et ve doƒüal baharatlarla hazƒ±rlanƒ±r.</p>
          <p>Dondurulmu≈ü olarak paketlenen √ºr√ºn√ºm√ºz, hem uzun s√ºre saklanabilir hem de dilediƒüiniz zaman pratik bir ≈üekilde kullanƒ±labilir. 1000 gr blok halinde sunulan kavurmamƒ±z, ailenizle payla≈üabileceƒüiniz ideal bir gramajdadƒ±r.</p>
          <div class="info-stats">
            <div class="stat-item">
              <div class="stat-number">100%</div>
              <div class="stat-label">Dana Eti</div>
            </div>
            <div class="stat-item">
              <div class="stat-number">0</div>
              <div class="stat-label">Katkƒ± Maddesi</div>
            </div>
            <div class="stat-item">
              <div class="stat-number">{product.unit}</div>
              <div class="stat-label">Blok Gramaj</div>
            </div>
          </div>
        </div>
        <div class="info-image">
          <img src="/assets/image/kavurma-production.jpg" alt="Kavurma √úretimi" loading="lazy" />
        </div>
      </div>
    </div>
  </section>

  <!-- Storage Info Section -->
  <section class="storage-section">
    <div class="container">
      <h2>Saklama ve Kullanƒ±m Bilgileri</h2>
      <div class="storage-grid">
        <div class="storage-card">
          <div class="storage-icon">
            <svg width="48" height="48" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v13m0-13V6a2 2 0 112 2h-2zm0 0V5.5A2.5 2.5 0 109.5 8H12zm-7 4h14M5 12a2 2 0 110-4h14a2 2 0 110 4M5 12v7a2 2 0 002 2h10a2 2 0 002-2v-7" />
            </svg>
          </div>
          <h3>Saklama</h3>
          <p>Dondurucuda -18¬∞C'de saklayƒ±n. A√ßƒ±ldƒ±ktan sonra buzdolabƒ±nda 3 g√ºn i√ßinde t√ºketin.</p>
        </div>

        <div class="storage-card">
          <div class="storage-icon">
            <svg width="48" height="48" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </div>
          <h3>√á√∂zme</h3>
          <p>Kullanmadan √∂nce buzdolabƒ±nda yava≈ü√ßa √ß√∂zd√ºr√ºn. Mikrodalga ile √ß√∂zd√ºrmeyin.</p>
        </div>

        <div class="storage-card">
          <div class="storage-icon">
            <svg width="48" height="48" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z" />
            </svg>
          </div>
          <h3>Pi≈üirme</h3>
          <p>D√º≈ü√ºk ate≈üte ƒ±sƒ±tƒ±n. Kendi yaƒüƒ±nda pi≈üecektir, ekstra yaƒü gerekmez.</p>
        </div>

        <div class="storage-card">
          <div class="storage-icon">
            <svg width="48" height="48" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </div>
          <h3>Kullanƒ±m</h3>
          <p>Kahvaltƒ±larda, sandvi√ßlerde, makarnalarda ve yumurtalƒ± yemeklerde kullanabilirsiniz.</p>
        </div>
      </div>
    </div>
  </section>

  <!-- CTA Section -->
  <section class="cta-section">
    <div class="container">
      <h2>Hemen Sipari≈ü Verin</h2>
      <p>Taze ve lezzetli blok dana kavurmamƒ±z i√ßin hemen sipari≈ü verin</p>
      <div class="cta-buttons">
        <a href="tel:+905077623838" class="btn btn-light btn-large">
          <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
          </svg>
          0507 762 38 38
        </a>
        <a href="/sepet" class="btn btn-outline-light btn-large">Sepete Git</a>
      </div>
    </div>
  </section>

  <Footer slot="footer" />
</BaseLayout>

<style>
  .hero-section {
    position: relative;
    min-height: 50vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, #fef3e2 0%, #fff5e6 50%, #fef8f0 100%);
    padding: 4rem 1rem;
    overflow: hidden;
  }

  .hero-section::before {
    content: '';
    position: absolute;
    top: -50%;
    right: -20%;
    width: 80%;
    height: 150%;
    background: radial-gradient(circle, rgba(217, 119, 6, 0.1) 0%, transparent 70%);
    border-radius: 50%;
  }

  .hero-overlay {
    position: absolute;
    inset: 0;
    background: url('/assets/image/pattern.svg') repeat;
    opacity: 0.03;
  }

  .hero-content {
    position: relative;
    text-align: center;
    max-width: 900px;
    z-index: 1;
  }

  .hero-title {
    font-size: 4rem;
    color: var(--primary);
    margin-bottom: 1rem;
    font-weight: 800;
    letter-spacing: -0.02em;
    animation: fadeInUp 0.8s ease;
  }

  .hero-subtitle {
    font-size: 1.5rem;
    color: var(--text-gray);
    margin-bottom: 3rem;
    animation: fadeInUp 0.8s ease 0.2s both;
  }

  .hero-features {
    display: flex;
    justify-content: center;
    gap: 3rem;
    flex-wrap: wrap;
    animation: fadeInUp 0.8s ease 0.4s both;
  }

  .hero-feature {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--primary);
    font-weight: 600;
    font-size: 1.125rem;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .product-detail-section {
    padding: 6rem 1rem;
    background: white;
  }

  .product-detail-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
    max-width: 1200px;
    margin: 0 auto;
    align-items: start;
  }

  .product-image-container {
    position: sticky;
    top: 100px;
  }

  .product-main-image {
    position: relative;
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.15);
  }

  /* Image Slider */
  .image-slider {
    position: relative;
    width: 100%;
    overflow: hidden;
  }

  .slider-track {
    display: flex;
    transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .slider-item {
    min-width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background: var(--bg-gray);
  }

  .slider-item img {
    width: 100%;
    height: auto;
    display: block;
    object-fit: cover;
  }

  /* Slider Arrows */
  .slider-arrow {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255, 255, 255, 0.9);
    border: none;
    width: 48px;
    height: 48px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    z-index: 2;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .slider-arrow:hover {
    background: white;
    transform: translateY(-50%) scale(1.1);
  }

  .slider-arrow svg {
    color: var(--primary);
  }

  .slider-arrow-prev {
    left: 1rem;
  }

  .slider-arrow-next {
    right: 1rem;
  }

  /* Slider Dots */
  .slider-dots {
    position: absolute;
    bottom: 1.5rem;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 0.5rem;
    z-index: 2;
  }

  .slider-dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.5);
    border: 2px solid white;
    cursor: pointer;
    transition: all 0.3s ease;
    padding: 0;
  }

  .slider-dot:hover {
    background: rgba(255, 255, 255, 0.8);
    transform: scale(1.2);
  }

  .slider-dot.active {
    background: var(--primary);
    border-color: var(--primary);
    width: 32px;
    border-radius: 6px;
  }

  .product-main-image img {
    width: 100%;
    height: auto;
    display: block;
  }

  .product-badge {
    position: absolute;
    top: 1.5rem;
    left: 1.5rem;
    background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 30px;
    font-size: 0.875rem;
    font-weight: 700;
    box-shadow: 0 4px 12px rgba(217, 119, 6, 0.3);
  }

  .stock-warning {
    position: absolute;
    top: 4.5rem;
    left: 1.5rem;
    background: #f59e0b;
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.875rem;
    font-weight: 700;
  }

  .out-of-stock {
    position: absolute;
    top: 4.5rem;
    left: 1.5rem;
    background: #ef4444;
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.875rem;
    font-weight: 700;
  }

  .product-info {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .product-name {
    font-size: 3rem;
    color: var(--text-dark);
    font-weight: 800;
    line-height: 1.2;
    margin: 0;
  }

  .product-weight {
    font-size: 1.5rem;
    color: var(--primary);
    font-weight: 600;
    margin: 0;
  }

  .product-description {
    font-size: 1.125rem;
    color: var(--text-gray);
    line-height: 1.8;
    margin: 0;
  }

  .product-features {
    background: var(--bg-light);
    padding: 2rem;
    border-radius: var(--radius-lg);
  }

  .product-features h3 {
    font-size: 1.375rem;
    color: var(--text-dark);
    margin-bottom: 1.5rem;
    font-weight: 700;
  }

  .product-features ul {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .product-features li {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    color: var(--text-dark);
    font-size: 1.0625rem;
  }

  .product-features li svg {
    color: var(--primary);
    flex-shrink: 0;
  }

  .product-purchase {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    padding: 2rem;
    background: var(--bg-light);
    border-radius: var(--radius-lg);
  }

  .product-price-box {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .price-label {
    font-size: 0.875rem;
    color: var(--text-gray);
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .price-wrapper {
    display: flex;
    align-items: baseline;
    gap: 0.5rem;
  }

  .product-price {
    font-size: 3rem;
    font-weight: 800;
    color: var(--primary);
    line-height: 1;
  }

  .price-unit {
    font-size: 1.125rem;
    color: var(--text-gray);
  }

  .quantity-selector {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1rem;
    background: white;
    border-radius: var(--radius-md);
    width: fit-content;
  }

  .quantity-btn {
    width: 40px;
    height: 40px;
    border: none;
    background: var(--bg-light);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    color: var(--text-dark);
  }

  .quantity-btn:hover {
    background: var(--primary);
    color: white;
  }

  #quantity {
    width: 80px;
    text-align: center;
    font-size: 1.25rem;
    font-weight: 700;
    border: 2px solid var(--border-color);
    background: white;
    color: var(--text-dark);
    border-radius: var(--radius-sm);
    padding: 0.5rem;
    cursor: text;
  }

  #quantity:focus {
    outline: none;
    border-color: var(--primary);
  }

  #quantity::-webkit-outer-spin-button,
  #quantity::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  #quantity[type=number] {
    -moz-appearance: textfield;
  }

  .total-price-box {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem;
    background: linear-gradient(135deg, var(--primary-light) 0%, rgba(217, 119, 6, 0.1) 100%);
    border-radius: var(--radius-md);
    border: 2px solid var(--primary);
  }

  .total-label {
    font-size: 1.125rem;
    font-weight: 600;
    color: var(--text-dark);
  }

  .total-price {
    font-size: 2.5rem;
    font-weight: 800;
    color: var(--primary);
    line-height: 1;
  }

  .add-to-cart {
    width: 100%;
    justify-content: center;
  }

  .cart-success-buttons {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    width: 100%;
  }

  .cart-success-buttons .btn {
    width: 100%;
    justify-content: center;
  }

  .btn-outline-primary {
    background: transparent;
    color: var(--primary);
    border: 2px solid var(--primary);
  }

  .btn-outline-primary:hover {
    background: var(--primary);
    color: white;
    transform: translateY(-2px);
  }

  .out-of-stock-message {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 1.5rem;
    background: #fee;
    border: 2px solid #ef4444;
    border-radius: var(--radius-md);
    color: #ef4444;
    font-weight: 600;
    justify-content: center;
  }

  .info-section {
    padding: 6rem 1rem;
    background: var(--bg-light);
  }

  .info-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
    align-items: center;
    max-width: 1200px;
    margin: 0 auto;
  }

  .info-text h2 {
    font-size: 2.5rem;
    color: var(--text-dark);
    margin-bottom: 1.5rem;
    font-weight: 700;
  }

  .info-text p {
    color: var(--text-gray);
    line-height: 1.8;
    font-size: 1.125rem;
    margin-bottom: 1.5rem;
  }

  .info-stats {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
    margin-top: 3rem;
  }

  .stat-item {
    text-align: center;
    padding: 1.5rem;
    background: white;
    border-radius: var(--radius-md);
  }

  .stat-number {
    font-size: 2.5rem;
    font-weight: 800;
    color: var(--primary);
    margin-bottom: 0.5rem;
  }

  .stat-label {
    font-size: 0.875rem;
    color: var(--text-gray);
    font-weight: 600;
  }

  .info-image {
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.15);
  }

  .info-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .storage-section {
    padding: 6rem 1rem;
    background: white;
  }

  .storage-section h2 {
    font-size: 2.75rem;
    text-align: center;
    color: var(--text-dark);
    margin-bottom: 4rem;
    font-weight: 700;
  }

  .storage-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
    max-width: 1200px;
    margin: 0 auto;
  }

  .storage-card {
    text-align: center;
    padding: 2.5rem 2rem;
    background: var(--bg-light);
    border-radius: var(--radius-lg);
    transition: all 0.3s ease;
  }

  .storage-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
  }

  .storage-icon {
    color: var(--primary);
    margin-bottom: 1.5rem;
  }

  .storage-card h3 {
    font-size: 1.375rem;
    color: var(--text-dark);
    margin-bottom: 0.75rem;
    font-weight: 700;
  }

  .storage-card p {
    color: var(--text-gray);
    line-height: 1.6;
    font-size: 1rem;
  }

  .cta-section {
    padding: 6rem 1rem;
    background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
    color: white;
    text-align: center;
  }

  .cta-section h2 {
    font-size: 2.75rem;
    color: white;
    margin-bottom: 1rem;
    font-weight: 700;
  }

  .cta-section p {
    font-size: 1.25rem;
    color: rgba(255, 255, 255, 0.95);
    margin-bottom: 2.5rem;
  }

  .cta-buttons {
    display: flex;
    justify-content: center;
    gap: 1.5rem;
    flex-wrap: wrap;
  }

  .btn {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.875rem 1.75rem;
    border-radius: var(--radius-md);
    font-weight: 600;
    font-size: 1rem;
    transition: all 0.3s ease;
    cursor: pointer;
    border: none;
    text-decoration: none;
  }

  .btn-large {
    padding: 1rem 2rem;
    font-size: 1.125rem;
  }

  .btn-primary {
    background: var(--primary);
    color: white;
  }

  .btn-primary:hover {
    background: var(--primary-dark);
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(217, 119, 6, 0.3);
  }

  .btn-light {
    background: white;
    color: var(--primary);
  }

  .btn-light:hover {
    background: var(--bg-light);
    transform: translateY(-2px);
  }

  .btn-outline-light {
    background: transparent;
    color: white;
    border: 2px solid white;
  }

  .btn-outline-light:hover {
    background: white;
    color: var(--primary);
    transform: translateY(-2px);
  }

  @media (max-width: 1024px) {
    .product-detail-grid {
      grid-template-columns: 1fr;
      gap: 3rem;
    }

    .product-image-container {
      position: relative;
      top: 0;
    }

    .info-grid {
      grid-template-columns: 1fr;
      gap: 3rem;
    }

    .info-image {
      order: -1;
    }
  }

  @media (max-width: 768px) {
    .hero-title {
      font-size: 2.5rem;
    }

    .hero-subtitle {
      font-size: 1.125rem;
    }

    .hero-features {
      gap: 1.5rem;
    }

    .hero-feature {
      font-size: 1rem;
    }

    .product-name {
      font-size: 2rem;
    }

    .product-weight {
      font-size: 1.25rem;
    }

    .product-price {
      font-size: 2.5rem;
    }

    .info-text h2 {
      font-size: 2rem;
    }

    .info-stats {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .storage-section h2 {
      font-size: 2rem;
    }

    .storage-grid {
      grid-template-columns: 1fr;
    }

    .cta-section h2 {
      font-size: 2rem;
    }

    .cta-buttons {
      flex-direction: column;
      align-items: center;
    }

    .cta-buttons .btn {
      width: 100%;
      max-width: 300px;
      justify-content: center;
    }
  }
</style>

<script>
  // Product verisini global'e al
  const productData = JSON.parse(document.getElementById('product-data')?.textContent || '{}');

  document.addEventListener('DOMContentLoaded', () => {
    // Image Slider ƒ∞≈ülemleri
    const sliderTrack = document.getElementById('slider-track');
    const prevBtn = document.getElementById('slider-prev');
    const nextBtn = document.getElementById('slider-next');
    const dots = document.querySelectorAll('.slider-dot');

    let currentSlide = 0;
    const totalSlides = dots.length;

    function updateSlider() {
      if (sliderTrack) {
        sliderTrack.style.transform = `translateX(-${currentSlide * 100}%)`;
      }

      dots.forEach((dot, index) => {
        dot.classList.toggle('active', index === currentSlide);
      });
    }

    prevBtn?.addEventListener('click', () => {
      currentSlide = currentSlide > 0 ? currentSlide - 1 : totalSlides - 1;
      updateSlider();
    });

    nextBtn?.addEventListener('click', () => {
      currentSlide = currentSlide < totalSlides - 1 ? currentSlide + 1 : 0;
      updateSlider();
    });

    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => {
        currentSlide = index;
        updateSlider();
      });
    });

    // Otomatik ge√ßi≈ü (opsiyonel - 5 saniyede bir)
    let autoSlide = setInterval(() => {
      currentSlide = currentSlide < totalSlides - 1 ? currentSlide + 1 : 0;
      updateSlider();
    }, 5000);

    // Mouse √ºzerine gelince otomatik ge√ßi≈üi durdur
    const imageSlider = document.getElementById('image-slider');
    imageSlider?.addEventListener('mouseenter', () => {
      clearInterval(autoSlide);
    });

    imageSlider?.addEventListener('mouseleave', () => {
      autoSlide = setInterval(() => {
        currentSlide = currentSlide < totalSlides - 1 ? currentSlide + 1 : 0;
        updateSlider();
      }, 5000);
    });

    // Quantity ve Cart ƒ∞≈ülemleri
    const decreaseBtn = document.getElementById('decrease-qty');
    const increaseBtn = document.getElementById('increase-qty');
    const quantityInput = document.getElementById('quantity');
    const totalPriceElement = document.getElementById('total-price');
    const addToCartBtn = document.querySelector('.add-to-cart');

    const unitPrice = productData.price || 1200;
    const maxStock = productData.stock || 99;

    // Toplam fiyatƒ± g√ºncelle
    function updateTotalPrice() {
      const quantity = parseInt(quantityInput.value) || 1;
      const total = unitPrice * quantity;
      if (totalPriceElement) {
        totalPriceElement.textContent = total.toLocaleString('tr-TR') + '‚Ç∫';
      }
    }

    // Miktar azalt
    decreaseBtn?.addEventListener('click', (e) => {
      e.preventDefault();
      const currentValue = parseInt(quantityInput.value) || 1;
      if (currentValue > 1) {
        quantityInput.value = (currentValue - 1).toString();
        updateTotalPrice();
      }
    });

    // Miktar artƒ±r
    increaseBtn?.addEventListener('click', (e) => {
      e.preventDefault();
      const currentValue = parseInt(quantityInput.value) || 1;
      if (currentValue < maxStock) {
        quantityInput.value = (currentValue + 1).toString();
        updateTotalPrice();
      }
    });

    // Manuel input deƒüi≈üikliƒüi
    quantityInput?.addEventListener('keyup', (e) => {
      let value = parseInt(quantityInput.value);

      if (isNaN(value) || value < 1) {
        return;
      }

      if (value > maxStock) {
        quantityInput.value = maxStock.toString();
      }

      updateTotalPrice();
    });

    // Input'tan √ßƒ±kƒ±nca kontrol et
    quantityInput?.addEventListener('blur', () => {
      let value = parseInt(quantityInput.value);

      if (isNaN(value) || value < 1) {
        quantityInput.value = '1';
      } else if (value > maxStock) {
        quantityInput.value = maxStock.toString();
      }

      updateTotalPrice();
    });

    // Sepete ekle
    addToCartBtn?.addEventListener('click', () => {
      const quantity = parseInt(quantityInput.value) || 1;

      let cart = JSON.parse(localStorage.getItem('cart') || '[]');

      const existingItem = cart.find(item => item.id === productData.id);

      if (existingItem) {
        existingItem.quantity += quantity;
      } else {
        cart.push({
          id: productData.id,
          slug: productData.slug,
          name: productData.name,
          price: productData.price,
          quantity: quantity,
          unit: productData.unit,
          image: productData.images?.[0] || '/assets/image/placeholder.jpg',
          category: 'kavurma'
        });
      }

      localStorage.setItem('cart', JSON.stringify(cart));
      window.dispatchEvent(new Event('cartUpdated'));

      // Butonlarƒ± deƒüi≈ütir
      const addToCartBtn = document.getElementById('add-to-cart-btn');
      const successButtons = document.getElementById('cart-success-buttons');

      if (addToCartBtn && successButtons) {
        addToCartBtn.style.display = 'none';
        successButtons.style.display = 'flex';
      }
    });
  });
</script>

<!-- Product data for script -->
<script id="product-data" type="application/json" set:html={JSON.stringify(product)} />