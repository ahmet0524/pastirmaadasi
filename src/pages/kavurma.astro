---
// src/pages/kavurma.astro
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { supabase } from '../lib/supabase';

// 🎯 Supabase'den kavurma ürünlerini çek
const { data: products, error } = await supabase
  .from('products')
  .select('*')
  .eq('category', 'Kavurma')
  .eq('is_active', true);

if (error) {
  console.error('Supabase hatası:', error);
}

// İlk ürünü al (tek ürün var)
const product = products?.[0];

// Eğer ürün yoksa 404 göster
if (!product) {
  return Astro.redirect('/404');
}
---

<BaseLayout title={`${product.name} - Pastırma Adası`} description={product.description}>
  <Header slot="header" />

  <!-- Hero Section -->
  <section class="hero-section">
    <div class="hero-overlay"></div>
    <div class="hero-content">
      <h1 class="hero-title">{product.name}</h1>
      <p class="hero-subtitle">Dondurulmuş, pratik ve lezzetli</p>
      <div class="hero-features">
        <div class="hero-feature">
          <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <span>{product.unit}</span>
        </div>
        <div class="hero-feature">
          <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <span>Dondurulmuş</span>
        </div>
        <div class="hero-feature">
          <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <span>100% Dana Eti</span>
        </div>
      </div>
    </div>
  </section>

  <!-- Product Detail Section -->
  <section class="product-detail-section">
    <div class="container">
      <div class="product-detail-grid">
        <div class="product-image-container">
          <div class="product-main-image">
            <img src={product.images?.[0] || '/assets/image/placeholder.jpg'} alt={product.name} />
            <div class="product-badge">Dondurulmuş Ürün</div>

            {product.stock <= 10 && product.stock > 0 && (
              <div class="stock-warning">Son {product.stock} adet!</div>
            )}
            {product.stock === 0 && (
              <div class="out-of-stock">Stokta Yok</div>
            )}
          </div>
        </div>

        <div class="product-info">
          <h2 class="product-name">{product.name}</h2>
          <p class="product-weight">{product.unit}</p>
          <p class="product-description">{product.description}</p>

          <div class="product-features">
            <h3>Ürün Özellikleri</h3>
            <ul>
              {product.features?.map((feature: string) => (
                <li>
                  <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                  </svg>
                  <span>{feature}</span>
                </li>
              ))}
            </ul>
          </div>

          <div class="product-purchase">
            <div class="product-price-box">
              <span class="price-label">Fiyat</span>
              <div class="price-wrapper">
                <span class="product-price">{product.price.toLocaleString('tr-TR')}₺</span>
                <span class="price-unit">/ {product.unit}</span>
              </div>
            </div>

            {product.stock > 0 ? (
              <>
                <div class="quantity-selector">
                  <button class="quantity-btn" id="decrease-qty">
                    <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4" />
                    </svg>
                  </button>
                  <input type="number" id="quantity" value="1" min="1" max={product.stock} readonly />
                  <button class="quantity-btn" id="increase-qty">
                    <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                    </svg>
                  </button>
                </div>

                <button class="btn btn-primary btn-large add-to-cart">
                  <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                  </svg>
                  Sepete Ekle
                </button>
              </>
            ) : (
              <div class="out-of-stock-message">
                <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                Bu ürün şu anda stokta yok
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Info Section -->
  <section class="info-section">
    <div class="container">
      <div class="info-grid">
        <div class="info-text">
          <h2>Geleneksel Kavurma Üretimi</h2>
          <p>Blok dana kavurmamız, özenle seçilmiş taze dana etlerinin geleneksel yöntemlerle uzun süre pişirilmesiyle elde edilir. Hiçbir katkı maddesi kullanmadan, sadece et ve doğal baharatlarla hazırlanır.</p>
          <p>Dondurulmuş olarak paketlenen ürünümüz, hem uzun süre saklanabilir hem de dilediğiniz zaman pratik bir şekilde kullanılabilir. 1000 gr blok halinde sunulan kavurmamız, ailenizle paylaşabileceğiniz ideal bir gramajdadır.</p>
          <div class="info-stats">
            <div class="stat-item">
              <div class="stat-number">100%</div>
              <div class="stat-label">Dana Eti</div>
            </div>
            <div class="stat-item">
              <div class="stat-number">0</div>
              <div class="stat-label">Katkı Maddesi</div>
            </div>
            <div class="stat-item">
              <div class="stat-number">{product.unit}</div>
              <div class="stat-label">Blok Gramaj</div>
            </div>
          </div>
        </div>
        <div class="info-image">
          <img src="/assets/image/kavurma-production.jpg" alt="Kavurma Üretimi" loading="lazy" />
        </div>
      </div>
    </div>
  </section>

  <!-- Storage Info Section -->
  <section class="storage-section">
    <div class="container">
      <h2>Saklama ve Kullanım Bilgileri</h2>
      <div class="storage-grid">
        <div class="storage-card">
          <div class="storage-icon">
            <svg width="48" height="48" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v13m0-13V6a2 2 0 112 2h-2zm0 0V5.5A2.5 2.5 0 109.5 8H12zm-7 4h14M5 12a2 2 0 110-4h14a2 2 0 110 4M5 12v7a2 2 0 002 2h10a2 2 0 002-2v-7" />
            </svg>
          </div>
          <h3>Saklama</h3>
          <p>Dondurucuda -18°C'de saklayın. Açıldıktan sonra buzdolabında 3 gün içinde tüketin.</p>
        </div>

        <div class="storage-card">
          <div class="storage-icon">
            <svg width="48" height="48" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </div>
          <h3>Çözme</h3>
          <p>Kullanmadan önce buzdolabında yavaşça çözdürün. Mikrodalga ile çözdürmeyin.</p>
        </div>

        <div class="storage-card">
          <div class="storage-icon">
            <svg width="48" height="48" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z" />
            </svg>
          </div>
          <h3>Pişirme</h3>
          <p>Düşük ateşte ısıtın. Kendi yağında pişecektir, ekstra yağ gerekmez.</p>
        </div>

        <div class="storage-card">
          <div class="storage-icon">
            <svg width="48" height="48" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </div>
          <h3>Kullanım</h3>
          <p>Kahvaltılarda, sandviçlerde, makarnalarda ve yumurtalı yemeklerde kullanabilirsiniz.</p>
        </div>
      </div>
    </div>
  </section>

  <!-- CTA Section -->
  <section class="cta-section">
    <div class="container">
      <h2>Hemen Sipariş Verin</h2>
      <p>Taze ve lezzetli blok dana kavurmamız için hemen sipariş verin</p>
      <div class="cta-buttons">
        <a href="tel:+905077623838" class="btn btn-light btn-large">
          <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
          </svg>
          0507 762 38 38
        </a>
        <a href="/sepet" class="btn btn-outline-light btn-large">Sepete Git</a>
      </div>
    </div>
  </section>

  <Footer slot="footer" />
</BaseLayout>

<style>
  .hero-section {
    position: relative;
    min-height: 50vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, #fef3e2 0%, #fff5e6 50%, #fef8f0 100%);
    padding: 4rem 1rem;
    overflow: hidden;
  }

  .hero-section::before {
    content: '';
    position: absolute;
    top: -50%;
    right: -20%;
    width: 80%;
    height: 150%;
    background: radial-gradient(circle, rgba(217, 119, 6, 0.1) 0%, transparent 70%);
    border-radius: 50%;
  }

  .hero-overlay {
    position: absolute;
    inset: 0;
    background: url('/assets/image/pattern.svg') repeat;
    opacity: 0.03;
  }

  .hero-content {
    position: relative;
    text-align: center;
    max-width: 900px;
    z-index: 1;
  }

  .hero-title {
    font-size: 4rem;
    color: var(--primary);
    margin-bottom: 1rem;
    font-weight: 800;
    letter-spacing: -0.02em;
    animation: fadeInUp 0.8s ease;
  }

  .hero-subtitle {
    font-size: 1.5rem;
    color: var(--text-gray);
    margin-bottom: 3rem;
    animation: fadeInUp 0.8s ease 0.2s both;
  }

  .hero-features {
    display: flex;
    justify-content: center;
    gap: 3rem;
    flex-wrap: wrap;
    animation: fadeInUp 0.8s ease 0.4s both;
  }

  .hero-feature {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--primary);
    font-weight: 600;
    font-size: 1.125rem;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .product-detail-section {
    padding: 6rem 1rem;
    background: white;
  }

  .product-detail-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
    max-width: 1200px;
    margin: 0 auto;
    align-items: start;
  }

  .product-image-container {
    position: sticky;
    top: 100px;
  }

  .product-main-image {
    position: relative;
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.15);
  }

  .product-main-image img {
    width: 100%;
    height: auto;
    display: block;
  }

  .product-badge {
    position: absolute;
    top: 1.5rem;
    left: 1.5rem;
    background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 30px;
    font-size: 0.875rem;
    font-weight: 700;
    box-shadow: 0 4px 12px rgba(217, 119, 6, 0.3);
  }

  .stock-warning {
    position: absolute;
    top: 4.5rem;
    left: 1.5rem;
    background: #f59e0b;
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.875rem;
    font-weight: 700;
  }

  .out-of-stock {
    position: absolute;
    top: 4.5rem;
    left: 1.5rem;
    background: #ef4444;
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.875rem;
    font-weight: 700;
  }

  .product-info {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .product-name {
    font-size: 3rem;
    color: var(--text-dark);
    font-weight: 800;
    line-height: 1.2;
    margin: 0;
  }

  .product-weight {
    font-size: 1.5rem;
    color: var(--primary);
    font-weight: 600;
    margin: 0;
  }

  .product-description {
    font-size: 1.125rem;
    color: var(--text-gray);
    line-height: 1.8;
    margin: 0;
  }

  .product-features {
    background: var(--bg-light);
    padding: 2rem;
    border-radius: var(--radius-lg);
  }

  .product-features h3 {
    font-size: 1.375rem;
    color: var(--text-dark);
    margin-bottom: 1.5rem;
    font-weight: 700;
  }

  .product-features ul {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .product-features li {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    color: var(--text-dark);
    font-size: 1.0625rem;
  }

  .product-features li svg {
    color: var(--primary);
    flex-shrink: 0;
  }

  .product-purchase {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    padding: 2rem;
    background: var(--bg-light);
    border-radius: var(--radius-lg);
  }

  .product-price-box {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .price-label {
    font-size: 0.875rem;
    color: var(--text-gray);
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .price-wrapper {
    display: flex;
    align-items: baseline;
    gap: 0.5rem;
  }

  .product-price {
    font-size: 3rem;
    font-weight: 800;
    color: var(--primary);
    line-height: 1;
  }

  .price-unit {
    font-size: 1.125rem;
    color: var(--text-gray);
  }

  .quantity-selector {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1rem;
    background: white;
    border-radius: var(--radius-md);
    width: fit-content;
  }

  .quantity-btn {
    width: 40px;
    height: 40px;
    border: none;
    background: var(--bg-light);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    color: var(--text-dark);
  }

  .quantity-btn:hover {
    background: var(--primary);
    color: white;
  }

  #quantity {
    width: 60px;
    text-align: center;
    font-size: 1.25rem;
    font-weight: 700;
    border: none;
    background: transparent;
    color: var(--text-dark);
  }

  .add-to-cart {
    width: 100%;
    justify-content: center;
  }

  .out-of-stock-message {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 1.5rem;
    background: #fee;
    border: 2px solid #ef4444;
    border-radius: var(--radius-md);
    color: #ef4444;
    font-weight: 600;
    justify-content: center;
  }

  .info-section {
    padding: 6rem 1rem;
    background: var(--bg-light);
  }

  .info-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
    align-items: center;
    max-width: 1200px;
    margin: 0 auto;
  }

  .info-text h2 {
    font-size: 2.5rem;
    color: var(--text-dark);
    margin-bottom: 1.5rem;
    font-weight: 700;
  }

  .info-text p {
    color: var(--text-gray);
    line-height: 1.8;
    font-size: 1.125rem;
    margin-bottom: 1.5rem;
  }

  .info-stats {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
    margin-top: 3rem;
  }

  .stat-item {
    text-align: center;
    padding: 1.5rem;
    background: white;
    border-radius: var(--radius-md);
  }

  .stat-number {
    font-size: 2.5rem;
    font-weight: 800;
    color: var(--primary);
    margin-bottom: 0.5rem;
  }

  .stat-label {
    font-size: 0.875rem;
    color: var(--text-gray);
    font-weight: 600;
  }

  .info-image {
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.15);
  }

  .info-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .storage-section {
    padding: 6rem 1rem;
    background: white;
  }

  .storage-section h2 {
    font-size: 2.75rem;
    text-align: center;
    color: var(--text-dark);
    margin-bottom: 4rem;
    font-weight: 700;
  }

  .storage-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
    max-width: 1200px;
    margin: 0 auto;
  }

  .storage-card {
    text-align: center;
    padding: 2.5rem 2rem;
    background: var(--bg-light);
    border-radius: var(--radius-lg);
    transition: all 0.3s ease;
  }

  .storage-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
  }

  .storage-icon {
    color: var(--primary);
    margin-bottom: 1.5rem;
  }

  .storage-card h3 {
    font-size: 1.375rem;
    color: var(--text-dark);
    margin-bottom: 0.75rem;
    font-weight: 700;
  }

  .storage-card p {
    color: var(--text-gray);
    line-height: 1.6;
    font-size: 1rem;
  }

  .cta-section {
    padding: 6rem 1rem;
    background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
    color: white;
    text-align: center;
  }

  .cta-section h2 {
    font-size: 2.75rem;
    color: white;
    margin-bottom: 1rem;
    font-weight: 700;
  }

  .cta-section p {
    font-size: 1.25rem;
    color: rgba(255, 255, 255, 0.95);
    margin-bottom: 2.5rem;
  }

  .cta-buttons {
    display: flex;
    justify-content: center;
    gap: 1.5rem;
    flex-wrap: wrap;
  }

  .btn {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.875rem 1.75rem;
    border-radius: var(--radius-md);
    font-weight: 600;
    font-size: 1rem;
    transition: all 0.3s ease;
    cursor: pointer;
    border: none;
    text-decoration: none;
  }

  .btn-large {
    padding: 1rem 2rem;
    font-size: 1.125rem;
  }

  .btn-primary {
    background: var(--primary);
    color: white;
  }

  .btn-primary:hover {
    background: var(--primary-dark);
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(217, 119, 6, 0.3);
  }

  .btn-light {
    background: white;
    color: var(--primary);
  }

  .btn-light:hover {
    background: var(--bg-light);
    transform: translateY(-2px);
  }

  .btn-outline-light {
    background: transparent;
    color: white;
    border: 2px solid white;
  }

  .btn-outline-light:hover {
    background: white;
    color: var(--primary);
    transform: translateY(-2px);
  }

  @media (max-width: 1024px) {
    .product-detail-grid {
      grid-template-columns: 1fr;
      gap: 3rem;
    }

    .product-image-container {
      position: relative;
      top: 0;
    }

    .info-grid {
      grid-template-columns: 1fr;
      gap: 3rem;
    }

    .info-image {
      order: -1;
    }
  }

  @media (max-width: 768px) {
    .hero-title {
      font-size: 2.5rem;
    }

    .hero-subtitle {
      font-size: 1.125rem;
    }

    .hero-features {
      gap: 1.5rem;
    }

    .hero-feature {
      font-size: 1rem;
    }

    .product-name {
      font-size: 2rem;
    }

    .product-weight {
      font-size: 1.25rem;
    }

    .product-price {
      font-size: 2.5rem;
    }

    .info-text h2 {
      font-size: 2rem;
    }

    .info-stats {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .storage-section h2 {
      font-size: 2rem;
    }

    .storage-grid {
      grid-template-columns: 1fr;
    }

    .cta-section h2 {
      font-size: 2rem;
    }

    .cta-buttons {
      flex-direction: column;
      align-items: center;
    }

    .cta-buttons .btn {
      width: 100%;
      max-width: 300px;
      justify-content: center;
    }
  }
</style>

<script define:vars={{ product }}>
  document.addEventListener('DOMContentLoaded', () => {
    const decreaseBtn = document.getElementById('decrease-qty');
    const increaseBtn = document.getElementById('increase-qty');
    const quantityInput = document.getElementById('quantity');
    const addToCartBtn = document.querySelector('.add-to-cart');

    // Miktar artır/azalt
    decreaseBtn?.addEventListener('click', () => {
      const currentValue = parseInt(quantityInput.value);
      if (currentValue > 1) {
        quantityInput.value = (currentValue - 1).toString();
      }
    });

    increaseBtn?.addEventListener('click', () => {
      const currentValue = parseInt(quantityInput.value);
      const maxStock = product.stock || 99;
      if (currentValue < maxStock) {
        quantityInput.value = (currentValue + 1).toString();
      }
    });

    // Sepete ekle
    addToCartBtn?.addEventListener('click', () => {
      const quantity = parseInt(quantityInput.value);

      let cart = JSON.parse(localStorage.getItem('cart') || '[]');

      const existingItem = cart.find(item => item.id === product.id);

      if (existingItem) {
        existingItem.quantity += quantity;
      } else {
        cart.push({
          id: product.id,
          slug: product.slug,
          name: product.name,
          price: product.price,
          quantity: quantity,
          unit: product.unit,
          image: product.images?.[0] || '/assets/image/placeholder.jpg',
          category: 'kavurma'
        });
      }

      localStorage.setItem('cart', JSON.stringify(cart));
      window.dispatchEvent(new Event('cartUpdated'));

      // Görsel geri bildirim
      const btn = addToCartBtn;
      const originalHTML = btn.innerHTML;
      btn.innerHTML = '✓ Sepete Eklendi';
      btn.style.background = '#10b981';

      setTimeout(() => {
        btn.innerHTML = originalHTML;
        btn.style.background = '';
      }, 2000);
    });
  });
</script>