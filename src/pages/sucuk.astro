---
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import ProductCard from '../components/ProductCard.astro';
import { supabase } from '../lib/supabase';

// Supabase'den Sucuk kategorisindeki ürünleri çek
const { data: products, error } = await supabase
  .from('products')
  .select('*')
  .eq('category', 'Sucuk')
  .eq('is_active', true)
  .order('name', { ascending: true });

if (error) {
  console.error('Supabase hatası:', error);
}
---

<BaseLayout
  title="Kayseri Sucuğu - Pastırma Adası"
  description="Geleneksel yöntemlerle üretilen, farklı şekil ve boyutlarda Kayseri sucuğu çeşitlerimiz."
>
  <Header slot="header" />

  <section class="hero-section">
    <div class="hero-overlay"></div>
    <div class="hero-content">
      <h1 class="hero-title">Kayseri Sucuğu</h1>
      <p class="hero-subtitle">
        Özenle seçilmiş dana etinden, özel baharat karışımımızla hazırlanan geleneksel Kayseri sucuklarımız
      </p>
      <div class="hero-features">
        <div class="feature">
          <svg width="20" height="20" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
          </svg>
          100% Dana Eti
        </div>
        <div class="feature">
          <svg width="20" height="20" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
          </svg>
          Özel Baharat
        </div>
        <div class="feature">
          <svg width="20" height="20" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
          </svg>
          Doğal Kurutma
        </div>
      </div>
    </div>
  </section>

  <section class="products-section">
    <div class="container">
      <div class="section-header">
        <h2>Sucuk Çeşitlerimiz</h2>
        <p>Farklı form ve boyutlarda, her damak tadına uygun sucuklar</p>
      </div>

      {products && products.length > 0 ? (
        <div class="products-grid">
          {products.map((product, index) => (
            <ProductCard
              id={product.id.toString()}
              slug={product.slug}
              name={product.name}
              price={product.price}
              images={product.images}
              unit={product.unit}
              description={product.description}
              variants={product.variants}
              index={index}
            />
          ))}
        </div>
      ) : (
        <div class="no-products">
          <p>Şu anda bu kategoride ürün bulunmamaktadır.</p>
        </div>
      )}
    </div>
  </section>

  <!-- Cart Modal -->
  <div id="cart-modal" class="cart-modal">
    <div class="modal-content">
      <button class="modal-close" aria-label="Kapat">
        <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>

      <div class="modal-body">
        <img id="modal-product-image" src="" alt="" class="modal-product-image" />
        <h3 id="modal-product-name"></h3>

        <div class="variant-selector" id="variant-selector-container">
          <label>Gramaj Seçin:</label>
          <div id="variant-options" class="variant-options"></div>
        </div>

        <div class="quantity-selector">
          <label>Adet:</label>
          <div class="quantity-controls">
            <button class="qty-btn qty-minus">-</button>
            <input type="number" class="qty-input" value="1" min="1" />
            <button class="qty-btn qty-plus">+</button>
          </div>
        </div>

        <div class="modal-price">
          <span class="price-label">Toplam:</span>
          <span id="modal-total-price" class="total-price">0₺</span>
        </div>

        <button id="confirm-add-cart" class="btn-confirm-cart">Sepete Ekle</button>
      </div>
    </div>
  </div>

  <!-- Success Notification -->
  <div id="success-notification" class="success-notification">
    <div class="success-content">
      <div class="success-icon">
        <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
        </svg>
      </div>
      <p class="success-message">Ürün sepete eklendi!</p>
      <div class="success-buttons">
        <a href="/sepet" class="btn-success btn-go-cart">Sepete Git</a>
        <button id="continue-shopping" class="btn-success btn-continue">Alışverişe Devam</button>
      </div>
    </div>
  </div>

  <section class="info-section">
    <div class="container">
      <div class="info-grid">
        <div class="info-card">
          <div class="info-icon">
            <svg width="32" height="32" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
          </div>
          <h3>Helal Sertifikalı</h3>
          <p>Tüm ürünlerimiz helal kesim ve hijyenik üretim standartlarına uygundur.</p>
        </div>
        <div class="info-card">
          <div class="info-icon">
            <svg width="32" height="32" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"/>
            </svg>
          </div>
          <h3>Vakumlu Paket</h3>
          <p>Ürünlerimiz vakumlu ambalajda, tazeliğini koruyarak gönderilir.</p>
        </div>
        <div class="info-card">
          <div class="info-icon">
            <svg width="32" height="32" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
          </div>
          <h3>Uzun Raf Ömrü</h3>
          <p>Doğru saklama koşullarında uzun süre taze kalır.</p>
        </div>
      </div>
    </div>
  </section>

  <Footer slot="footer" />
</BaseLayout>

<style>
  .hero-section {
    position: relative;
    background: linear-gradient(135deg, #0891b2 0%, #06b6d4 50%, #22d3ee 100%);
    padding: 5rem 1rem;
    text-align: center;
    color: white;
    min-height: 400px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .hero-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(circle at center, transparent 0%, rgba(0,0,0,0.15) 100%);
  }

  .hero-content {
    position: relative;
    z-index: 2;
    max-width: 800px;
    padding: 0 20px;
  }

  .hero-title {
    font-size: 48px;
    font-weight: 800;
    margin: 0 0 16px 0;
    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
  }

  .hero-subtitle {
    font-size: 18px;
    line-height: 1.6;
    margin: 0 0 32px 0;
    opacity: 0.95;
  }

  .hero-features {
    display: flex;
    justify-content: center;
    gap: 32px;
    flex-wrap: wrap;
  }

  .feature {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 16px;
    font-weight: 600;
  }

  .products-section {
    padding: 80px 0;
    background: #f0fdfa;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .section-header {
    text-align: center;
    margin-bottom: 48px;
  }

  .section-header h2 {
    font-size: 36px;
    font-weight: 700;
    color: #134e4a;
    margin: 0 0 12px 0;
  }

  .section-header p {
    font-size: 18px;
    color: #0f766e;
    margin: 0;
  }

  .products-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 32px;
  }

  .no-products {
    text-align: center;
    padding: 60px 20px;
  }

  .no-products p {
    font-size: 18px;
    color: #0f766e;
  }

  /* Cart Modal */
  .cart-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.7);
    z-index: 10000;
    align-items: center;
    justify-content: center;
  }

  .cart-modal.active {
    display: flex;
  }

  .modal-content {
    background: white;
    border-radius: 20px;
    max-width: 500px;
    width: 90%;
    max-height: 90vh;
    overflow-y: auto;
    position: relative;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.3);
    animation: slideUp 0.3s ease;
  }

  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .modal-close {
    position: absolute;
    top: 20px;
    right: 20px;
    background: rgba(0, 0, 0, 0.1);
    border: none;
    cursor: pointer;
    color: #666;
    z-index: 10;
    width: 36px;
    height: 36px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s;
  }

  .modal-close:hover {
    background: rgba(0, 0, 0, 0.2);
    color: #333;
  }

  .modal-body {
    padding: 40px 30px 30px;
  }

  .modal-product-image {
    width: 100%;
    height: 250px;
    object-fit: cover;
    border-radius: 12px;
    margin-bottom: 20px;
  }

  .modal-body h3 {
    font-size: 1.5rem;
    margin-bottom: 25px;
    color: #134e4a;
    font-weight: 700;
  }

  .variant-selector,
  .quantity-selector {
    margin-bottom: 25px;
  }

  .variant-selector label,
  .quantity-selector label {
    display: block;
    font-weight: 600;
    margin-bottom: 12px;
    color: #0f766e;
    font-size: 0.95rem;
  }

  .variant-options {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
  }

  .variant-btn {
    padding: 12px 20px;
    border: 2px solid #0891b2;
    background: white;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s;
    font-weight: 600;
    color: #0891b2;
  }

  .variant-btn:hover {
    background: #f0fdfa;
    transform: translateY(-2px);
  }

  .variant-btn.active {
    background: linear-gradient(135deg, #0891b2, #06b6d4);
    color: white;
    border-color: #0891b2;
  }

  .quantity-controls {
    display: flex;
    align-items: center;
    gap: 15px;
  }

  .qty-btn {
    width: 44px;
    height: 44px;
    border: 2px solid #0891b2;
    background: white;
    border-radius: 8px;
    cursor: pointer;
    font-size: 1.3rem;
    font-weight: 700;
    color: #0891b2;
    transition: all 0.3s;
  }

  .qty-btn:hover {
    background: linear-gradient(135deg, #0891b2, #06b6d4);
    color: white;
    transform: scale(1.05);
  }

  .qty-input {
    width: 80px;
    height: 44px;
    text-align: center;
    border: 2px solid #0891b2;
    border-radius: 8px;
    font-size: 1.1rem;
    font-weight: 600;
    color: #134e4a;
  }

  .qty-input:focus {
    outline: none;
    border-color: #06b6d4;
  }

  .modal-price {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px;
    background: linear-gradient(135deg, #f0fdfa, #ccfbf1);
    border-radius: 12px;
    margin-bottom: 20px;
  }

  .price-label {
    font-size: 1.1rem;
    font-weight: 600;
    color: #0f766e;
  }

  .total-price {
    font-size: 1.8rem;
    font-weight: 800;
    color: #0891b2;
  }

  .btn-confirm-cart {
    width: 100%;
    padding: 16px;
    background: linear-gradient(135deg, #0891b2, #06b6d4);
    color: white;
    border: none;
    border-radius: 12px;
    font-size: 1.1rem;
    font-weight: 700;
    cursor: pointer;
    transition: all 0.3s;
    box-shadow: 0 4px 12px rgba(8, 145, 178, 0.3);
  }

  .btn-confirm-cart:hover {
    background: linear-gradient(135deg, #06b6d4, #22d3ee);
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(8, 145, 178, 0.4);
  }

  /* Success Notification */
  .success-notification {
    display: none;
    position: fixed;
    bottom: 30px;
    right: 30px;
    background: white;
    border-radius: 16px;
    padding: 25px;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);
    z-index: 10001;
    min-width: 350px;
    animation: slideInRight 0.4s ease;
  }

  .success-notification.active {
    display: block;
  }

  @keyframes slideInRight {
    from {
      opacity: 0;
      transform: translateX(100px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  .success-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }

  .success-icon {
    width: 60px;
    height: 60px;
    background: linear-gradient(135deg, #10b981, #059669);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 15px;
    animation: scaleIn 0.5s ease;
  }

  @keyframes scaleIn {
    0% {
      transform: scale(0);
    }
    50% {
      transform: scale(1.1);
    }
    100% {
      transform: scale(1);
    }
  }

  .success-icon svg {
    stroke: white;
    stroke-width: 3;
  }

  .success-message {
    font-size: 1.1rem;
    font-weight: 600;
    color: #134e4a;
    margin-bottom: 20px;
  }

  .success-buttons {
    display: flex;
    gap: 12px;
    width: 100%;
  }

  .btn-success {
    flex: 1;
    padding: 12px 20px;
    border: none;
    border-radius: 10px;
    font-size: 0.95rem;
    font-weight: 700;
    cursor: pointer;
    transition: all 0.3s;
    text-decoration: none;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
  }

  .btn-go-cart {
    background: linear-gradient(135deg, #0891b2, #06b6d4);
    color: white;
    box-shadow: 0 4px 12px rgba(8, 145, 178, 0.3);
  }

  .btn-go-cart:hover {
    background: linear-gradient(135deg, #06b6d4, #22d3ee);
    transform: translateY(-2px);
    box-shadow: 0 6px 16px rgba(8, 145, 178, 0.4);
  }

  .btn-continue {
    background: white;
    color: #0891b2;
    border: 2px solid #0891b2;
  }

  .btn-continue:hover {
    background: #f0fdfa;
    transform: translateY(-2px);
  }

  .info-section {
    padding: 80px 0;
    background: white;
  }

  .info-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 32px;
  }

  .info-card {
    text-align: center;
    padding: 32px;
    background: linear-gradient(135deg, #f0fdfa 0%, #ccfbf1 100%);
    border-radius: 16px;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    border: 2px solid #99f6e4;
  }

  .info-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 12px 32px rgba(6, 182, 212, 0.2);
  }

  .info-icon {
    width: 64px;
    height: 64px;
    margin: 0 auto 20px;
    border-radius: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, #0891b2 0%, #06b6d4 100%);
    color: white;
  }

  .info-card h3 {
    font-size: 22px;
    font-weight: 700;
    color: #134e4a;
    margin: 0 0 12px 0;
  }

  .info-card p {
    font-size: 16px;
    color: #0f766e;
    line-height: 1.6;
    margin: 0;
  }

  @media (max-width: 768px) {
    .hero-section {
      min-height: 300px;
      padding: 3rem 1rem;
    }

    .hero-title {
      font-size: 32px;
    }

    .hero-subtitle {
      font-size: 16px;
    }

    .hero-features {
      flex-direction: column;
      gap: 16px;
    }

    .products-section {
      padding: 60px 0;
    }

    .section-header h2 {
      font-size: 28px;
    }

    .products-grid {
      grid-template-columns: 1fr;
      gap: 24px;
    }

    .info-section {
      padding: 60px 0;
    }

    .info-grid {
      grid-template-columns: 1fr;
      gap: 24px;
    }

    .success-notification {
      bottom: 20px;
      right: 20px;
      left: 20px;
      min-width: auto;
    }

    .success-buttons {
      flex-direction: column;
    }

    .modal-body {
      padding: 30px 20px 20px;
    }
  }
</style>

<script>
  // Cart Modal & Success Notification
  const cartModal = document.getElementById('cart-modal');
  const successNotification = document.getElementById('success-notification');
  let selectedProduct: any = null;
  let selectedVariant: any = null;

  // ProductCard'dan gelen openCartModal eventi dinle
  document.addEventListener('openCartModal', (e: any) => {
    const product = e.detail;
    if (product) {
      selectedProduct = product;
      openCartModal(product);
    }
  });

  function openCartModal(product: any) {
    cartModal?.classList.add('active');
    document.body.style.overflow = 'hidden';

    const modalImage = document.getElementById('modal-product-image') as HTMLImageElement;
    const modalName = document.getElementById('modal-product-name');
    const variantOptions = document.getElementById('variant-options');
    const variantContainer = document.getElementById('variant-selector-container');

    if (modalImage) modalImage.src = product.image;
    if (modalName) modalName.textContent = product.name;

    // Varyant varsa göster
    if (variantContainer && product.variants && Array.isArray(product.variants) && product.variants.length > 0) {
      variantContainer.style.display = 'block';

      if (variantOptions) {
        variantOptions.innerHTML = '';
        product.variants.forEach((variant: any, index: number) => {
          const btn = document.createElement('button');
          btn.className = `variant-btn ${index === 0 ? 'active' : ''}`;
          btn.textContent = `${variant.label} - ${variant.price}₺`;
          btn.addEventListener('click', () => {
            document.querySelectorAll('.variant-btn').forEach(b => b.classList.remove('active'));
            btn.classList.add('active');
            selectedVariant = variant;
            updateTotalPrice();
          });
          variantOptions.appendChild(btn);
        });

        selectedVariant = product.variants[0];
      }
    } else {
      // Varyant yoksa gizle ve ürünün kendi fiyatını kullan
      if (variantContainer) variantContainer.style.display = 'none';
      selectedVariant = {
        label: product.unit || 'adet',
        price: product.price
      };
    }

    const qtyInput = document.querySelector('.qty-input') as HTMLInputElement;
    if (qtyInput) qtyInput.value = '1';

    updateTotalPrice();
  }

  function updateTotalPrice() {
    const qtyInput = document.querySelector('.qty-input') as HTMLInputElement;
    const totalPriceEl = document.getElementById('modal-total-price');

    if (qtyInput && totalPriceEl && selectedVariant) {
      const quantity = parseInt(qtyInput.value) || 1;
      const total = selectedVariant.price * quantity;
      totalPriceEl.textContent = `${total}₺`;
    }
  }

  // Quantity controls
  document.querySelector('.qty-minus')?.addEventListener('click', () => {
    const input = document.querySelector('.qty-input') as HTMLInputElement;
    if (input) {
      const currentValue = parseInt(input.value) || 1;
      if (currentValue > 1) {
        input.value = (currentValue - 1).toString();
        updateTotalPrice();
      }
    }
  });

  document.querySelector('.qty-plus')?.addEventListener('click', () => {
    const input = document.querySelector('.qty-input') as HTMLInputElement;
    if (input) {
      const currentValue = parseInt(input.value) || 1;
      input.value = (currentValue + 1).toString();
      updateTotalPrice();
    }
  });

  document.querySelector('.qty-input')?.addEventListener('input', updateTotalPrice);

  // Modal close
  document.querySelector('.modal-close')?.addEventListener('click', () => {
    cartModal?.classList.remove('active');
    document.body.style.overflow = '';
  });

  cartModal?.addEventListener('click', (e) => {
    if (e.target === cartModal) {
      cartModal.classList.remove('active');
      document.body.style.overflow = '';
    }
  });

  // Confirm add to cart
  document.getElementById('confirm-add-cart')?.addEventListener('click', () => {
    const qtyInput = document.querySelector('.qty-input') as HTMLInputElement;
    const quantity = parseInt(qtyInput?.value) || 1;

    if (selectedProduct && selectedVariant) {
      const cartItem = {
        id: `${selectedProduct.id}-${selectedVariant.label}`,
        productId: selectedProduct.id,
        name: `${selectedProduct.name} - ${selectedVariant.label}`,
        price: selectedVariant.price,
        image: selectedProduct.image,
        unit: selectedVariant.label,
        quantity: quantity
      };

      let cart = [];
      try {
        const cartData = localStorage.getItem('cart');
        cart = cartData ? JSON.parse(cartData) : [];
      } catch (e) {
        cart = [];
      }

      const existingItemIndex = cart.findIndex(
        (item: any) => item.id === cartItem.id
      );

      if (existingItemIndex > -1) {
        cart[existingItemIndex].quantity += quantity;
      } else {
        cart.push(cartItem);
      }

      localStorage.setItem('cart', JSON.stringify(cart));
      window.dispatchEvent(new Event('cartUpdated'));

      // Modal'ı kapat
      cartModal?.classList.remove('active');

      // Success notification göster
      successNotification?.classList.add('active');

      // 5 saniye sonra otomatik kapat
      setTimeout(() => {
        successNotification?.classList.remove('active');
        document.body.style.overflow = '';
      }, 5000);
    }
  });

  // Continue shopping button
  document.getElementById('continue-shopping')?.addEventListener('click', () => {
    successNotification?.classList.remove('active');
    document.body.style.overflow = '';
  });

  // ESC tuşu ile kapat
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
      if (cartModal?.classList.contains('active')) {
        cartModal.classList.remove('active');
        document.body.style.overflow = '';
      }
      if (successNotification?.classList.contains('active')) {
        successNotification.classList.remove('active');
        document.body.style.overflow = '';
      }
    }
  });
</script>