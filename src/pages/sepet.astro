---
import BaseLayout from "../layouts/BaseLayout.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
---

<BaseLayout title="Sepetim" description="Alƒ±≈üveri≈ü sepetinizi g√∂r√ºnt√ºleyin ve sipari≈üinizi tamamlayƒ±n.">
  <Header slot="header" />

  <section class="cart-section">
    <div class="cart-container">
      <h1>üõí Sepetim</h1>

      <div class="cart-grid">
        <div class="cart-items-area">
          <div id="cart-items"></div>
          <div id="empty-cart" class="empty hidden">
            <img src="/images/empty-cart.svg" alt="Bo≈ü sepet" width="140" />
            <h3>Sepetiniz bo≈ü</h3>
            <p>Hen√ºz √ºr√ºn eklemediniz. Alƒ±≈üveri≈üe ba≈ülayƒ±n!</p>
            <a href="/online-alisveris" class="btn-primary">√úr√ºnlere G√∂z At</a>
          </div>
        </div>

        <div class="cart-summary">
          <div class="card">
            <h2>üìã Sipari≈ü √ñzeti</h2>

            <div class="form-section">
              <h3>üë§ M√º≈üteri Bilgileri</h3>
              <form id="checkout-form">
                <div class="form-group">
                  <label for="buyer-email">E-posta *</label>
                  <input
                    type="email"
                    id="buyer-email"
                    placeholder="ornek@mail.com"
                    required
                  />
                </div>
                <div class="form-row">
                  <div class="form-group">
                    <label for="buyer-name">Ad *</label>
                    <input type="text" id="buyer-name" placeholder="Adƒ±nƒ±z" required />
                  </div>
                  <div class="form-group">
                    <label for="buyer-surname">Soyad *</label>
                    <input type="text" id="buyer-surname" placeholder="Soyadƒ±nƒ±z" required />
                  </div>
                </div>
              </form>
            </div>

            <div class="summary-details">
              <div class="summary-row"><span>Ara Toplam</span><span id="subtotal">0‚Ç∫</span></div>
              <div class="summary-row"><span>Kargo</span><span id="shipping">0‚Ç∫</span></div>
              <div class="summary-row total"><strong>Toplam</strong><strong id="total">0‚Ç∫</strong></div>
            </div>

            <button id="checkout-btn" class="btn-primary btn-full">üí≥ √ñdemeye Ge√ß</button>
            <a href="/online-alisveris" class="back-link">‚Üê Alƒ±≈üveri≈üe Devam Et</a>
          </div>
        </div>
      </div>
    </div>
  </section>

  <Footer slot="footer" />
</BaseLayout>

<style>
.cart-section { background: #fafafa; padding: 3rem 1rem; }
.cart-container { max-width: 1100px; margin: 0 auto; }
h1 { text-align: center; color: #b91c1c; margin-bottom: 2rem; }
.cart-grid { display: grid; grid-template-columns: 1fr 360px; gap: 2rem; }
.card { background: white; border-radius: 14px; padding: 2rem; box-shadow: 0 5px 20px rgba(0,0,0,0.05); }
.form-group { display: flex; flex-direction: column; margin-bottom: 1rem; }
.form-group label { font-weight: 600; margin-bottom: 0.5rem; color: #333; }
.form-group input { padding: 0.8rem; border: 1px solid #ddd; border-radius: 8px; font-size: 1rem; }
.form-row { display: flex; gap: 1rem; }
.btn-primary { background: linear-gradient(135deg, #dc2626, #b91c1c); color: #fff; border: none; padding: 1rem 1.5rem; border-radius: 10px; font-weight: 600; width: 100%; cursor: pointer; transition: 0.2s ease; }
.btn-primary:hover { transform: translateY(-2px); box-shadow: 0 6px 15px rgba(220,38,38,0.3); }
.back-link { display: block; margin-top: 1rem; text-align: center; color: #6b7280; text-decoration: none; }
.summary-row { display: flex; justify-content: space-between; padding: 0.4rem 0; border-bottom: 1px solid #eee; }
.summary-row.total { font-size: 1.2rem; color: #111; border-top: 2px solid #b91c1c; margin-top: 1rem; padding-top: 1rem; }
.empty { text-align: center; padding: 2rem; }
.hidden { display: none !important; }
.cart-item { display: flex; align-items: center; justify-content: space-between; padding: 1rem; border-bottom: 1px solid #eee; }
.item-img { width: 80px; height: 80px; border-radius: 8px; object-fit: cover; }
.item-info { flex: 1; margin-left: 1rem; }
.qty-controls button { border: none; background: #f3f4f6; padding: 0.3rem 0.8rem; border-radius: 6px; cursor: pointer; }
.qty-controls button:hover { background: #e5e7eb; }
@media (max-width: 768px) { .cart-grid { grid-template-columns: 1fr; } }
</style>

<script>
interface CartItem {
  id: number;
  name: string;
  price: number;
  image: string;
  unit: string;
  quantity: number;
}

let cart: CartItem[] = [];

function loadCart() {
  cart = JSON.parse(localStorage.getItem("cart") || "[]");
  renderCart();
  updateSummary();
}

function renderCart() {
  const cartEl = document.getElementById("cart-items");
  const emptyEl = document.getElementById("empty-cart");
  const btn = document.getElementById("checkout-btn") as HTMLButtonElement;

  if (!cartEl || !emptyEl) return;

  if (cart.length === 0) {
    cartEl.innerHTML = "";
    emptyEl.classList.remove("hidden");
    btn.disabled = true;
    return;
  }

  emptyEl.classList.add("hidden");
  btn.disabled = false;

  cartEl.innerHTML = cart
    .map(
      (item, i) => `
      <div class="cart-item">
        <img src="${item.image}" alt="${item.name}" class="item-img" />
        <div class="item-info">
          <h4>${item.name}</h4>
          <p>${item.price}‚Ç∫ / ${item.unit}</p>
          <div class="qty-controls">
            <button onclick="changeQty(${i}, -1)">‚àí</button>
            <span>${item.quantity}</span>
            <button onclick="changeQty(${i}, 1)">+</button>
          </div>
        </div>
        <div class="item-total">${(item.price * item.quantity).toFixed(2)}‚Ç∫</div>
      </div>`
    )
    .join("");
}

// global hale getirilmi≈ü fonksiyon
window.changeQty = function (i, delta) {
  cart[i].quantity = Math.max(1, cart[i].quantity + delta);
  saveCart();
};

function saveCart() {
  localStorage.setItem("cart", JSON.stringify(cart));
  renderCart();
  updateSummary();
}

function calculateSubtotal() {
  return cart.reduce((sum, item) => sum + item.price * item.quantity, 0);
}

function updateSummary() {
  const subtotal = calculateSubtotal();
  const shipping = subtotal >= 1000 ? 0 : 50;
  const total = subtotal + shipping;
  document.getElementById("subtotal").textContent = subtotal.toFixed(2) + "‚Ç∫";
  document.getElementById("shipping").textContent = shipping === 0 ? "√úcretsiz" : shipping + "‚Ç∫";
  document.getElementById("total").textContent = total.toFixed(2) + "‚Ç∫";
}

document.getElementById("checkout-btn")?.addEventListener("click", async () => {
  const email = (document.getElementById("buyer-email") as HTMLInputElement).value.trim();
  const name = (document.getElementById("buyer-name") as HTMLInputElement).value.trim();
  const surname = (document.getElementById("buyer-surname") as HTMLInputElement).value.trim();

  if (!email || !email.includes("@")) {
    alert("L√ºtfen ge√ßerli bir e-posta adresi girin.");
    return;
  }

  // üíæ M√º≈üteri bilgilerini localStorage'a kaydet
  localStorage.setItem("lastOrderEmail", email);
  localStorage.setItem("lastOrderName", name);
  localStorage.setItem("lastOrderSurname", surname);

  // üß© √úr√ºnleri backend‚Äôin beklediƒüi formata d√∂n√º≈üt√ºr
  const items = cart.map((x, i) => ({
    id: `BI${i + 1}`,
    name: x.name,
    category1: "Et √úr√ºnleri",
    itemType: "PHYSICAL",
    price: (x.price * x.quantity).toFixed(2),
  }));

  // üöÄ API'ye g√∂nderilecek payload
  const payload = {
    items, // ‚úÖ backend ile birebir uyumlu
    buyer: { name, surname, email },
    shippingAddress: { city: "Kayseri", address: "Kayseri, T√ºrkiye" },
    billingAddress: { city: "Kayseri", address: "Kayseri, T√ºrkiye" },
  };

  // üì® √ñdeme isteƒüi g√∂nder
  const res = await fetch("/api/create-payment", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(payload),
  });

  const data = await res.json();

  if (data.paymentPageUrl) {
    window.location.href = data.paymentPageUrl;
  } else {
    alert("√ñdeme ba≈ülatƒ±lamadƒ±: " + (data.error || "Bilinmeyen hata"));
  }
});


document.addEventListener("DOMContentLoaded", loadCart);
</script>
