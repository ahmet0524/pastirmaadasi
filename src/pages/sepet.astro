---
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

// Türkiye'nin tüm şehirleri
const cities = [
  "Adana", "Adıyaman", "Afyonkarahisar", "Ağrı", "Aksaray", "Amasya", "Ankara", "Antalya",
  "Ardahan", "Artvin", "Aydın", "Balıkesir", "Bartın", "Batman", "Bayburt", "Bilecik",
  "Bingöl", "Bitlis", "Bolu", "Burdur", "Bursa", "Çanakkale", "Çankırı", "Çorum",
  "Denizli", "Diyarbakır", "Düzce", "Edirne", "Elazığ", "Erzincan", "Erzurum", "Eskişehir",
  "Gaziantep", "Giresun", "Gümüşhane", "Hakkari", "Hatay", "Iğdır", "Isparta", "İstanbul",
  "İzmir", "Kahramanmaraş", "Karabük", "Karaman", "Kars", "Kastamonu", "Kayseri", "Kilis",
  "Kırıkkale", "Kırklareli", "Kırşehir", "Kocaeli", "Konya", "Kütahya", "Malatya", "Manisa",
  "Mardin", "Mersin", "Muğla", "Muş", "Nevşehir", "Niğde", "Ordu", "Osmaniye",
  "Rize", "Sakarya", "Samsun", "Şanlıurfa", "Siirt", "Sinop", "Sivas", "Şırnak",
  "Tekirdağ", "Tokat", "Trabzon", "Tunceli", "Uşak", "Van", "Yalova", "Yozgat", "Zonguldak"
];
---

<BaseLayout title="Sepetim" description="Alışveriş sepetinizi görüntüleyin ve sipariş verin">
  <Header slot="header" />

  <section class="cart-page">
    <div class="container">
      <div class="page-header">
        <h1>🛒 Sepetim</h1>
        <p class="page-subtitle">Sipariş bilgilerinizi girin ve ödemeye geçin</p>
      </div>

      <div class="cart-layout">
        <div class="cart-items-section">
          <div id="cart-items" class="cart-items"></div>

          <div id="empty-cart" class="empty-cart hidden">
            <div class="empty-cart-icon">
              <svg width="120" height="120" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
              </svg>
            </div>
            <h3>Sepetiniz Boş</h3>
            <p>Alışverişe başlamak için ürünlerimize göz atın</p>
            <a href="/online-alisveris" class="btn btn-primary btn-large">Alışverişe Başla</a>
          </div>
        </div>

        <div class="cart-summary">
          <div class="summary-card">
            <h2 class="summary-title">📋 Sipariş Özeti</h2>

            <!-- Müşteri Bilgileri -->
            <div class="customer-info-section">
              <h3 class="section-title">
                <svg width="20" height="20" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"/>
                </svg>
                Kişisel Bilgiler
              </h3>
              <div class="form-row">
                <div class="form-group">
                  <label for="buyer-name">Ad *</label>
                  <input type="text" id="buyer-name" placeholder="Adınız" required />
                </div>
                <div class="form-group">
                  <label for="buyer-surname">Soyad *</label>
                  <input type="text" id="buyer-surname" placeholder="Soyadınız" required />
                </div>
              </div>

              <div class="form-group">
                <label for="buyer-email">E-posta *</label>
                <input type="email" id="buyer-email" placeholder="ornek@mail.com" required />
              </div>

              <div class="form-group">
                <label for="buyer-phone">Telefon *</label>
                <input type="tel" id="buyer-phone" placeholder="5XX XXX XX XX" maxlength="10" required />
                <small>0 olmadan 10 haneli telefon numarası</small>
              </div>

              <div class="form-group">
                <label for="buyer-identity">TC Kimlik No *</label>
                <input type="text" id="buyer-identity" placeholder="XXXXXXXXXXX" maxlength="11" required />
                <small>11 haneli TC kimlik numarası</small>
              </div>
            </div>

            <!-- Teslimat Adresi -->
            <div class="customer-info-section">
              <h3 class="section-title">
                <svg width="20" height="20" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"/>
                </svg>
                Teslimat Adresi
              </h3>
              <div class="form-group">
                <label for="buyer-address">Adres *</label>
                <textarea id="buyer-address" placeholder="Açık adresinizi giriniz (Mahalle, sokak, bina no, daire no)" rows="3" required></textarea>
              </div>

              <div class="form-row">
                <div class="form-group">
                  <label for="buyer-city">Şehir *</label>
                  <select id="buyer-city" required>
                    <option value="">Şehir Seçin</option>
                    {cities.map(city => (
                      <option value={city} selected={city === 'Kayseri'}>{city}</option>
                    ))}
                  </select>
                </div>
                <div class="form-group">
                  <label for="buyer-zipcode">Posta Kodu</label>
                  <input type="text" id="buyer-zipcode" placeholder="38000" />
                </div>
              </div>
            </div>

            <!-- Kupon -->
            <div class="coupon-section">
              <label for="coupon-input" class="section-title">
                <svg width="20" height="20" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M2 6a2 2 0 012-2h12a2 2 0 012 2v2a2 2 0 100 4v2a2 2 0 01-2 2H4a2 2 0 01-2-2v-2a2 2 0 100-4V6z"/>
                </svg>
                İndirim Kuponu
              </label>
              <div class="coupon-input-group">
                <input type="text" id="coupon-input" placeholder="Kupon kodunuz" />
                <button id="apply-coupon" class="btn btn-secondary">Uygula</button>
              </div>
              <p id="coupon-message" class="coupon-message hidden"></p>
            </div>

            <!-- Toplam -->
            <div class="summary-details">
              <div class="summary-row">
                <span>Ara Toplam</span>
                <span id="subtotal" class="price-value">0₺</span>
              </div>
              <div class="summary-row">
                <span>Kargo</span>
                <span id="shipping" class="price-value">0₺</span>
              </div>
              <div id="discount-row" class="summary-row discount-row hidden">
                <span>İndirim</span>
                <span id="discount" class="price-value">0₺</span>
              </div>
            </div>

            <div class="summary-total">
              <span>Toplam</span>
              <span id="total">0₺</span>
            </div>

            <button id="checkout-btn" class="btn btn-primary btn-full btn-large" disabled>
              <span id="checkout-btn-text">💳 Ödemeye Geç</span>
            </button>

            <a href="/online-alisveris" class="continue-shopping">
              <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"/>
              </svg>
              Alışverişe Devam Et
            </a>
          </div>
        </div>
      </div>
    </div>
  </section>

  <Footer slot="footer" />
</BaseLayout>

<style>
.cart-page {
  padding: 4rem 0;
  min-height: 60vh;
  background: linear-gradient(135deg, var(--teal-50, #f0fdfa) 0%, var(--teal-100, #ccfbf1) 100%);
}

.container {
  max-width: 1400px;
  margin: 0 auto;
  padding: 0 2rem;
}

.page-header {
  text-align: center;
  margin-bottom: 3rem;
}

.page-header h1 {
  font-size: 2.5rem;
  color: var(--teal-900, #134e4a);
  margin-bottom: 0.5rem;
  font-weight: 800;
}

.page-subtitle {
  font-size: 1.1rem;
  color: var(--teal-700, #0f766e);
  margin: 0;
}

.cart-layout {
  display: grid;
  grid-template-columns: 1fr 480px;
  gap: 2.5rem;
  margin-top: 2rem;
}

.cart-items-section {
  min-height: 400px;
}

.empty-cart {
  text-align: center;
  padding: 5rem 2rem;
  background: white;
  border-radius: var(--radius-xl, 20px);
  box-shadow: var(--shadow, 0 4px 12px rgba(0,0,0,0.1));
}

.empty-cart-icon {
  margin-bottom: 2rem;
}

.empty-cart-icon svg {
  color: #d1d5db;
}

.empty-cart h3 {
  font-size: 1.8rem;
  color: var(--teal-900, #134e4a);
  margin-bottom: 1rem;
}

.empty-cart p {
  font-size: 1.1rem;
  color: var(--teal-700, #0f766e);
  margin-bottom: 2rem;
}

.hidden {
  display: none !important;
}

/* Cart Item Styles */
.cart-item {
  display: flex;
  gap: 1.25rem;
  padding: 1.25rem;
  background: white;
  border-radius: var(--radius-lg, 16px);
  margin-bottom: 1rem;
  box-shadow: var(--shadow, 0 4px 12px rgba(0,0,0,0.1));
  transition: transform var(--transition, 0.3s), box-shadow var(--transition, 0.3s);
  align-items: flex-start;
}

.cart-item:hover {
  box-shadow: var(--shadow-md, 0 4px 16px rgba(0,0,0,0.12));
  transform: translateY(-2px);
}

.cart-item-image {
  width: 110px;
  height: 110px;
  border-radius: var(--radius-md, 10px);
  overflow: hidden;
  flex-shrink: 0;
}

.cart-item-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.cart-item-info {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  min-width: 0;
}

.cart-item-info h3 {
  margin: 0;
  font-size: 1.1rem;
  font-weight: 700;
  color: var(--teal-900, #134e4a);
  line-height: 1.3;
}

.cart-item-price {
  font-size: 1.2rem;
  color: var(--emerald-800, #065f46);
  font-weight: 700;
}

.quantity-controls {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.qty-btn {
  width: 40px;
  height: 40px;
  font-size: 1.4rem;
  border: 2px solid var(--emerald-500, #10b981);
  color: var(--emerald-500, #10b981);
  background: white;
  border-radius: var(--radius-sm, 6px);
  cursor: pointer;
  transition: background var(--transition, 0.3s), color var(--transition, 0.3s), transform 0.15s;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: 700;
}

.qty-btn:hover {
  background: var(--emerald-500, #10b981);
  color: white;
}

.qty-btn:active {
  transform: scale(0.95);
}

.qty-amount {
  font-size: 1.3rem;
  min-width: 50px;
  text-align: center;
  font-weight: 700;
  color: var(--text-dark, #1a1a1a);
}

.cart-item-actions {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: flex-end;
  gap: 1rem;
  min-height: 100px;
}

.remove-btn {
  background: var(--red-100, #fee2e2);
  border: none;
  width: 36px;
  height: 36px;
  border-radius: var(--radius-sm, 8px);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background var(--transition, 0.3s), transform var(--transition, 0.3s), box-shadow var(--transition, 0.3s);
  font-size: 1.25rem;
}

.remove-btn:hover {
  background: var(--red-200, #fecaca);
  transform: scale(1.1) rotate(8deg);
  box-shadow: 0 3px 10px rgba(239, 68, 68, 0.3);
}

.cart-item-total {
  font-size: 1.3rem;
  color: var(--emerald-700, #047857);
  font-weight: 800;
}

/* Summary Card */
.summary-card {
  background: white;
  padding: 2rem;
  border-radius: var(--radius-xl, 20px);
  box-shadow: var(--shadow, 0 4px 12px rgba(0,0,0,0.1));
  position: sticky;
  top: 100px;
  max-height: calc(100vh - 120px);
  overflow-y: auto;
}

.summary-title {
  margin: 0 0 2rem 0;
  font-size: 1.75rem;
  font-weight: 800;
  color: var(--teal-900, #134e4a);
  padding-bottom: 1rem;
  border-bottom: 3px solid var(--teal-50, #f0fdfa);
}

.customer-info-section,
.coupon-section {
  margin-bottom: 2rem;
  padding-bottom: 2rem;
  border-bottom: 2px solid var(--teal-50, #f0fdfa);
}

.section-title {
  font-size: 1.1rem;
  margin-bottom: 1.25rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-weight: 700;
  color: var(--teal-700, #0f766e);
}

.section-title svg {
  flex-shrink: 0;
}

.form-group {
  margin-bottom: 1.25rem;
}

.form-group label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 600;
  font-size: 0.95rem;
  color: var(--teal-900, #134e4a);
}

.form-group input,
.form-group textarea,
.form-group select {
  width: 100%;
  padding: 0.875rem 1rem;
  border: 2px solid var(--border-color, #e5e7eb);
  border-radius: var(--radius-md, 10px);
  font-size: 1rem;
  font-family: inherit;
  transition: border-color var(--transition, 0.3s), box-shadow var(--transition, 0.3s);
  background: white;
}

.form-group input:focus,
.form-group textarea:focus,
.form-group select:focus {
  outline: none;
  border-color: var(--primary, #0891b2);
  box-shadow: 0 0 0 3px rgba(8, 145, 178, 0.1);
}

.form-group small {
  display: block;
  margin-top: 0.5rem;
  color: var(--text-light, #718096);
  font-size: 0.875rem;
}

.form-group select {
  cursor: pointer;
}

.form-group textarea {
  resize: vertical;
  min-height: 90px;
}

.form-row {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
}

.coupon-input-group {
  display: flex;
  gap: 0.75rem;
}

.coupon-input-group input {
  flex: 1;
  padding: 0.875rem 1rem;
  border: 2px solid var(--border-color, #e5e7eb);
  border-radius: var(--radius-md, 10px);
  font-size: 1rem;
}

.coupon-input-group input:focus {
  outline: none;
  border-color: var(--primary, #0891b2);
  box-shadow: 0 0 0 3px rgba(8, 145, 178, 0.1);
}

.btn-secondary {
  padding: 0.875rem 1.5rem;
  background: linear-gradient(135deg, #f59e0b, #f97316);
  color: white;
  border: none;
  border-radius: var(--radius-md, 10px);
  font-weight: 700;
  cursor: pointer;
  transition: background var(--transition, 0.3s), transform var(--transition, 0.3s);
  white-space: nowrap;
}

.btn-secondary:hover {
  background: linear-gradient(135deg, #f97316, #ea580c);
  transform: translateY(-2px);
}

.coupon-message {
  margin-top: 0.75rem;
  padding: 0.75rem;
  border-radius: var(--radius-md, 10px);
  font-size: 0.95rem;
  font-weight: 600;
}

.coupon-message.success {
  background: #d1fae5;
  color: var(--emerald-800, #065f46);
}

.coupon-message.error {
  background: var(--red-100, #fee2e2);
  color: var(--red-800, #991b1b);
}

.summary-details {
  margin-top: 1.5rem;
  padding-top: 1.5rem;
  border-top: 2px solid var(--teal-50, #f0fdfa);
}

.summary-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.875rem 0;
  font-size: 1.05rem;
}

.summary-row span:first-child {
  color: var(--teal-700, #0f766e);
  font-weight: 600;
}

.price-value {
  font-size: 1.15rem;
  font-weight: 700;
  color: var(--teal-900, #134e4a);
}

.discount-row {
  color: var(--emerald-600, #059669);
}

.discount-row .price-value {
  color: var(--emerald-600, #059669);
}

.summary-total {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1.5rem 0;
  font-size: 1.5rem;
  font-weight: 800;
  border-top: 3px solid var(--teal-900, #134e4a);
  margin-top: 1.5rem;
  color: var(--teal-900, #134e4a);
}

.summary-total span:last-child {
  color: var(--primary, #0891b2);
  font-size: 1.75rem;
}

.btn {
  padding: 0.875rem 1.75rem;
  border: none;
  border-radius: var(--radius-md, 10px);
  font-weight: 700;
  cursor: pointer;
  transition: background var(--transition, 0.3s), transform var(--transition, 0.3s), box-shadow var(--transition, 0.3s);
  text-decoration: none;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

.btn-primary {
  background: linear-gradient(135deg, var(--primary, #0891b2), #06b6d4);
  color: white;
  box-shadow: 0 4px 12px rgba(8, 145, 178, 0.3);
}

.btn-primary:hover:not(:disabled) {
  background: linear-gradient(135deg, #06b6d4, #22d3ee);
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(8, 145, 178, 0.4);
}

.btn-primary:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.btn-full {
  width: 100%;
  margin-top: 1.5rem;
}

.btn-large {
  padding: 1.125rem 2rem;
  font-size: 1.15rem;
}

.continue-shopping {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  margin-top: 1rem;
  color: var(--teal-700, #0f766e);
  text-decoration: none;
  font-weight: 600;
  transition: color var(--transition, 0.3s), gap var(--transition, 0.3s);
}

.continue-shopping:hover {
  color: var(--primary, #0891b2);
  gap: 0.75rem;
}

@media (max-width: 1024px) {
  .cart-layout {
    grid-template-columns: 1fr;
  }
  .summary-card {
    position: static;
    max-height: none;
  }
}

@media (max-width: 768px) {
  .page-header h1 {
    font-size: 2rem;
  }
  .cart-item {
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    padding: 1.5rem;
  }
  .cart-item-image {
    width: 120px;
    height: 120px;
  }
  .cart-item-info {
    width: 100%;
    align-items: center;
    text-align: center;
  }
  .cart-item-info h3 {
    font-size: 1.15rem;
  }
  .cart-item-price {
    font-size: 1.1rem;
  }
  .quantity-controls {
    justify-content: center;
  }
  .cart-item-actions {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    min-height: auto;
    padding-top: 1rem;
    border-top: 1px solid var(--teal-50, #f0fdfa);
  }
  .cart-item-total {
    font-size: 1.35rem;
  }
  .qty-btn {
    width: 44px;
    height: 44px;
    font-size: 1.3rem;
  }
  .qty-amount {
    font-size: 1.3rem;
    min-width: 50px;
  }
  .remove-btn {
    width: 44px;
    height: 44px;
  }
  .form-row {
    grid-template-columns: 1fr;
  }
  .summary-card {
    padding: 1.5rem;
  }
  .coupon-input-group {
    flex-direction: column;
  }
  .btn-secondary {
    width: 100%;
  }
}

@media (max-width: 480px) {
  .cart-item {
    padding: 1.25rem;
  }
  .cart-item-image {
    width: 100px;
    height: 100px;
  }
  .cart-item-info h3 {
    font-size: 1.05rem;
  }
  .cart-item-price {
    font-size: 1rem;
  }
  .cart-item-total {
    font-size: 1.25rem;
  }
  .qty-btn {
    width: 40px;
    height: 40px;
    font-size: 1.2rem;
  }
  .qty-amount {
    font-size: 1.2rem;
    min-width: 45px;
  }
}
</style>

<script>
interface CartItem {
  id: string;
  productId: string;
  name: string;
  price: number;
  image: string;
  unit: string;
  quantity: number;
}

let cart: CartItem[] = [];
let discountPercent = 0;
const coupons: Record<string, number> = { HOSGELDIN10: 10, YENI15: 15, KAYSER20: 20 };

(window as any).renderCart = function renderCart() {
  const cartContainer = document.getElementById('cart-items');
  const emptyCart = document.getElementById('empty-cart');
  const checkoutBtn = document.getElementById('checkout-btn') as HTMLButtonElement | null;

  if (!cartContainer || !emptyCart) return;

  if (cart.length === 0) {
    cartContainer.innerHTML = '';
    emptyCart.classList.remove('hidden');
    if (checkoutBtn) checkoutBtn.disabled = true;
    return;
  }

  emptyCart.classList.add('hidden');
  if (checkoutBtn) checkoutBtn.disabled = false;

  cartContainer.innerHTML = cart.map((item, index) => `
    <div class="cart-item">
      <div class="cart-item-image">
        <img src="${item.image}" alt="${item.name}" loading="lazy">
      </div>
      <div class="cart-item-info">
        <h3>${item.name}</h3>
        <p class="cart-item-price">${item.price.toFixed(2)}₺ / ${item.unit}</p>
        <div class="quantity-controls">
          <button class="qty-btn decrease-qty" data-index="${index}" aria-label="Azalt">−</button>
          <span class="qty-amount">${item.quantity}</span>
          <button class="qty-btn increase-qty" data-index="${index}" aria-label="Artır">+</button>
        </div>
      </div>
      <div class="cart-item-actions">
        <button class="remove-btn" data-index="${index}" title="Sepetten Çıkar" aria-label="Sil">🗑️</button>
        <p class="cart-item-total">${(item.price * item.quantity).toFixed(2)}₺</p>
      </div>
    </div>
  `).join('');

  document.querySelectorAll('.increase-qty').forEach(btn => {
    btn.addEventListener('click', e => {
      const index = parseInt((e.currentTarget as HTMLElement).dataset.index || '0');
      cart[index].quantity++;
      saveCart();
    });
  });

  document.querySelectorAll('.decrease-qty').forEach(btn => {
    btn.addEventListener('click', e => {
      const index = parseInt((e.currentTarget as HTMLElement).dataset.index || '0');
      if (cart[index].quantity > 1) {
        cart[index].quantity--;
        saveCart();
      }
    });
  });

  document.querySelectorAll('.remove-btn').forEach(btn => {
    btn.addEventListener('click', e => {
      const index = parseInt((e.currentTarget as HTMLElement).dataset.index || '0');
      if (confirm('Bu ürünü sepetten çıkarmak istediğinize emin misiniz?')) {
        cart.splice(index, 1);
        saveCart();
      }
    });
  });
}

function saveCart() {
  localStorage.setItem('cart', JSON.stringify(cart));
  (window as any).renderCart();
  updateSummary();
  window.dispatchEvent(new Event('cartUpdated'));
}

function loadCart() {
  cart = JSON.parse(localStorage.getItem('cart') || '[]');
  (window as any).renderCart();
  updateSummary();
}

function calculateSubtotal(): number {
  return cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
}

function updateSummary() {
  const subtotal = calculateSubtotal();
  const shipping = subtotal >= 1000 ? 0 : 50;
  const discount = (subtotal * discountPercent) / 100;
  const total = subtotal + shipping - discount;

  const subtotalEl = document.getElementById('subtotal');
  const shippingEl = document.getElementById('shipping');
  const discountEl = document.getElementById('discount');
  const discountRowEl = document.getElementById('discount-row');
  const totalEl = document.getElementById('total');

  if (subtotalEl) subtotalEl.textContent = `${subtotal.toFixed(2)}₺`;
  if (shippingEl) shippingEl.textContent = shipping === 0 ? 'Ücretsiz' : `${shipping.toFixed(2)}₺`;
  if (discountEl) discountEl.textContent = `-${discount.toFixed(2)}₺`;
  if (discountRowEl) discountRowEl.classList.toggle('hidden', discount === 0);
  if (totalEl) totalEl.textContent = `${total.toFixed(2)}₺`;
}

function formatPhone(phone: string): string {
  const cleaned = phone.replace(/\D/g, '');
  if (cleaned.startsWith('0')) {
    return cleaned.substring(1);
  }
  return cleaned;
}

async function handleCheckout() {
  if (cart.length === 0) {
    alert('Sepetiniz boş!');
    return;
  }

  const emailInput = document.getElementById('buyer-email') as HTMLInputElement;
  const nameInput = document.getElementById('buyer-name') as HTMLInputElement;
  const surnameInput = document.getElementById('buyer-surname') as HTMLInputElement;
  const phoneInput = document.getElementById('buyer-phone') as HTMLInputElement;
  const identityInput = document.getElementById('buyer-identity') as HTMLInputElement;
  const addressInput = document.getElementById('buyer-address') as HTMLTextAreaElement;
  const citySelect = document.getElementById('buyer-city') as HTMLSelectElement;
  const zipcodeInput = document.getElementById('buyer-zipcode') as HTMLInputElement;

  const email = emailInput?.value.trim();
  const name = nameInput?.value.trim();
  const surname = surnameInput?.value.trim();
  const phone = phoneInput?.value.trim();
  const identity = identityInput?.value.trim();
  const address = addressInput?.value.trim();
  const city = citySelect?.value.trim();
  const zipcode = zipcodeInput?.value.trim() || '38000';

  if (!email || !name || !surname || !phone || !identity || !address || !city) {
    alert('Lütfen tüm zorunlu alanları doldurun!');
    return;
  }

  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  if (!emailRegex.test(email)) {
    alert('Lütfen geçerli bir e-posta adresi girin!');
    return;
  }

  const cleanedPhone = formatPhone(phone);
  if (cleanedPhone.length !== 10) {
    alert('Telefon numarası 10 haneli olmalıdır (0 olmadan)!\nÖrnek: 5XX XXX XX XX');
    return;
  }

  if (identity.length !== 11 || !/^\d{11}$/.test(identity)) {
    alert('TC Kimlik numarası 11 haneli olmalıdır!');
    return;
  }

  localStorage.setItem('lastOrderEmail', email);
  localStorage.setItem('lastOrderName', name);
  localStorage.setItem('lastOrderSurname', surname);
  localStorage.setItem('lastOrderPhone', cleanedPhone);
  localStorage.setItem('lastOrderIdentity', identity);
  localStorage.setItem('lastOrderAddress', address);
  localStorage.setItem('lastOrderCity', city);
  localStorage.setItem('lastOrderZipcode', zipcode);
  localStorage.setItem('lastOrderCart', JSON.stringify(cart));

  const btn = document.getElementById('checkout-btn') as HTMLButtonElement;
  const btnText = document.getElementById('checkout-btn-text');

  if (!btn || !btnText) return;

  btn.disabled = true;
  btnText.textContent = '⏳ Ödeme hazırlanıyor...';

  const subtotal = calculateSubtotal();
  const shipping = subtotal >= 1000 ? 0 : 50;
  const discount = (subtotal * discountPercent) / 100;

  const items = cart.map((item, i) => ({
    id: `ITEM_${i + 1}`,
    name: item.name,
    category1: 'Et Ürünleri',
    price: (item.price * item.quantity).toFixed(2),
  }));

  const buyer = {
    name,
    surname,
    email,
    gsmNumber: `+90${cleanedPhone}`,
    identityNumber: identity,
    registrationAddress: `${address}, ${city}`,
    ip: '85.34.78.112',
    city: city,
    country: 'Turkey',
    zipCode: zipcode,
  };

  const shippingAddress = {
    contactName: `${name} ${surname}`,
    city: city,
    country: 'Turkey',
    address: `${address}, ${city}`,
    zipCode: zipcode,
  };

  const billingAddress = {
    contactName: `${name} ${surname}`,
    city: city,
    country: 'Turkey',
    address: `${address}, ${city}`,
    zipCode: zipcode,
  };

  try {
    const response = await fetch('/api/create-payment', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        items,
        buyer,
        shippingAddress,
        billingAddress,
      }),
    });

    if (!response.ok) {
      const errorText = await response.text();
      console.error('❌ API Hatası:', errorText);
      throw new Error('Ödeme başlatılamadı. Lütfen tekrar deneyin.');
    }

    const data = await response.json();

    if (data.success && data.paymentPageUrl) {
      window.location.href = data.paymentPageUrl;
    } else {
      throw new Error(data.error || 'Ödeme başlatılamadı!');
    }
  } catch (err) {
    console.error('❌ Ödeme hatası:', err);
    const errorMessage = err instanceof Error ? err.message : 'Bilinmeyen bir hata oluştu';
    alert('Ödeme Hatası: ' + errorMessage);

    btn.disabled = false;
    btnText.textContent = '💳 Ödemeye Geç';
  }
}

document.addEventListener('DOMContentLoaded', () => {
  loadCart();

  const checkoutBtn = document.getElementById('checkout-btn');
  if (checkoutBtn) {
    checkoutBtn.addEventListener('click', handleCheckout);
  }

  const phoneInput = document.getElementById('buyer-phone');
  phoneInput?.addEventListener('input', (e) => {
    const input = e.target as HTMLInputElement;
    input.value = input.value.replace(/\D/g, '').substring(0, 10);
  });

  const identityInput = document.getElementById('buyer-identity');
  identityInput?.addEventListener('input', (e) => {
    const input = e.target as HTMLInputElement;
    input.value = input.value.replace(/\D/g, '').substring(0, 11);
  });

  const applyCouponBtn = document.getElementById('apply-coupon');
  if (applyCouponBtn) {
    applyCouponBtn.addEventListener('click', () => {
      const couponInput = document.getElementById('coupon-input') as HTMLInputElement;
      const couponMessage = document.getElementById('coupon-message');
      const coupon = couponInput?.value.toUpperCase().trim();

      if (!coupon || !couponMessage) return;

      if (coupons[coupon]) {
        discountPercent = coupons[coupon];
        couponMessage.textContent = `✅ %${discountPercent} indirim uygulandı!`;
        couponMessage.className = 'coupon-message success';
        couponMessage.classList.remove('hidden');
        updateSummary();
      } else {
        couponMessage.textContent = '❌ Geçersiz kupon kodu!';
        couponMessage.className = 'coupon-message error';
        couponMessage.classList.remove('hidden');
      }
    });
  }
});
</script>