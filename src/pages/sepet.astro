// sepet.astro içindeki checkout button event listener'ını bununla değiştirin

document.getElementById('checkout-btn')?.addEventListener('click', async () => {
  if (cart.length === 0) return;

  const emailInput = document.getElementById('buyer-email') as HTMLInputElement;
  const nameInput = document.getElementById('buyer-name') as HTMLInputElement;
  const surnameInput = document.getElementById('buyer-surname') as HTMLInputElement;

  if (!emailInput.value || !nameInput.value || !surnameInput.value) {
    alert('Lütfen tüm bilgileri doldurun!');
    return;
  }

  // Email validation
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  if (!emailRegex.test(emailInput.value)) {
    alert('Lütfen geçerli bir e-posta adresi girin!');
    return;
  }

  // ⚠️ ÖNEMLİ: Email'i localStorage'a kaydet
  localStorage.setItem('lastOrderEmail', emailInput.value);
  localStorage.setItem('lastOrderName', nameInput.value);
  localStorage.setItem('lastOrderSurname', surnameInput.value);

  console.log('💾 Email localStorage\'a kaydedildi:', emailInput.value);

  const checkoutBtn = document.getElementById('checkout-btn') as HTMLButtonElement;
  const btnText = document.getElementById('checkout-btn-text');

  checkoutBtn.disabled = true;
  if (btnText) btnText.textContent = '⏳ Ödeme hazırlanıyor...';

  try {
    const subtotal = calculateSubtotal();
    const shipping = subtotal >= 1000 ? 0 : 50;
    const discount = (subtotal * discountPercent) / 100;
    const total = subtotal + shipping - discount;

    // 🔥 DOGRU FORMAT - İyzico'nun beklediği format
    const basketItems = cart.map((item, index) => ({
      id: `BI${index + 1}`,
      name: item.name,
      category1: 'Et Ürünleri',
      itemType: 'PHYSICAL',
      price: (item.price * item.quantity).toFixed(2), // ⚠️ String olmalı
    }));

    // ⚠️ GSM numarası +90 formatında olmalı
    const gsmNumber = '+905555555555'; // Varsayılan numara, isterseniz form'a ekleyin

    const paymentData = {
      items: basketItems, // ⚠️ "items" olmalı, "basketItems" değil
      buyer: {
        id: 'BY' + Date.now(),
        name: nameInput.value,
        surname: surnameInput.value,
        email: emailInput.value,
        gsmNumber: gsmNumber, // ⚠️ Zorunlu alan
        identityNumber: '11111111111', // ⚠️ Test için sabit
        registrationAddress: 'Kayseri, Türkiye',
        ip: '85.34.78.112', // ⚠️ Gerçek IP'yi alabilirsiniz
        city: 'Kayseri',
        country: 'Turkey',
      },
      shippingAddress: {
        contactName: `${nameInput.value} ${surnameInput.value}`,
        city: 'Kayseri',
        country: 'Turkey',
        address: 'Kayseri, Türkiye', // ⚠️ Boş bırakılamaz
      },
      billingAddress: {
        contactName: `${nameInput.value} ${surnameInput.value}`,
        city: 'Kayseri',
        country: 'Turkey',
        address: 'Kayseri, Türkiye', // ⚠️ Boş bırakılamaz
      },
    };

    console.log('📤 Ödeme verisi gönderiliyor:', paymentData);

    const response = await fetch('/api/create-payment', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(paymentData),
    });

    const data = await response.json();
    console.log('📥 Backend yanıtı:', data);

    if (data.success && data.paymentPageUrl) {
      console.log('✅ Ödeme sayfasına yönlendiriliyor...');
      window.location.href = data.paymentPageUrl;
    } else {
      console.error('❌ Ödeme başlatılamadı:', data);
      alert(`Ödeme başlatılamadı: ${data.error || 'Bilinmeyen hata'}`);
      checkoutBtn.disabled = false;
      if (btnText) btnText.textContent = '💳 Ödemeye Geç';
    }
  } catch (error) {
    console.error('❌ Ödeme hatası:', error);
    alert('Sunucu hatası. Lütfen daha sonra tekrar deneyin.');
    checkoutBtn.disabled = false;
    if (btnText) btnText.textContent = '💳 Ödemeye Geç';
  }
});