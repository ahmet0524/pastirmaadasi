---
// src/components/ProductCard.astro
interface Props {
  id: string;
  slug: string;
  name: string;
  price: number;
  images: string[] | string;
  unit: string;
  description?: string;
  variants?: any[];
}

const { id, slug, name, price, images, unit, description, variants } = Astro.props;
const mainImage = Array.isArray(images) ? images[0] : images;
---

<div class="product-card" data-product-id={id}>
  <div class="product-image-wrapper">
    <img src={mainImage || '/assets/image/placeholder.jpg'} alt={name} loading="lazy" class="product-image" />
    <div class="product-overlay">
      <a href={`/urun/${slug}`} class="btn-view-product">
        <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"/>
        </svg>
        Ürünü İncele
      </a>
    </div>
  </div>

  <div class="product-info">
    <h3 class="product-name">{name}</h3>
    {description && <p class="product-description">{description}</p>}
    <div class="product-footer">
      <div class="product-price-wrapper">
        <span class="product-price">{price}₺</span>
        <span class="product-unit">/ {unit}</span>
      </div>
      <button
        class="btn-add-to-cart"
        data-product-id={id}
        data-product-name={name}
        data-product-price={price}
        data-product-image={mainImage}
        data-product-unit={unit}
        data-product-variants={JSON.stringify(variants || [])}
      >
        <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
        </svg>
        <span>Sepete Ekle</span>
      </button>
    </div>
  </div>
</div>

<style>
  .product-card {
    background: white;
    border-radius: 16px;
    overflow: hidden;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    transition: all 0.3s ease;
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  .product-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 12px 32px rgba(0, 0, 0, 0.12);
  }

  .product-image-wrapper {
    position: relative;
    padding-top: 100%;
    overflow: hidden;
    background: #f0fdfa;
  }

  .product-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
  }

  .product-card:hover .product-image {
    transform: scale(1.1);
  }

  .product-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(8, 145, 178, 0.95) 0%, rgba(6, 182, 212, 0.95) 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .product-card:hover .product-overlay {
    opacity: 1;
  }

  .btn-view-product {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 12px 24px;
    background: white;
    color: #0891b2;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 700;
    font-size: 16px;
    transition: all 0.3s ease;
    transform: translateY(10px);
  }

  .product-card:hover .btn-view-product {
    transform: translateY(0);
  }

  .btn-view-product:hover {
    background: #0891b2;
    color: white;
    transform: translateY(-2px);
  }

  .product-info {
    padding: 20px;
    display: flex;
    flex-direction: column;
    flex: 1;
  }

  .product-name {
    font-size: 18px;
    font-weight: 700;
    color: #134e4a;
    margin: 0 0 8px 0;
    line-height: 1.4;
  }

  .product-description {
    font-size: 14px;
    color: #0f766e;
    margin: 0 0 16px 0;
    line-height: 1.5;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
  }

  .product-footer {
    margin-top: auto;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 12px;
  }

  .product-price-wrapper {
    display: flex;
    align-items: baseline;
    gap: 4px;
  }

  .product-price {
    font-size: 24px;
    font-weight: 700;
    color: #0891b2;
  }

  .product-unit {
    font-size: 14px;
    color: #0f766e;
  }

  .btn-add-to-cart {
    padding: 10px 16px;
    background: linear-gradient(135deg, #0891b2 0%, #06b6d4 100%);
    color: white;
    border: none;
    border-radius: 8px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 14px;
    white-space: nowrap;
  }

  .btn-add-to-cart:hover {
    background: linear-gradient(135deg, #0e7490 0%, #0891b2 100%);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(8, 145, 178, 0.3);
  }

  @media (max-width: 768px) {
    .product-info {
      padding: 16px;
    }

    .product-name {
      font-size: 16px;
    }

    .product-price {
      font-size: 20px;
    }

    .btn-add-to-cart {
      padding: 8px 12px;
      font-size: 13px;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Sepete ekle butonlarını dinle
    document.querySelectorAll('.btn-add-to-cart').forEach(button => {
      button.addEventListener('click', (e) => {
        e.preventDefault();
        const btn = e.currentTarget as HTMLButtonElement;

        const productData = {
          id: btn.dataset.productId,
          name: btn.dataset.productName,
          price: parseFloat(btn.dataset.productPrice || '0'),
          image: btn.dataset.productImage,
          unit: btn.dataset.productUnit,
          variants: JSON.parse(btn.dataset.productVariants || '[]')
        };

        // Modal'ı aç
        openCartModal(productData);
      });
    });
  });

  function openCartModal(product: any) {
    // Mevcut modal varsa kaldır
    const existingModal = document.getElementById('cart-modal');
    if (existingModal) {
      existingModal.remove();
    }

    // Modal HTML'i oluştur
    const modalHTML = `
      <div id="cart-modal" class="modal-overlay">
        <div class="modal-content">
          <button class="modal-close" onclick="document.getElementById('cart-modal').remove()">
            <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
            </svg>
          </button>

          <div class="modal-body">
            <div class="modal-image">
              <img src="${product.image || '/assets/image/placeholder.jpg'}" alt="${product.name}" />
            </div>

            <div class="modal-details">
              <h2>${product.name}</h2>

              ${product.variants && product.variants.length > 0 ? `
                <div class="variant-section">
                  <label>Miktar Seçin:</label>
                  <div class="variant-buttons">
                    ${product.variants.map((v: any, i: number) => `
                      <button
                        class="variant-btn ${i === 0 ? 'active' : ''}"
                        data-value="${v.value}"
                        data-label="${v.label}"
                        data-price="${v.price}"
                      >
                        ${v.label}
                        <span class="variant-price">${v.price}₺</span>
                      </button>
                    `).join('')}
                  </div>
                </div>
              ` : ''}

              <div class="quantity-section">
                <label>Adet:</label>
                <div class="quantity-controls">
                  <button class="qty-btn" id="modal-decrease">-</button>
                  <input type="number" id="modal-quantity" value="1" min="1" readonly />
                  <button class="qty-btn" id="modal-increase">+</button>
                </div>
              </div>

              <div class="modal-price">
                <span>Toplam:</span>
                <span id="modal-total">${product.price}₺</span>
              </div>

              <button class="btn-modal-add" id="modal-add-to-cart">
                <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z"/>
                </svg>
                Sepete Ekle
              </button>

              <div class="cart-action-buttons" id="cart-action-buttons" style="display: none;">
                <a href="/sepet" class="btn-go-cart">
                  <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"/>
                  </svg>
                  Sepete Git
                </a>
                <button class="btn-continue-shopping" onclick="document.getElementById('cart-modal').remove()">
                  <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                  </svg>
                  Alışverişe Devam Et
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    `;

    document.body.insertAdjacentHTML('beforeend', modalHTML);

    // Modal için değişkenler
    let selectedVariant = product.variants && product.variants.length > 0 ? product.variants[0] : null;
    let quantity = 1;
    const modal = document.getElementById('cart-modal');

    // Fiyat güncelleme fonksiyonu
    function updateModalPrice() {
      const unitPrice = selectedVariant ? selectedVariant.price : product.price;
      const total = unitPrice * quantity;
      const totalElement = document.getElementById('modal-total');
      if (totalElement) {
        totalElement.textContent = total.toFixed(2) + '₺';
      }
    }

    // Varyant seçimi
    modal?.querySelectorAll('.variant-btn').forEach(btn => {
      btn.addEventListener('click', (e) => {
        modal.querySelectorAll('.variant-btn').forEach(b => b.classList.remove('active'));
        (e.currentTarget as HTMLElement).classList.add('active');

        const target = e.currentTarget as HTMLButtonElement;
        selectedVariant = {
          value: parseFloat(target.dataset.value || '0'),
          label: target.dataset.label,
          price: parseFloat(target.dataset.price || '0')
        };

        updateModalPrice();
      });
    });

    // Miktar artır/azalt
    document.getElementById('modal-increase')?.addEventListener('click', () => {
      quantity++;
      const qtyInput = document.getElementById('modal-quantity') as HTMLInputElement;
      if (qtyInput) qtyInput.value = quantity.toString();
      updateModalPrice();
    });

    document.getElementById('modal-decrease')?.addEventListener('click', () => {
      if (quantity > 1) {
        quantity--;
        const qtyInput = document.getElementById('modal-quantity') as HTMLInputElement;
        if (qtyInput) qtyInput.value = quantity.toString();
        updateModalPrice();
      }
    });

    // Sepete ekle
    document.getElementById('modal-add-to-cart')?.addEventListener('click', () => {
      const cart = JSON.parse(localStorage.getItem('cart') || '[]');

      const cartItem = {
        id: product.id,
        name: `${product.name}${selectedVariant ? ' - ' + selectedVariant.label : ''}`,
        price: selectedVariant ? selectedVariant.price : product.price,
        image: product.image,
        unit: selectedVariant ? selectedVariant.label : product.unit,
        quantity: quantity
      };

      const existingIndex = cart.findIndex((item: any) =>
        item.id === product.id && item.unit === cartItem.unit
      );

      if (existingIndex >= 0) {
        cart[existingIndex].quantity += quantity;
      } else {
        cart.push(cartItem);
      }

      localStorage.setItem('cart', JSON.stringify(cart));
      window.dispatchEvent(new Event('cartUpdated'));

      // Sepete ekle butonunu gizle ve aksiyon butonlarını göster
      const addBtn = document.getElementById('modal-add-to-cart');
      const actionButtons = document.getElementById('cart-action-buttons');

      if (addBtn) addBtn.style.display = 'none';
      if (actionButtons) actionButtons.style.display = 'flex';
    });

    // Modal dışına tıklayınca kapat
    modal?.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.remove();
      }
    });
  }
</script>

<style is:global>
  .modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 9999;
    padding: 20px;
    animation: fadeIn 0.3s ease;
  }

  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  .modal-content {
    background: white;
    border-radius: 20px;
    max-width: 800px;
    width: 100%;
    max-height: 90vh;
    overflow-y: auto;
    position: relative;
    animation: slideUp 0.3s ease;
  }

  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .modal-close {
    position: absolute;
    top: 16px;
    right: 16px;
    background: white;
    border: none;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 10;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
  }

  .modal-close:hover {
    background: #fee2e2;
    color: #dc2626;
    transform: rotate(90deg);
  }

  .modal-body {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 32px;
    padding: 32px;
  }

  .modal-image {
    border-radius: 16px;
    overflow: hidden;
    background: #f0fdfa;
  }

  .modal-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .modal-details h2 {
    font-size: 24px;
    color: #134e4a;
    margin: 0 0 24px 0;
  }

  .variant-section,
  .quantity-section {
    margin-bottom: 24px;
  }

  .variant-section label,
  .quantity-section label {
    display: block;
    font-weight: 700;
    margin-bottom: 12px;
    color: #134e4a;
  }

  .variant-buttons {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
    gap: 12px;
  }

  .variant-btn {
    padding: 12px;
    border: 2px solid #99f6e4;
    border-radius: 12px;
    background: white;
    cursor: pointer;
    transition: all 0.3s;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 4px;
    font-weight: 600;
    color: #0f766e;
  }

  .variant-btn:hover {
    border-color: #0891b2;
    background: #f0fdfa;
  }

  .variant-btn.active {
    border-color: #0891b2;
    background: linear-gradient(135deg, #f0fdfa 0%, #ccfbf1 100%);
    color: #0891b2;
  }

  .variant-price {
    font-size: 14px;
    color: #0891b2;
    font-weight: 700;
  }

  .quantity-controls {
    display: flex;
    align-items: center;
    gap: 16px;
  }

  .qty-btn {
    width: 48px;
    height: 48px;
    border: 2px solid #99f6e4;
    border-radius: 12px;
    background: white;
    font-size: 20px;
    font-weight: 700;
    cursor: pointer;
    transition: all 0.3s;
    color: #0891b2;
  }

  .qty-btn:hover {
    border-color: #0891b2;
    background: #f0fdfa;
  }

  #modal-quantity {
    width: 80px;
    height: 48px;
    text-align: center;
    font-size: 20px;
    font-weight: 700;
    border: 2px solid #99f6e4;
    border-radius: 12px;
    color: #0891b2;
  }

  .modal-price {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px;
    background: linear-gradient(135deg, #f0fdfa 0%, #ccfbf1 100%);
    border-radius: 12px;
    margin-bottom: 24px;
  }

  .modal-price span:first-child {
    font-size: 16px;
    font-weight: 600;
    color: #0f766e;
  }

  #modal-total {
    font-size: 28px;
    font-weight: 700;
    color: #0891b2;
  }

  .btn-modal-add {
    width: 100%;
    padding: 16px;
    background: linear-gradient(135deg, #0891b2 0%, #06b6d4 100%);
    color: white;
    border: none;
    border-radius: 12px;
    font-weight: 700;
    font-size: 16px;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
  }

  .btn-modal-add:hover {
    background: linear-gradient(135deg, #0e7490 0%, #0891b2 100%);
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(8, 145, 178, 0.3);
  }

  .cart-action-buttons {
    display: flex;
    gap: 12px;
    margin-top: 16px;
  }

  .btn-go-cart,
  .btn-continue-shopping {
    flex: 1;
    padding: 14px 20px;
    border-radius: 12px;
    font-weight: 700;
    font-size: 14px;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    text-decoration: none;
    border: none;
  }

  .btn-go-cart {
    background: linear-gradient(135deg, #0891b2 0%, #06b6d4 100%);
    color: white;
  }

  .btn-go-cart:hover {
    background: linear-gradient(135deg, #0e7490 0%, #0891b2 100%);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(8, 145, 178, 0.3);
  }

  .btn-continue-shopping {
    background: linear-gradient(135deg, #5eead4 0%, #2dd4bf 100%);
    color: #134e4a;
  }

  .btn-continue-shopping:hover {
    background: linear-gradient(135deg, #2dd4bf 0%, #14b8a6 100%);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(20, 184, 166, 0.3);
  }

  @media (max-width: 768px) {
    .modal-body {
      grid-template-columns: 1fr;
      gap: 24px;
      padding: 24px;
    }

    .variant-buttons {
      grid-template-columns: repeat(2, 1fr);
    }

    .modal-details h2 {
      font-size: 20px;
    }

    #modal-total {
      font-size: 24px;
    }

    .cart-action-buttons {
      flex-direction: column;
    }
  }
</style>