---
// src/components/Header.astro
import CategoryMenu from './CategoryMenu.astro';
---

<div class="header-container">
  <div class="header-content">
    <a href="/" class="logo">
      <img src="/assets/image/logo/Pastirma-Adasi-logo.webp" alt="Pastırma Adası" class="logo-img" />
    </a>

    <nav class="desktop-nav">
      <a href="/pastirma">Pastırma</a>
      <a href="/sucuk">Sucuk</a>
      <a href="/kavurma">Kavurma</a>
      <a href="/manti">Mantı</a>
      <div class="dropdown">
        <button class="dropdown-btn">
          Şarküteri
          <svg width="16" height="16" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
          </svg>
        </button>
        <div class="dropdown-content">
          <a href="/kategori/peynir">Peynir Çeşitlerimiz</a>
          <a href="/kategori/zeytin">Zeytin Çeşitlerimiz</a>
          <a href="/kategori/bal">Bal Çeşitlerimiz</a>
          <a href="/kategori/baharat">Baharat Çeşitlerimiz</a>
        </div>
      </div>
      <a href="/kayseri-serpme-kahvaltisi">Kayseri Kahvaltısı</a>
      <a href="/kayseri-sofrasi">Kayseri Sofrası</a>
    </nav>

    <div class="header-actions">
      <button id="search-btn" class="action-btn" aria-label="Ara">
        <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
        </svg>
      </button>
      <a href="/sepet" class="action-btn cart-btn" aria-label="Sepet">
        <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
        </svg>
        <span id="header-cart-count" class="cart-badge">0</span>
      </a>
    </div>

    <button id="mobile-menu-btn" class="mobile-menu-btn" aria-label="Menü">
      <span class="hamburger-line"></span>
      <span class="hamburger-line"></span>
      <span class="hamburger-line"></span>
    </button>
  </div>

  <!-- Mobile Menu -->
  <div id="mobile-menu" class="mobile-menu">
    <div class="mobile-menu-overlay"></div>
    <div class="mobile-menu-content">
      <div class="mobile-menu-header">
        <span class="mobile-menu-title">Menü</span>
        <button id="close-mobile-menu" class="close-btn" aria-label="Kapat">
          <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      <nav>
        <a href="/pastirma">Pastırma</a>
        <a href="/sucuk">Sucuk</a>
        <a href="/kavurma">Kavurma</a>
        <a href="/manti">Mantı</a>
        <a href="/kategori/peynir">Peynir Çeşitlerimiz</a>
        <a href="/kategori/baharat">Baharat Çeşitlerimiz</a>
        <a href="/kategori/zeytin">Zeytin Çeşitlerimiz</a>
        <a href="/kategori/bal">Bal Çeşitlerimiz</a>
        <a href="/kayseri-serpme-kahvaltisi">Kayseri Kahvaltısı</a>
        <a href="/kayseri-sofrasi">Kayseri Sofrası</a>
        <a href="/sepet" class="cart-link">
          <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
          </svg>
          <span>Sepetim (<span id="mobile-cart-count">0</span>)</span>
        </a>
      </nav>
    </div>
  </div>

  <!-- Search Modal -->
  <div id="search-modal" class="search-modal">
    <div class="search-modal-content">
      <div class="search-header">
        <h3>Ürün Ara</h3>
        <button id="close-search" class="close-btn" aria-label="Kapat">
          <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      <div class="search-input-wrapper">
        <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
        </svg>
        <input
          type="text"
          id="search-input"
          placeholder="Pastırma, sucuk, mantı..."
          autocomplete="off"
        />
      </div>
      <div id="search-results" class="search-results"></div>
    </div>
  </div>
</div>

<style>
  .header-container {
    width: 100%;
    background: white;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    position: sticky;
    top: 0;
    z-index: 100;
  }

  .header-content {
    max-width: 1400px;
    margin: 0 auto;
    padding: 1rem 2rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 2rem;
  }

  .logo {
    display: flex;
    align-items: center;
    text-decoration: none;
    transition: opacity 0.3s ease;
  }

  .logo-img {
    height: 50px;
    width: auto;
    object-fit: contain;
  }

  .logo:hover {
    opacity: 0.85;
  }

  @media (max-width: 768px) {
    .logo-img {
      height: 40px;
    }
  }

  .desktop-nav {
    display: none;
    align-items: center;
    gap: 2rem;
    flex: 1;
    justify-content: center;
  }

  .desktop-nav a {
    color: #1F2937;
    font-weight: 600;
    font-size: 1rem;
    transition: color 0.3s ease;
    position: relative;
    white-space: nowrap;
    padding: 0.5rem 0;
  }

  .desktop-nav a::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background: #0891B2;
    transition: width 0.3s ease;
  }

  .desktop-nav a:hover {
    color: #0891B2;
  }

  .desktop-nav a:hover::after {
    width: 100%;
  }

  /* Dropdown Menu */
  .dropdown {
    position: relative;
  }

  .dropdown-btn {
    background: none;
    border: none;
    color: #1F2937;
    font-weight: 600;
    font-size: 1rem;
    cursor: pointer;
    padding: 0.5rem 0;
    display: flex;
    align-items: center;
    gap: 0.25rem;
    transition: color 0.3s ease;
    white-space: nowrap;
  }

  .dropdown-btn:hover {
    color: #0891B2;
  }

  .dropdown-btn svg {
    transition: transform 0.3s ease;
  }

  .dropdown:hover .dropdown-btn svg {
    transform: rotate(180deg);
  }

  .dropdown-content {
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    background: white;
    min-width: 220px;
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
    border-radius: 12px;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    margin-top: 0.5rem;
    z-index: 100;
  }

  .dropdown:hover .dropdown-content {
    opacity: 1;
    visibility: visible;
    margin-top: 1rem;
  }

  .dropdown-content a {
    display: block;
    padding: 0.875rem 1.25rem;
    color: #1F2937;
    font-weight: 500;
    font-size: 0.9375rem;
    transition: all 0.2s ease;
    border-left: 3px solid transparent;
  }

  .dropdown-content a:first-child {
    border-radius: 12px 12px 0 0;
  }

  .dropdown-content a:last-child {
    border-radius: 0 0 12px 12px;
  }

  .dropdown-content a:hover {
    background: #F3F4F6;
    color: #0891B2;
    border-left-color: #0891B2;
    padding-left: 1.5rem;
  }

  .dropdown-content a::after {
    display: none;
  }

  .header-actions {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .action-btn {
    position: relative;
    background: none;
    border: none;
    padding: 0.5rem;
    color: #1F2937;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
  }

  .action-btn:hover {
    background: #F3F4F6;
    color: #0891B2;
  }

  /* Cart Badge */
  .cart-badge {
    position: absolute;
    top: 0;
    right: 0;
    background: linear-gradient(135deg, #DC2626, #B91C1C);
    color: white;
    font-size: 0.7rem;
    font-weight: 700;
    border-radius: 50%;
    min-width: 20px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 2px solid white;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    animation: badgePulse 2s infinite;
    padding: 0 4px;
  }

  @keyframes badgePulse {
    0%, 100% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.1);
    }
  }

  .cart-badge.updated {
    animation: badgeUpdate 0.5s ease;
  }

  @keyframes badgeUpdate {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.3);
    }
    100% {
      transform: scale(1);
    }
  }

  .mobile-menu-btn {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background: none;
    border: none;
    padding: 0.5rem;
    cursor: pointer;
    gap: 5px;
    width: 40px;
    height: 40px;
  }

  .hamburger-line {
    width: 24px;
    height: 2px;
    background: #1F2937;
    transition: all 0.3s ease;
    border-radius: 2px;
  }

  .mobile-menu-btn:hover .hamburger-line {
    background: #0891B2;
  }

  .mobile-menu-btn.active .hamburger-line:nth-child(1) {
    transform: translateY(7px) rotate(45deg);
  }

  .mobile-menu-btn.active .hamburger-line:nth-child(2) {
    opacity: 0;
  }

  .mobile-menu-btn.active .hamburger-line:nth-child(3) {
    transform: translateY(-7px) rotate(-45deg);
  }

  /* Mobile Menu */
  .mobile-menu {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1000;
    display: none;
  }

  .mobile-menu.active {
    display: block;
  }

  .mobile-menu-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(4px);
    animation: fadeIn 0.3s ease;
  }

  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  .mobile-menu-content {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    width: 85%;
    max-width: 320px;
    background: white;
    box-shadow: -4px 0 20px rgba(0, 0, 0, 0.1);
    animation: slideInRight 0.3s ease;
    display: flex;
    flex-direction: column;
  }

  @keyframes slideInRight {
    from { transform: translateX(100%); }
    to { transform: translateX(0); }
  }

  .mobile-menu-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem;
    border-bottom: 1px solid #E5E7EB;
  }

  .mobile-menu-title {
    font-size: 1.25rem;
    font-weight: 700;
    color: #1F2937;
  }

  .close-btn {
    background: none;
    border: none;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #6B7280;
    cursor: pointer;
    transition: all 0.3s;
  }

  .close-btn:hover {
    background: #F3F4F6;
    color: #1F2937;
  }

  .mobile-menu nav {
    display: flex;
    flex-direction: column;
    padding: 1rem 0;
    overflow-y: auto;
    flex: 1;
  }

  .mobile-menu nav a {
    padding: 1rem 1.5rem;
    color: #1F2937;
    transition: all 0.3s ease;
    font-weight: 500;
    font-size: 1rem;
    border-left: 3px solid transparent;
  }

  .mobile-menu nav a:hover,
  .mobile-menu nav a:active {
    background: #F3F4F6;
    color: #0891B2;
    border-left-color: #0891B2;
  }

  .mobile-menu nav a.cart-link {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-top: auto;
    border-top: 1px solid #E5E7EB;
    padding-top: 1.5rem;
    margin-top: 1rem;
  }

  /* Search Modal */
  .search-modal {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.7);
    backdrop-filter: blur(4px);
    z-index: 1001;
    display: none;
    align-items: flex-start;
    justify-content: center;
    padding: 2rem 1rem;
    overflow-y: auto;
  }

  .search-modal.active {
    display: flex;
  }

  .search-modal-content {
    background: white;
    border-radius: 12px;
    width: 100%;
    max-width: 600px;
    max-height: 80vh;
    overflow: hidden;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
    animation: modalSlideIn 0.3s ease;
  }

  @keyframes modalSlideIn {
    from {
      opacity: 0;
      transform: translateY(-50px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .search-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem;
    border-bottom: 1px solid #E5E7EB;
  }

  .search-header h3 {
    font-size: 1.25rem;
    margin: 0;
  }

  .search-input-wrapper {
    position: relative;
    padding: 1.5rem;
  }

  .search-input-wrapper svg {
    position: absolute;
    left: 2.5rem;
    top: 50%;
    transform: translateY(-50%);
    color: #6B7280;
  }

  #search-input {
    width: 100%;
    padding: 1rem 1rem 1rem 3rem;
    border: 2px solid #E5E7EB;
    border-radius: 10px;
    font-size: 1rem;
    transition: border-color 0.3s;
  }

  #search-input:focus {
    outline: none;
    border-color: #0891B2;
  }

  .search-results {
    max-height: 400px;
    overflow-y: auto;
    padding: 0 1.5rem 1.5rem;
  }

  .search-result-item {
    display: flex;
    gap: 1rem;
    padding: 1rem;
    border-radius: 10px;
    transition: background 0.3s;
    cursor: pointer;
    text-decoration: none;
    color: inherit;
  }

  .search-result-item:hover {
    background: #F3F4F6;
  }

  .search-result-img {
    width: 60px;
    height: 60px;
    border-radius: 8px;
    object-fit: cover;
  }

  .search-result-info h4 {
    font-size: 1rem;
    margin-bottom: 0.25rem;
  }

  .search-result-info p {
    font-size: 0.875rem;
    color: #6B7280;
    margin: 0;
  }

  .search-result-price {
    font-weight: 700;
    color: #0891B2;
  }

  .search-no-results {
    text-align: center;
    padding: 2rem;
    color: #6B7280;
  }

  @media (min-width: 1024px) {
    .desktop-nav {
      display: flex;
    }
    .mobile-menu-btn {
      display: none;
    }
  }

  @media (max-width: 768px) {
    .header-content {
      padding: 1rem;
    }

    .logo {
      font-size: 1.5rem;
    }

    .mobile-menu-content {
      width: 90%;
      max-width: 100%;
    }
  }
</style>

<script>
  // Mobile menu toggle
  const mobileMenuBtn = document.getElementById('mobile-menu-btn');
  const mobileMenu = document.getElementById('mobile-menu');
  const closeMobileMenu = document.getElementById('close-mobile-menu');
  const mobileMenuOverlay = document.querySelector('.mobile-menu-overlay');

  function openMobileMenu() {
    mobileMenu?.classList.add('active');
    mobileMenuBtn?.classList.add('active');
    document.body.style.overflow = 'hidden';
  }

  function closeMobileMenuFunc() {
    mobileMenu?.classList.remove('active');
    mobileMenuBtn?.classList.remove('active');
    document.body.style.overflow = '';
  }

  mobileMenuBtn?.addEventListener('click', openMobileMenu);
  closeMobileMenu?.addEventListener('click', closeMobileMenuFunc);
  mobileMenuOverlay?.addEventListener('click', closeMobileMenuFunc);

  // Close mobile menu on navigation
  document.querySelectorAll('.mobile-menu nav a').forEach(link => {
    link.addEventListener('click', closeMobileMenuFunc);
  });

  // Search modal
  const searchBtn = document.getElementById('search-btn');
  const searchModal = document.getElementById('search-modal');
  const closeSearch = document.getElementById('close-search');
  const searchInput = document.getElementById('search-input') as HTMLInputElement;
  const searchResults = document.getElementById('search-results');

  searchBtn?.addEventListener('click', () => {
    searchModal?.classList.add('active');
    searchInput?.focus();
  });

  closeSearch?.addEventListener('click', () => {
    searchModal?.classList.remove('active');
  });

  searchModal?.addEventListener('click', (e) => {
    if (e.target === searchModal) {
      searchModal.classList.remove('active');
    }
  });

  // Search functionality - Client-side
  let searchTimeout: NodeJS.Timeout;
  let allProducts: any[] = [];

  async function loadProducts() {
    try {
      const { createClient } = await import('@supabase/supabase-js');
      const supabase = createClient(
        import.meta.env.PUBLIC_SUPABASE_URL,
        import.meta.env.PUBLIC_SUPABASE_ANON_KEY
      );

      const { data } = await supabase
        .from('products')
        .select('id, name, slug, price, unit, images')
        .eq('is_active', true);

      allProducts = data || [];
      console.log('Ürünler yüklendi:', allProducts.length);
    } catch (error) {
      console.error('Ürün yükleme hatası:', error);
    }
  }

  // Sayfa yüklendiğinde ürünleri yükle
  if (typeof window !== 'undefined') {
    loadProducts();
  }

  searchInput?.addEventListener('input', (e) => {
    clearTimeout(searchTimeout);
    const query = (e.target as HTMLInputElement).value.trim().toLowerCase();

    if (query.length < 2) {
      if (searchResults) searchResults.innerHTML = '';
      return;
    }

    searchTimeout = setTimeout(() => {
      try {
        // Ürünler henüz yüklenmediyse
        if (allProducts.length === 0) {
          if (searchResults) {
            searchResults.innerHTML = `
              <div class="search-no-results">
                <p>Ürünler yükleniyor...</p>
              </div>
            `;
          }
          return;
        }

        // Client-side filtreleme
        const results = allProducts.filter(product =>
          product.name.toLowerCase().includes(query)
        ).slice(0, 10);

        if (searchResults) {
          if (results.length === 0) {
            searchResults.innerHTML = `
              <div class="search-no-results">
                <p>Sonuç bulunamadı</p>
                <p style="font-size: 0.875rem;">Farklı anahtar kelimeler deneyin</p>
              </div>
            `;
          } else {
            searchResults.innerHTML = results.map((product: any) => `
              <a href="/urun/${product.slug}" class="search-result-item">
                <img src="${product.images?.[0] || '/assets/image/placeholder.jpg'}" alt="${product.name}" class="search-result-img" />
                <div class="search-result-info">
                  <h4>${product.name}</h4>
                  <p class="search-result-price">${product.price}₺ / ${product.unit}</p>
                </div>
              </a>
            `).join('');
          }
        }
      } catch (error) {
        console.error('Arama hatası:', error);
        if (searchResults) {
          searchResults.innerHTML = '<div class="search-no-results"><p>Bir hata oluştu</p></div>';
        }
      }
    }, 300);
  });

  // Cart count update
  function updateHeaderCartCount() {
    try {
      const cart = JSON.parse(localStorage.getItem('cart') || '[]');
      const count = cart.reduce((sum: number, item: any) => sum + (item.quantity || 0), 0);

      // Desktop badge
      const badge = document.getElementById('header-cart-count');
      if (badge) {
        badge.textContent = count.toString();
        badge.classList.add('updated');
        setTimeout(() => badge.classList.remove('updated'), 500);
      }

      // Mobile badge
      const mobileBadge = document.getElementById('mobile-cart-count');
      if (mobileBadge) {
        mobileBadge.textContent = count.toString();
      }

      console.log('Sepet sayısı güncellendi:', count);
    } catch (error) {
      console.error('Sepet sayısı güncelleme hatası:', error);
    }
  }

  // İlk yükleme
  document.addEventListener('DOMContentLoaded', () => {
    updateHeaderCartCount();
    console.log('Header sepet sayısı başlatıldı');
  });

  // Cart güncellemelerini dinle
  window.addEventListener('cartUpdated', () => {
    console.log('Cart updated event alındı');
    updateHeaderCartCount();
  });

  // Storage değişikliklerini dinle (farklı sekmeler arası)
  window.addEventListener('storage', (e) => {
    if (e.key === 'cart') {
      console.log('Storage değişti, sepet sayısı güncelleniyor');
      updateHeaderCartCount();
    }
  });
</script>